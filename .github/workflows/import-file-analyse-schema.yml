name: "Import Data File and Analyse Schema: Migration Tests"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  import-data-file-analyse-schema-tests:
    strategy:
      matrix:
        version: [2.14.8.0-b17,2.17.2.0-b216,2.16.3.0-b43]
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: secret
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
    - uses: actions/checkout@v3

    - name: Install python3 and psycopg2
      run: |
        sudo apt install -y python3
        sudo apt install -y libpq-dev
        sudo pip3 install psycopg2

    - name: Run installer script
      run: |
        cd installer_scripts
        yes | ./install-yb-voyager --install-from-local-source --only-pg-support
      env:
        ON_INSTALLER_ERROR_OUTPUT_LOG: Y

    - name: Fetch debezium-server
      uses: docker://amazon/aws-cli:2.7.27
      with:
        args: s3 cp s3://voyager-automation-data/debezium-latest.tar.gz .
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.RAHULB_S3_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.RAHULB_S3_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: "us-west-2"
    
    - name: Unpack debezium-server
      run: |
        sudo mkdir -p /opt/yb-voyager
        sudo tar -xvzf debezium-latest.tar.gz -C /opt/yb-voyager/
        rm debezium-latest.tar.gz

    - name: Test PostgreSQL Connection
      run: |
        psql "postgresql://postgres:secret@127.0.0.1:5432/postgres" -c "SELECT version();"

    - name: Create PostgreSQL user
      run: |
        ./migtests/scripts/postgresql/create_pg_user

    - name: Start YugabyteDB cluster
      run: |
        docker pull yugabytedb/yugabyte:${{ matrix.version }}
        VERSION=${{ matrix.version }} docker-compose -f migtests/setup/yb-docker-compose.yaml up -d
        sleep 20

    - name: Test YugabyteDB connection
      run: |
        psql "postgresql://yugabyte:@127.0.0.1:5433/yugabyte" -c "SELECT version();"
    
    - name: Create YugabyteDB user
      run: |
        ./migtests/scripts/yugabytedb/create_yb_user

    - name: Enable yb-tserver-n1 name resolution
      run: |
        echo "127.0.0.1	yb-tserver-n1" | sudo tee -a /etc/hosts
        psql "postgresql://yugabyte@yb-tserver-n1:5433/yugabyte" -c "SELECT version();"

    - name: "TEST: import-data-file"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.RAHULB_S3_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.RAHULB_S3_SECRET_ACCESS_KEY }}
      run: migtests/tests/import-file/run-import-file-test

    - name: "TEST: analyze-schema"
      run: migtests/tests/analyze-schema/run-analyze-schema-test

