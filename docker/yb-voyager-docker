#!/bin/bash

argv=( "$@" )

if ! which docker > /dev/null; then
	echo "Could not find docker! Please install docker before proceeeding."
	exit 1
fi

if [[ $OSTYPE == 'darwin'* ]]
then
	platform="--platform=linux/amd64"
fi

i=0

exported_vars=""

while [ $i -lt $# ]
do
    if [[ ${argv[${i}]} == "--export-dir" || ${argv[${i}]} == "-e" ]]
	then
        j=$(( $i + 1))
		export_dir=${argv[${j}]}

		# If the OS is macOS
		if [[ $OSTYPE == 'darwin'* ]]; then

			# Delete the old volume and create a new one it its place attached to the user's export-dir
			docker volume rm voyager-export-dir
			docker volume create --driver local --opt type=none --opt device="${export_dir}" --opt o=bind voyager-export-dir 
		
			export_vol="-v voyager-export-dir:/export-dir"
		else
			export_vol="-v ${export_dir}:/export-dir"
		fi
		argv[$j]='/export-dir'
    fi
	
	if [[ ${argv[${i}]} == "--data-dir" ]]
	then 
		j=$(( $i + 1))
		data_dir=${argv[${j}]}

		# If the OS is macOS
		if [[ $OSTYPE == 'darwin'* ]]; then

			# Delete the old volume and create a new one it its place attached to the user's data-dir
			docker volume rm voyager-data-dir
			docker volume create --driver local --opt type=none --opt device="${data_dir}" --opt o=bind voyager-data-dir 
		
			data_vol="${vol} -v voyager-data-dir:/data-dir"
		else
			data_vol="${vol} -v ${data_dir}:/data-dir"
		fi
		argv[$j]='/data-dir'
	fi	

	if [[ ${argv[${i}]} == "--export-var" ]]
	then 
		j=$(( $i + 1))
		exported_vars="${exported_vars} -e ${argv[${j}]}"
		argv[$i]=''
		argv[$j]=''

    i=$(( $i + 1))
done

dockerCmd="docker run ${exported_vars} ${export_vol} ${data_vol} -it --network=host --rm --privileged ${platform} yugabytedb/yb-voyager yb-voyager ${argv[*]}"

# echo $dockerCmd

$dockerCmd
