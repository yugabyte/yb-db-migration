#!/usr/bin/env python3

import yb

def main():
	yb.run_checks(migration_completed_checks)


#=============================================================================

EXPECTED_ROW_COUNT = {
	'order': 5,
	'user': 5,
	'group': 5,
	'check': 5,
	'reserved_column': 5,
	'mixed_case_table_name_test':6,
	'case_sensitive_columns':6,
	'foo': 34,
}

EXPECTED_TEXT_LENGTHS = {
    1: 13,
    2: 13,
    3: 14,
    4: 14,
    5: 14,
    6: 16,
    7: 12,
    8: 23,
    9: 23,
    10: 24,
    11: 24,
    12: 24,
    13: 26,
    14: 23,
    15: 22,
    16: 23,
    17: 23,
    18: 23,
    19: 25,
    20: 22,
    21: 22,
    22: 23,
    23: 23,
    24: 23,
    25: 25,
    26: 35,
    27: 35,
    28: 36,
    29: 36,
    30: 36,
    31: 38,
    32: 13,
    33: 12,
    34: 24,
}
    

def migration_completed_checks(tgt):
	table_list = tgt.get_table_names("misc_tests")
	print("table_list:", table_list)
	assert len(table_list) == 13

	got_row_count = tgt.row_count_of_all_tables("misc_tests")
	for table_name, row_count in EXPECTED_ROW_COUNT.items():
		print(f"table_name: {table_name}, row_count: {got_row_count[table_name]}, expected row_count: {row_count}")
		assert row_count == got_row_count[table_name]
  
	for i in range(1, 35):
		text_len = tgt.get_text_length("id", i, "value", "foo", "misc_tests")
		expected_len = EXPECTED_TEXT_LENGTHS[i]
		print ("Text length for row %d: %d" % (i, text_len))
		assert text_len == expected_len


if __name__ == "__main__":
	main()
