#!/usr/bin/env python3

import yb

def main():
	yb.run_checks(file_import_done_checks)


EXPECTED = {
	"one_m_rows": 1000000,
	"survey": 41715,
 	"survey2": 41715,
 	"survey3": 41715,
	"smsa": 60,
	"t1_quote_char": 3,
	"t1_quote_escape_char1": 3,
 	"t1_quote_escape_char2": 3,
  	"t1_delimiter_escape_same":3,
  	"t1_newline":5,
   	"t1_quote_escape_dq": 3,
}

T1_TABLE_DATA = set([(1,None,None,"'Hello World'"), (2,None,None,"'Hello World'"), (3,None,None,"'Hello World'")])
T1_QUOTE_ESCAPE_DQ_DATA = set([(1,None,None,"\"Hello World\""), (2,None,None,"\"Hello World\""), (3,None,None,"\"Hello World\"")])
T1_NEWLINE_DATA = set([(1,None,None,"Hello World"), (2,None,None,"Hello\nWorld"), (3,None,None,"Hello	World"),
                       (4,None,None,"Hello\\nWorld"), (5,None,None,"Hello\\tWorld")])

def file_import_done_checks(tgt):
	got = tgt.row_count_of_all_tables()
	print(f"Row counts after import data file: {got}")
	assert got == EXPECTED
	
	t1_quote_char_data = tgt.fetch_all_table_rows("t1_quote_char")
	print(f"t1_quote_char_data: {t1_quote_char_data}\n, Expected data: {T1_TABLE_DATA}\n")
	assert t1_quote_char_data == T1_TABLE_DATA
	
	t1_quote_escape_char1_data = tgt.fetch_all_table_rows("t1_quote_escape_char1")
	print(f"t1_quote_escape_char1_data: {t1_quote_escape_char1_data}\nExpected data: {T1_TABLE_DATA}\n")
	assert t1_quote_escape_char1_data == T1_TABLE_DATA
 
	t1_quote_escape_char2_data = tgt.fetch_all_table_rows("t1_quote_escape_char2")
	print(f"t1_quote_escape_char2_data: {t1_quote_escape_char2_data}\nExpected data: {T1_TABLE_DATA}\n")
	assert t1_quote_escape_char2_data == T1_TABLE_DATA
  
	t1_delimiter_escape_same_data = tgt.fetch_all_table_rows("t1_delimiter_escape_same")
	print(f"t1_delimiter_escape_same_data: {t1_delimiter_escape_same_data}\nExpected data: {T1_TABLE_DATA}\n")
	assert t1_delimiter_escape_same_data == T1_TABLE_DATA
	
	t1_quote_escape_dq = tgt.fetch_all_table_rows("t1_quote_escape_dq")
	print(f"t1_quote_escape_dq: {t1_quote_escape_dq}\nExpected data: {T1_QUOTE_ESCAPE_DQ_DATA}\n")
	assert t1_quote_escape_dq == T1_QUOTE_ESCAPE_DQ_DATA
 
	t1_newline_data = tgt.fetch_all_table_rows("t1_newline")
	print(f"t1_newline_data: {t1_newline_data}\nExpected data: {T1_NEWLINE_DATA}\n")
	assert t1_newline_data == T1_NEWLINE_DATA


if __name__ == "__main__":
	main()
