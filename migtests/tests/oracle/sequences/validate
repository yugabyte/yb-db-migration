#!/usr/bin/env python3

import yb
import os

def main():
	yb.run_checks(migration_completed_checks)


#=============================================================================

EXPECTED_ROW_COUNT = {
	'identity_demo_generated_by_def_inc_by': 3,        
	'identity_demo_generated_always': 2,        
	'identity_demo_generated_by_def': 3,        
	'identity_demo_generated_always_start_with': 1,        
	'identity_demo_generated_by_def_st_with_inc_by': 3,        
	'identity_demo_generated_by_def_start_with': 3,        
	'identity_demo_with_null': 2
}

EXPECTED_TABLE_SUM = {
	'identity_demo_generated_by_def_inc_by': 105,        
	'identity_demo_generated_always': 3,        
	'identity_demo_generated_by_def': 8,        
	'identity_demo_generated_always_start_with': 101,        
	'identity_demo_generated_by_def_st_with_inc_by': 115,        
	'identity_demo_generated_by_def_start_with': 205,        
	'identity_demo_with_null': 3
}

EXPECTED_TABLE_SUM_AFTER_INSERT = {
	'identity_demo_generated_by_def_inc_by': 2227,        
	'identity_demo_generated_always': 25,        
	'identity_demo_generated_by_def': 30,        
	'identity_demo_generated_always_start_with': 223,        
	'identity_demo_generated_by_def_st_with_inc_by': 2241,        
	'identity_demo_generated_by_def_start_with': 327,        
	'identity_demo_with_null': 25
}
if os.environ.get('BETA_FAST_DATA_EXPORT') == '1':
	EXPECTED_TABLE_SUM_AFTER_INSERT = {
	'identity_demo_generated_by_def_inc_by': 308,        
	'identity_demo_generated_always': 6,        
	'identity_demo_generated_by_def': 14,        
	'identity_demo_generated_always_start_with': 203,        
	'identity_demo_generated_by_def_st_with_inc_by': 322,        
	'identity_demo_generated_by_def_start_with': 308,        
	'identity_demo_with_null': 6
}

QUERIES_CHECK = {
	'GENERATED ALWAYS': {
		'query': "insert into identity_demo_generated_always values(5,'TEST');",
		'code': "428C9"
	},
	'GENERATED ALWAYS START WITH': {
		'query': "insert into identity_demo_generated_always_start_with values(5,'TEST');",
		'code': "428C9"
	}
}	

def migration_completed_checks(tgt):
    table_list = tgt.get_table_names("public")
    print("table_list: ", table_list)
    assert len(table_list) == 7
    
    got_row_count = tgt.row_count_of_all_tables("public")
    for table_name, row_count in EXPECTED_ROW_COUNT.items():
        print(f"table_name: {table_name}, got_row_count: {got_row_count[table_name]}, expected_row_count: {row_count}")
        assert row_count == got_row_count[table_name]
        
    for table_name, sum_column_values in EXPECTED_TABLE_SUM.items():
        got_sum_column_values = tgt.get_sum_of_column_of_table(table_name, "id", "public")
        print(f"table_name: {table_name}, got_sum_column_values: {got_sum_column_values}, expected_sum_column_values: {sum_column_values}")
        assert sum_column_values == got_sum_column_values

    for type_check, query_and_code in QUERIES_CHECK.items():
        query, code = query_and_code['query'], query_and_code['code']
        chk_err_returned = tgt.run_query_and_chk_error(query, code)
        print(f"Checking {type_check} ..", code, {chk_err_returned} )
        assert chk_err_returned == True
	
    for table_name, _ in EXPECTED_ROW_COUNT.items():
        INSERT_SEQUENCE_QUERY = f"insert into {table_name} (description) values ('Yugabyte');"
        insert_query_chk_error = tgt.run_query_and_chk_error(INSERT_SEQUENCE_QUERY, None)
        print(f"insert query returned for {table_name} - {insert_query_chk_error}")
        assert insert_query_chk_error == False
	
    for table_name, sum_column_values_after_insert in EXPECTED_TABLE_SUM_AFTER_INSERT.items():
        got_sum_column_values_after_insert = tgt.get_sum_of_column_of_table(table_name, "id", "public")
        print(f"table_name: {table_name}, got_sum_column_values: {got_sum_column_values_after_insert}, expected_sum_column_values: {sum_column_values_after_insert}")
        assert sum_column_values_after_insert == got_sum_column_values_after_insert

if __name__ == "__main__":
	main()