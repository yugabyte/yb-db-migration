#!/usr/bin/env python3

import yb

def main():
	yb.run_checks(migration_completed_checks)


#=============================================================================

EXPECTED_ROW_COUNT = {
	'view_table1': 11,
	'view_table2': 9,
	'v1': 6,
	'v2': 9,
	'v3': 9,
	'mv1': 4,
	'xyz_mview': 4,
	'abc_mview': 4
}

def migration_completed_checks(tgt):
	table_list = tgt.get_table_names("test_views")
	print("table_list:", table_list)
	assert len(table_list) == 2

	view_list = tgt.get_objects_of_type("VIEW", "test_views")
	print("view_list:", view_list)
	assert len(view_list) == 3

	materialized_view_list = tgt.get_objects_of_type("MVIEW", "test_views")
	print("materialized_view_list:", materialized_view_list)
	assert len(materialized_view_list) == 3

	for table_name, row_count in EXPECTED_ROW_COUNT.items():
		cnt = tgt.get_row_count(table_name, "test_views")
		print(f"table_name: {table_name}, row_count: {cnt}")
		assert row_count == cnt

	rules_list = tgt.fetch_all_rules("test_views")
	print(f"list of rules {rules_list} in 'test_views' schema")
	assert len(rules_list) == 4
	assert set(rules_list) == set(["protect_test_views_view_table1", "protect_test_views_v1", "protect_test_views_v2", "protect_test_views_v3"])


if __name__ == "__main__":
	main()