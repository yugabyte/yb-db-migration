--
-- PostgreSQL database dump
--

-- Dumped from database version 10.6
-- Dumped by pg_dump version 16.3 (Ubuntu 16.3-1.pgdg22.04+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: rnacen; Type: SCHEMA; Schema: -; Owner: rnacen
--

CREATE SCHEMA rnacen;


ALTER SCHEMA rnacen OWNER TO rnacen;

--
-- Name: related_sequence_relationship; Type: TYPE; Schema: rnacen; Owner: rnacen
--

CREATE TYPE rnacen.related_sequence_relationship AS ENUM (
    'target',
    'matureProduct',
    'precursor',
    'target_protein',
    'target_rna',
    'isoform',
    'mature_product',
    'host_gene',
    'ortholog',
    'paralogue'
);


ALTER TYPE rnacen.related_sequence_relationship OWNER TO rnacen;

--
-- Name: type_dbdesc_table; Type: TYPE; Schema: rnacen; Owner: rnacen
--

CREATE TYPE rnacen.type_dbdesc_table AS (
	type_dbdesc_table character varying(32)[]
);


ALTER TYPE rnacen.type_dbdesc_table OWNER TO rnacen;

--
-- Name: type_upi_table; Type: TYPE; Schema: rnacen; Owner: rnacen
--

CREATE TYPE rnacen.type_upi_table AS (
	type_upi_table character varying(13)[]
);


ALTER TYPE rnacen.type_upi_table OWNER TO rnacen;

--
-- Name: jsonb_remove_array_element(jsonb, jsonb); Type: FUNCTION; Schema: rnacen; Owner: rnacen
--

CREATE FUNCTION rnacen.jsonb_remove_array_element(arr jsonb, element jsonb) RETURNS jsonb
    LANGUAGE sql IMMUTABLE
    AS $$
    select arr- (
        select ordinality- 1
        from jsonb_array_elements(arr) with ordinality
        where value = element)::int
$$;


ALTER FUNCTION rnacen.jsonb_remove_array_element(arr jsonb, element jsonb) OWNER TO rnacen;

--
-- Name: trigger_fct_auth_group_permissions_tr(); Type: FUNCTION; Schema: rnacen; Owner: rnacen
--

CREATE FUNCTION rnacen.trigger_fct_auth_group_permissions_tr() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
BEGIN
        SELECT auth_group_permissions_sq.nextval
        INTO NEW.id;
    RETURN NEW;
END;
$$;


ALTER FUNCTION rnacen.trigger_fct_auth_group_permissions_tr() OWNER TO rnacen;

--
-- Name: trigger_fct_auth_group_tr(); Type: FUNCTION; Schema: rnacen; Owner: rnacen
--

CREATE FUNCTION rnacen.trigger_fct_auth_group_tr() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
BEGIN
        SELECT auth_group_sq.nextval
        INTO NEW.id;
    RETURN NEW;
END;
$$;


ALTER FUNCTION rnacen.trigger_fct_auth_group_tr() OWNER TO rnacen;

--
-- Name: trigger_fct_auth_permission_tr(); Type: FUNCTION; Schema: rnacen; Owner: rnacen
--

CREATE FUNCTION rnacen.trigger_fct_auth_permission_tr() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
BEGIN
        SELECT auth_permission_sq.nextval
        INTO NEW.id;
    RETURN NEW;
END;
$$;


ALTER FUNCTION rnacen.trigger_fct_auth_permission_tr() OWNER TO rnacen;

--
-- Name: trigger_fct_auth_user_groups_tr(); Type: FUNCTION; Schema: rnacen; Owner: rnacen
--

CREATE FUNCTION rnacen.trigger_fct_auth_user_groups_tr() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
BEGIN
        SELECT auth_user_groups_sq.nextval
        INTO NEW.id;
    RETURN NEW;
END;
$$;


ALTER FUNCTION rnacen.trigger_fct_auth_user_groups_tr() OWNER TO rnacen;

--
-- Name: trigger_fct_auth_user_tr(); Type: FUNCTION; Schema: rnacen; Owner: rnacen
--

CREATE FUNCTION rnacen.trigger_fct_auth_user_tr() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
BEGIN
        SELECT auth_user_sq.nextval
        INTO NEW.id;
    RETURN NEW;
END;
$$;


ALTER FUNCTION rnacen.trigger_fct_auth_user_tr() OWNER TO rnacen;

--
-- Name: trigger_fct_auth_user_user_permissions_tr(); Type: FUNCTION; Schema: rnacen; Owner: rnacen
--

CREATE FUNCTION rnacen.trigger_fct_auth_user_user_permissions_tr() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
BEGIN
        SELECT auth_user_user_permissions_sq.nextval
        INTO NEW.id;
    RETURN NEW;
END;
$$;


ALTER FUNCTION rnacen.trigger_fct_auth_user_user_permissions_tr() OWNER TO rnacen;

--
-- Name: trigger_fct_corsheaders_corsmodel_tr(); Type: FUNCTION; Schema: rnacen; Owner: rnacen
--

CREATE FUNCTION rnacen.trigger_fct_corsheaders_corsmodel_tr() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
BEGIN
        SELECT corsheaders_corsmodel_sq.nextval
        INTO NEW.id;
    RETURN NEW;
END;
$$;


ALTER FUNCTION rnacen.trigger_fct_corsheaders_corsmodel_tr() OWNER TO rnacen;

--
-- Name: trigger_fct_django_admin_log_tr(); Type: FUNCTION; Schema: rnacen; Owner: rnacen
--

CREATE FUNCTION rnacen.trigger_fct_django_admin_log_tr() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
BEGIN
        SELECT django_admin_log_sq.nextval
        INTO NEW.id;
    RETURN NEW;
END;
$$;


ALTER FUNCTION rnacen.trigger_fct_django_admin_log_tr() OWNER TO rnacen;

--
-- Name: trigger_fct_django_comment_flags_tr(); Type: FUNCTION; Schema: rnacen; Owner: rnacen
--

CREATE FUNCTION rnacen.trigger_fct_django_comment_flags_tr() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
BEGIN
        SELECT django_comment_flags_sq.nextval
        INTO NEW.id;
    RETURN NEW;
END;
$$;


ALTER FUNCTION rnacen.trigger_fct_django_comment_flags_tr() OWNER TO rnacen;

--
-- Name: trigger_fct_django_comments_tr(); Type: FUNCTION; Schema: rnacen; Owner: rnacen
--

CREATE FUNCTION rnacen.trigger_fct_django_comments_tr() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
BEGIN
        SELECT django_comments_sq.nextval
        INTO NEW.id;
    RETURN NEW;
END;
$$;


ALTER FUNCTION rnacen.trigger_fct_django_comments_tr() OWNER TO rnacen;

--
-- Name: trigger_fct_django_content_type_tr(); Type: FUNCTION; Schema: rnacen; Owner: rnacen
--

CREATE FUNCTION rnacen.trigger_fct_django_content_type_tr() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
BEGIN
        SELECT django_content_type_sq.nextval
        INTO NEW.id;
    RETURN NEW;
END;
$$;


ALTER FUNCTION rnacen.trigger_fct_django_content_type_tr() OWNER TO rnacen;

--
-- Name: trigger_fct_django_migrations_tr(); Type: FUNCTION; Schema: rnacen; Owner: rnacen
--

CREATE FUNCTION rnacen.trigger_fct_django_migrations_tr() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
BEGIN
        SELECT django_migrations_sq.nextval
        INTO NEW.id;
    RETURN NEW;
END;
$$;


ALTER FUNCTION rnacen.trigger_fct_django_migrations_tr() OWNER TO rnacen;

--
-- Name: trigger_fct_django_site_tr(); Type: FUNCTION; Schema: rnacen; Owner: rnacen
--

CREATE FUNCTION rnacen.trigger_fct_django_site_tr() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
BEGIN
        SELECT django_site_sq.nextval
        INTO NEW.id;
    RETURN NEW;
END;
$$;


ALTER FUNCTION rnacen.trigger_fct_django_site_tr() OWNER TO rnacen;

--
-- Name: trigger_fct_rna_audit(); Type: FUNCTION; Schema: rnacen; Owner: rnacen
--

CREATE FUNCTION rnacen.trigger_fct_rna_audit() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
DECLARE
BEGIN
   NEW.timestamp := LOCALTIMESTAMP;
   NEW.userstamp := USER;
RETURN NEW;
END;
$$;


ALTER FUNCTION rnacen.trigger_fct_rna_audit() OWNER TO rnacen;

--
-- Name: trigger_fct_rnc_accessions_inc(); Type: FUNCTION; Schema: rnacen; Owner: rnacen
--

CREATE FUNCTION rnacen.trigger_fct_rnc_accessions_inc() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
BEGIN
  SELECT nextval('rnc_accessions_seq') INTO   NEW.id;
RETURN NEW;
END;
$$;


ALTER FUNCTION rnacen.trigger_fct_rnc_accessions_inc() OWNER TO rnacen;

--
-- Name: trigger_fct_rnc_coordinates_inc(); Type: FUNCTION; Schema: rnacen; Owner: rnacen
--

CREATE FUNCTION rnacen.trigger_fct_rnc_coordinates_inc() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
BEGIN
  SELECT nextval('rnc_coordinates_pk_seq') INTO NEW.id;
RETURN NEW;
END;
$$;


ALTER FUNCTION rnacen.trigger_fct_rnc_coordinates_inc() OWNER TO rnacen;

--
-- Name: trigger_fct_rnc_database_audit(); Type: FUNCTION; Schema: rnacen; Owner: rnacen
--

CREATE FUNCTION rnacen.trigger_fct_rnc_database_audit() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
DECLARE
BEGIN
   NEW.timestamp := LOCALTIMESTAMP;
   NEW.userstamp := USER;
RETURN NEW;
END;
$$;


ALTER FUNCTION rnacen.trigger_fct_rnc_database_audit() OWNER TO rnacen;

--
-- Name: trigger_fct_rnc_modifications_tr(); Type: FUNCTION; Schema: rnacen; Owner: rnacen
--

CREATE FUNCTION rnacen.trigger_fct_rnc_modifications_tr() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
BEGIN
        SELECT rnc_modifications_sq.nextval
        INTO NEW.id;
    RETURN NEW;
END;
$$;


ALTER FUNCTION rnacen.trigger_fct_rnc_modifications_tr() OWNER TO rnacen;

--
-- Name: trigger_fct_rnc_reference_map_inc(); Type: FUNCTION; Schema: rnacen; Owner: rnacen
--

CREATE FUNCTION rnacen.trigger_fct_rnc_reference_map_inc() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
BEGIN
  SELECT nextval('rnc_reference_map_seq') INTO   NEW.id;
RETURN NEW;
END;
$$;


ALTER FUNCTION rnacen.trigger_fct_rnc_reference_map_inc() OWNER TO rnacen;

--
-- Name: trigger_fct_rnc_refs_pk_seq(); Type: FUNCTION; Schema: rnacen; Owner: rnacen
--

CREATE FUNCTION rnacen.trigger_fct_rnc_refs_pk_seq() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
BEGIN
  SELECT nextval('rnc_refs_pk_seq') INTO   NEW.id;
RETURN NEW;
END;
$$;


ALTER FUNCTION rnacen.trigger_fct_rnc_refs_pk_seq() OWNER TO rnacen;

--
-- Name: trigger_fct_rnc_release_audit(); Type: FUNCTION; Schema: rnacen; Owner: rnacen
--

CREATE FUNCTION rnacen.trigger_fct_rnc_release_audit() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
DECLARE
BEGIN
   NEW.timestamp := LOCALTIMESTAMP;
   NEW.userstamp := USER;
RETURN NEW;
END;
$$;


ALTER FUNCTION rnacen.trigger_fct_rnc_release_audit() OWNER TO rnacen;

--
-- Name: trigger_fct_xref_pk_update(); Type: FUNCTION; Schema: rnacen; Owner: rnacen
--

CREATE FUNCTION rnacen.trigger_fct_xref_pk_update() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
BEGIN
  NEW.id := nextval('xref_pk_seq');
RETURN NEW;
END;
$$;


ALTER FUNCTION rnacen.trigger_fct_xref_pk_update() OWNER TO rnacen;

--
-- Name: truncate_all_load_tables(); Type: FUNCTION; Schema: rnacen; Owner: rnacen
--

CREATE FUNCTION rnacen.truncate_all_load_tables() RETURNS void
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
DECLARE


 c_get_load_tables CURSOR FOR
  select distinct tablename
  from pg_tables
  where schemaname = 'rnacen'
  and   tablename like 'load_%';

BEGIN
    for load_table in c_get_load_tables loop
      RAISE NOTICE 'truncate table % ', load_table.tablename;
      EXECUTE 'truncate table '||load_table.tablename;
    end loop;
  end;
$$;


ALTER FUNCTION rnacen.truncate_all_load_tables() OWNER TO rnacen;

--
-- Name: xref_insert_trigger(); Type: FUNCTION; Schema: rnacen; Owner: rnacen
--

CREATE FUNCTION rnacen.xref_insert_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
	IF ( NEW.DBID IN (1) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P1_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P1_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
	ELSIF ( NEW.DBID IN (2) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P2_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P2_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
	ELSIF ( NEW.DBID IN (3) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P3_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P3_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
	ELSIF ( NEW.DBID IN (4) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P4_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P4_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
	ELSIF ( NEW.DBID IN (5) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P5_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P5_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
	ELSIF ( NEW.DBID IN (6) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P6_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P6_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
	ELSIF ( NEW.DBID IN (8) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P8_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P8_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
	ELSIF ( NEW.DBID IN (9) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P9_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P9_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
	ELSIF ( NEW.DBID IN (7) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P7_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P7_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
	ELSIF ( NEW.DBID IN (10) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P10_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P10_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
	ELSIF ( NEW.DBID IN (11) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P11_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P11_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
	ELSIF ( NEW.DBID IN (12) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P12_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P12_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
	ELSIF ( NEW.DBID IN (13) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P13_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P13_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
	ELSIF ( NEW.DBID IN (14) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P14_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P14_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
	ELSIF ( NEW.DBID IN (15) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P15_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P15_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
	ELSIF ( NEW.DBID IN (16) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P16_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P16_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
	ELSIF ( NEW.DBID IN (17) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P17_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P17_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
	ELSIF ( NEW.DBID IN (18) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P18_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P18_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
	ELSIF ( NEW.DBID IN (19) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P19_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P19_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
	ELSIF ( NEW.DBID IN (20) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P20_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P20_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
	ELSIF ( NEW.DBID IN (21) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P21_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P21_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
	ELSIF ( NEW.DBID IN (22) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P22_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P22_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
	ELSIF ( NEW.DBID IN (23) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P23_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P23_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
	ELSIF ( NEW.DBID IN (24) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P24_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P24_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
	ELSIF ( NEW.DBID IN (25) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P25_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P25_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
	ELSIF ( NEW.DBID IN (26) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P26_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P26_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
	ELSIF ( NEW.DBID IN (27) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P27_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P27_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
	ELSIF ( NEW.DBID IN (28) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P28_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P28_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
	ELSIF ( NEW.DBID IN (29) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P29_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P29_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
	ELSIF ( NEW.DBID IN (30) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P30_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P30_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
	ELSIF ( NEW.DBID IN (31) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P31_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P31_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
	ELSIF ( NEW.DBID IN (32) ) THEN
		IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P32_DELETED VALUES (NEW.*);
		ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P32_NOT_DELETED VALUES (NEW.*);
		ELSE
			-- Raise an exception
			RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
		END IF;
ELSIF ( NEW.DBID IN (33) ) THEN
    IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P33_DELETED VALUES (NEW.*);
    ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P33_NOT_DELETED VALUES (NEW.*);
    ELSE
        -- Raise an exception
        RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
END IF;
ELSIF ( NEW.DBID IN (34) ) THEN
    IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P34_DELETED VALUES (NEW.*);
    ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P34_NOT_DELETED VALUES (NEW.*);
    ELSE
        -- Raise an exception
        RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
END IF;
ELSIF ( NEW.DBID IN (35) ) THEN
    IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P35_DELETED VALUES (NEW.*);
    ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P35_NOT_DELETED VALUES (NEW.*);
    ELSE
        -- Raise an exception
        RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
END IF;
ELSIF ( NEW.DBID IN (36) ) THEN
    IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P36_DELETED VALUES (NEW.*);
    ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P36_NOT_DELETED VALUES (NEW.*);
    ELSE
        -- Raise an exception
        RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
END IF;
ELSIF ( NEW.DBID IN (37) ) THEN
    IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P37_DELETED VALUES (NEW.*);
    ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P37_NOT_DELETED VALUES (NEW.*);
    ELSE
        -- Raise an exception
        RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
END IF;
ELSIF ( NEW.DBID IN (38) ) THEN
    IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P38_DELETED VALUES (NEW.*);
    ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P38_NOT_DELETED VALUES (NEW.*);
    ELSE
        -- Raise an exception
        RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
END IF;
ELSIF ( NEW.DBID IN (39) ) THEN
    IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P39_DELETED VALUES (NEW.*);
    ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P39_NOT_DELETED VALUES (NEW.*);
    ELSE
        -- Raise an exception
        RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
END IF;
ELSIF ( NEW.DBID IN (40) ) THEN
    IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P40_DELETED VALUES (NEW.*);
    ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P40_NOT_DELETED VALUES (NEW.*);
    ELSE
        -- Raise an exception
        RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
END IF;
ELSIF ( NEW.DBID IN (41) ) THEN
    IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P41_DELETED VALUES (NEW.*);
    ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P41_NOT_DELETED VALUES (NEW.*);
    ELSE
        -- Raise an exception
        RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
END IF;
ELSIF ( NEW.DBID IN (42) ) THEN
        IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P42_DELETED VALUES (NEW.*);
        ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P42_NOT_DELETED VALUES (NEW.*);
        ELSE
                -- Raise an exception
                RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
        END IF;
ELSIF ( NEW.DBID IN (43) ) THEN
        IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P43_DELETED VALUES (NEW.*);
        ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P43_NOT_DELETED VALUES (NEW.*);
        ELSE
                -- Raise an exception
                RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
        END IF;
ELSIF ( NEW.DBID IN (44) ) THEN
        IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P44_DELETED VALUES (NEW.*);
        ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P44_NOT_DELETED VALUES (NEW.*);
        ELSE
                -- Raise an exception
                RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
        END IF;
ELSIF ( NEW.DBID IN (45) ) THEN
        IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P45_DELETED VALUES (NEW.*);
        ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P45_NOT_DELETED VALUES (NEW.*);
        ELSE
                -- Raise an exception
                RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
        END IF;
ELSIF ( NEW.DBID IN (46) ) THEN
        IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P46_DELETED VALUES (NEW.*);
        ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P46_NOT_DELETED VALUES (NEW.*);
        ELSE
                -- Raise an exception
                RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
        END IF;
ELSIF ( NEW.DBID IN (47) ) THEN
        IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P47_DELETED VALUES (NEW.*);
        ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P47_NOT_DELETED VALUES (NEW.*);
        ELSE
                -- Raise an exception
                RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
        END IF;
ELSIF ( NEW.DBID IN (48) ) THEN
        IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P48_DELETED VALUES (NEW.*);
        ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P48_NOT_DELETED VALUES (NEW.*);
        ELSE
                -- Raise an exception
                RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
        END IF;
ELSIF ( NEW.DBID IN (49) ) THEN
        IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P49_DELETED VALUES (NEW.*);
        ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P49_NOT_DELETED VALUES (NEW.*);
        ELSE
                -- Raise an exception
                RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
        END IF;
ELSIF ( NEW.DBID IN (50) ) THEN
        IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P50_DELETED VALUES (NEW.*);
        ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P50_NOT_DELETED VALUES (NEW.*);
        ELSE
                -- Raise an exception
                RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
        END IF;
ELSIF ( NEW.DBID IN (51) ) THEN
        IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P51_DELETED VALUES (NEW.*);
        ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P51_NOT_DELETED VALUES (NEW.*);
        ELSE
                -- Raise an exception
                RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
        END IF;
ELSIF ( NEW.DBID IN (52) ) THEN
        IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P52_DELETED VALUES (NEW.*);
        ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P52_NOT_DELETED VALUES (NEW.*);
        ELSE
                -- Raise an exception
                RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
        END IF;
ELSIF ( NEW.DBID IN (53) ) THEN
        IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P53_DELETED VALUES (NEW.*);
        ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P53_NOT_DELETED VALUES (NEW.*);
        ELSE
                -- Raise an exception
                RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
        END IF;
ELSIF ( NEW.DBID IN (54) ) THEN
        IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P54_DELETED VALUES (NEW.*);
        ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P54_NOT_DELETED VALUES (NEW.*);
        ELSE
                -- Raise an exception
                RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
        END IF;
ELSIF ( NEW.DBID IN (55) ) THEN
        IF ( NEW.DELETED IN ('Y') ) THEN INSERT INTO XREF_P55_DELETED VALUES (NEW.*);
        ELSIF ( NEW.DELETED IN ('N') ) THEN INSERT INTO XREF_P55_NOT_DELETED VALUES (NEW.*);
        ELSE
                -- Raise an exception
                RAISE EXCEPTION 'Value out of range in subpartition. Fix the XREF_insert_trigger() function!';
        END IF;
ELSE
       -- Raise an exception
       RAISE EXCEPTION 'Value out of range in partition. Fix the XREF_insert_trigger() function!';
END IF;

RETURN NULL;
END;
$$;


ALTER FUNCTION rnacen.xref_insert_trigger() OWNER TO rnacen;

--
-- Name: array_concat_agg(anyarray); Type: AGGREGATE; Schema: rnacen; Owner: rnacen
--

CREATE AGGREGATE rnacen.array_concat_agg(anyarray) (
    SFUNC = array_cat,
    STYPE = anyarray
);


ALTER AGGREGATE rnacen.array_concat_agg(anyarray) OWNER TO rnacen;

SET default_tablespace = '';

--
-- Name: auth_group; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.auth_group (
    id integer NOT NULL,
    name character varying(80) NOT NULL
);


ALTER TABLE rnacen.auth_group OWNER TO rnacen;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.auth_group_id_seq OWNER TO rnacen;

--
-- Name: auth_group_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.auth_group_id_seq OWNED BY rnacen.auth_group.id;


--
-- Name: auth_group_permissions; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.auth_group_permissions (
    id integer NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE rnacen.auth_group_permissions OWNER TO rnacen;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.auth_group_permissions_id_seq OWNER TO rnacen;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.auth_group_permissions_id_seq OWNED BY rnacen.auth_group_permissions.id;


--
-- Name: auth_group_permissions_sq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.auth_group_permissions_sq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 20;


ALTER SEQUENCE rnacen.auth_group_permissions_sq OWNER TO rnacen;

--
-- Name: auth_group_sq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.auth_group_sq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 20;


ALTER SEQUENCE rnacen.auth_group_sq OWNER TO rnacen;

--
-- Name: auth_permission; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE rnacen.auth_permission OWNER TO rnacen;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.auth_permission_id_seq OWNER TO rnacen;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.auth_permission_id_seq OWNED BY rnacen.auth_permission.id;


--
-- Name: auth_permission_sq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.auth_permission_sq
    START WITH 261
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 20;


ALTER SEQUENCE rnacen.auth_permission_sq OWNER TO rnacen;

--
-- Name: auth_user; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.auth_user (
    id integer NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(30) NOT NULL,
    first_name character varying(30) NOT NULL,
    last_name character varying(30) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL
);


ALTER TABLE rnacen.auth_user OWNER TO rnacen;

--
-- Name: auth_user_groups; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.auth_user_groups (
    id integer NOT NULL,
    user_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE rnacen.auth_user_groups OWNER TO rnacen;

--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.auth_user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.auth_user_groups_id_seq OWNER TO rnacen;

--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.auth_user_groups_id_seq OWNED BY rnacen.auth_user_groups.id;


--
-- Name: auth_user_groups_sq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.auth_user_groups_sq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 20;


ALTER SEQUENCE rnacen.auth_user_groups_sq OWNER TO rnacen;

--
-- Name: auth_user_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.auth_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.auth_user_id_seq OWNER TO rnacen;

--
-- Name: auth_user_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.auth_user_id_seq OWNED BY rnacen.auth_user.id;


--
-- Name: auth_user_sq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.auth_user_sq
    START WITH 21
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 20;


ALTER SEQUENCE rnacen.auth_user_sq OWNER TO rnacen;

--
-- Name: auth_user_user_permissions; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.auth_user_user_permissions (
    id integer NOT NULL,
    user_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE rnacen.auth_user_user_permissions OWNER TO rnacen;

--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.auth_user_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.auth_user_user_permissions_id_seq OWNER TO rnacen;

--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.auth_user_user_permissions_id_seq OWNED BY rnacen.auth_user_user_permissions.id;


--
-- Name: auth_user_user_permissions_sq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.auth_user_user_permissions_sq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 20;


ALTER SEQUENCE rnacen.auth_user_user_permissions_sq OWNER TO rnacen;

--
-- Name: bad_precompute; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.bad_precompute (
    id bigint NOT NULL,
    urs_taxid text NOT NULL
);


ALTER TABLE rnacen.bad_precompute OWNER TO rnacen;

--
-- Name: bad_precompute_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.bad_precompute_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.bad_precompute_id_seq OWNER TO rnacen;

--
-- Name: bad_precompute_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.bad_precompute_id_seq OWNED BY rnacen.bad_precompute.id;


--
-- Name: blog; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.blog (
    id bigint NOT NULL,
    title character varying(1000) NOT NULL,
    content text NOT NULL,
    created date DEFAULT ('now'::text)::date,
    featured boolean DEFAULT false,
    release_image character varying(255)
);


ALTER TABLE rnacen.blog OWNER TO rnacen;

--
-- Name: blog_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.blog_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.blog_id_seq OWNER TO rnacen;

--
-- Name: blog_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.blog_id_seq OWNED BY rnacen.blog.id;


--
-- Name: corsheaders_corsmodel; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.corsheaders_corsmodel (
    id integer NOT NULL,
    cors character varying(255) NOT NULL
);


ALTER TABLE rnacen.corsheaders_corsmodel OWNER TO rnacen;

--
-- Name: corsheaders_corsmodel_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.corsheaders_corsmodel_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.corsheaders_corsmodel_id_seq OWNER TO rnacen;

--
-- Name: corsheaders_corsmodel_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.corsheaders_corsmodel_id_seq OWNED BY rnacen.corsheaders_corsmodel.id;


--
-- Name: corsheaders_corsmodel_sq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.corsheaders_corsmodel_sq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 20;


ALTER SEQUENCE rnacen.corsheaders_corsmodel_sq OWNER TO rnacen;

--
-- Name: cpat_results; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.cpat_results (
    urs_taxid text NOT NULL,
    fickett_score double precision NOT NULL,
    hexamer_score double precision NOT NULL,
    coding_probability double precision NOT NULL,
    is_protein_coding boolean NOT NULL
);


ALTER TABLE rnacen.cpat_results OWNER TO rnacen;

--
-- Name: dbmshp_runnumber; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.dbmshp_runnumber
    START WITH 5
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.dbmshp_runnumber OWNER TO rnacen;

--
-- Name: django_admin_log; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE rnacen.django_admin_log OWNER TO rnacen;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.django_admin_log_id_seq OWNER TO rnacen;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.django_admin_log_id_seq OWNED BY rnacen.django_admin_log.id;


--
-- Name: django_admin_log_sq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.django_admin_log_sq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 20;


ALTER SEQUENCE rnacen.django_admin_log_sq OWNER TO rnacen;

--
-- Name: django_comment_flags_sq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.django_comment_flags_sq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 20;


ALTER SEQUENCE rnacen.django_comment_flags_sq OWNER TO rnacen;

--
-- Name: django_comments_sq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.django_comments_sq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 20;


ALTER SEQUENCE rnacen.django_comments_sq OWNER TO rnacen;

--
-- Name: django_content_type; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE rnacen.django_content_type OWNER TO rnacen;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.django_content_type_id_seq OWNER TO rnacen;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.django_content_type_id_seq OWNED BY rnacen.django_content_type.id;


--
-- Name: django_content_type_sq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.django_content_type_sq
    START WITH 201
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 20;


ALTER SEQUENCE rnacen.django_content_type_sq OWNER TO rnacen;

--
-- Name: django_migrations; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.django_migrations (
    id integer NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE rnacen.django_migrations OWNER TO rnacen;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.django_migrations_id_seq OWNER TO rnacen;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.django_migrations_id_seq OWNED BY rnacen.django_migrations.id;


--
-- Name: django_migrations_sq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.django_migrations_sq
    START WITH 121
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 20;


ALTER SEQUENCE rnacen.django_migrations_sq OWNER TO rnacen;

--
-- Name: django_session; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE rnacen.django_session OWNER TO rnacen;

--
-- Name: django_site; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.django_site (
    id integer NOT NULL,
    domain character varying(100) NOT NULL,
    name character varying(50) NOT NULL
);


ALTER TABLE rnacen.django_site OWNER TO rnacen;

--
-- Name: django_site_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.django_site_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.django_site_id_seq OWNER TO rnacen;

--
-- Name: django_site_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.django_site_id_seq OWNED BY rnacen.django_site.id;


--
-- Name: django_site_sq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.django_site_sq
    START WITH 21
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 20;


ALTER SEQUENCE rnacen.django_site_sq OWNER TO rnacen;

--
-- Name: ensembl_assembly; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.ensembl_assembly (
    assembly_id character varying(255) NOT NULL,
    assembly_full_name character varying(255) NOT NULL,
    gca_accession character varying(20),
    assembly_ucsc character varying(100),
    common_name character varying(255),
    taxid integer NOT NULL,
    ensembl_url character varying(100),
    division character varying(20),
    blat_mapping integer,
    example_chromosome character varying(40),
    example_end integer,
    example_start integer,
    subdomain character varying(100) NOT NULL,
    selected_genome boolean DEFAULT false NOT NULL
);


ALTER TABLE rnacen.ensembl_assembly OWNER TO rnacen;

--
-- Name: ensembl_compara; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.ensembl_compara (
    id integer NOT NULL,
    ensembl_transcript_id text NOT NULL,
    urs_taxid text NOT NULL,
    homology_id integer NOT NULL
);


ALTER TABLE rnacen.ensembl_compara OWNER TO rnacen;

--
-- Name: ensembl_compara_homology_id; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.ensembl_compara_homology_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.ensembl_compara_homology_id OWNER TO rnacen;

--
-- Name: ensembl_compara_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.ensembl_compara_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.ensembl_compara_id_seq OWNER TO rnacen;

--
-- Name: ensembl_compara_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.ensembl_compara_id_seq OWNED BY rnacen.ensembl_compara.id;


--
-- Name: ensembl_coordinate_systems; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.ensembl_coordinate_systems (
    id integer NOT NULL,
    chromosome character varying(100) NOT NULL,
    assembly_id character varying(255) NOT NULL,
    coordinate_system text NOT NULL,
    is_reference boolean NOT NULL,
    karyotype_rank integer
);


ALTER TABLE rnacen.ensembl_coordinate_systems OWNER TO rnacen;

--
-- Name: ensembl_coordinate_systems_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.ensembl_coordinate_systems_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.ensembl_coordinate_systems_id_seq OWNER TO rnacen;

--
-- Name: ensembl_coordinate_systems_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.ensembl_coordinate_systems_id_seq OWNED BY rnacen.ensembl_coordinate_systems.id;


--
-- Name: ensembl_import_tracking; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.ensembl_import_tracking (
    id integer NOT NULL,
    database_name text NOT NULL,
    task_name text NOT NULL,
    was_imported boolean
);


ALTER TABLE rnacen.ensembl_import_tracking OWNER TO rnacen;

--
-- Name: ensembl_import_tracking_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.ensembl_import_tracking_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.ensembl_import_tracking_id_seq OWNER TO rnacen;

--
-- Name: ensembl_import_tracking_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.ensembl_import_tracking_id_seq OWNED BY rnacen.ensembl_import_tracking.id;


--
-- Name: ensembl_karyotype; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.ensembl_karyotype (
    id integer NOT NULL,
    karyotype jsonb,
    assembly_id character varying(255) DEFAULT 'foobar'::character varying
);


ALTER TABLE rnacen.ensembl_karyotype OWNER TO rnacen;

--
-- Name: ensembl_karyotype_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.ensembl_karyotype_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.ensembl_karyotype_id_seq OWNER TO rnacen;

--
-- Name: ensembl_karyotype_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.ensembl_karyotype_id_seq OWNED BY rnacen.ensembl_karyotype.id;


--
-- Name: ensembl_pseudogene_exons; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.ensembl_pseudogene_exons (
    id bigint NOT NULL,
    region_id integer,
    exon_start integer NOT NULL,
    exon_stop integer NOT NULL
);


ALTER TABLE rnacen.ensembl_pseudogene_exons OWNER TO rnacen;

--
-- Name: ensembl_pseudogene_exons_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.ensembl_pseudogene_exons_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.ensembl_pseudogene_exons_id_seq OWNER TO rnacen;

--
-- Name: ensembl_pseudogene_exons_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.ensembl_pseudogene_exons_id_seq OWNED BY rnacen.ensembl_pseudogene_exons.id;


--
-- Name: ensembl_pseudogene_regions; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.ensembl_pseudogene_regions (
    id bigint NOT NULL,
    gene text NOT NULL,
    region_name text NOT NULL,
    chromosome text NOT NULL,
    strand integer NOT NULL,
    region_start integer NOT NULL,
    region_stop integer NOT NULL,
    assembly_id character varying(255),
    exon_count integer NOT NULL,
    CONSTRAINT ck_ensembl_pseduogene_regions__exon_count_size CHECK ((exon_count > 0))
);


ALTER TABLE rnacen.ensembl_pseudogene_regions OWNER TO rnacen;

--
-- Name: ensembl_pseudogene_regions_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.ensembl_pseudogene_regions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.ensembl_pseudogene_regions_id_seq OWNER TO rnacen;

--
-- Name: ensembl_pseudogene_regions_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.ensembl_pseudogene_regions_id_seq OWNED BY rnacen.ensembl_pseudogene_regions.id;


--
-- Name: go_term_annotations; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.go_term_annotations (
    go_term_annotation_id integer NOT NULL,
    rna_id character varying(50) NOT NULL,
    qualifier text NOT NULL,
    ontology_term_id character varying(10) NOT NULL,
    evidence_code character varying(11) NOT NULL,
    assigned_by character varying(50),
    extensions jsonb
);


ALTER TABLE rnacen.go_term_annotations OWNER TO rnacen;

--
-- Name: go_term_annotations_go_term_annotation_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.go_term_annotations_go_term_annotation_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.go_term_annotations_go_term_annotation_id_seq OWNER TO rnacen;

--
-- Name: go_term_annotations_go_term_annotation_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.go_term_annotations_go_term_annotation_id_seq OWNED BY rnacen.go_term_annotations.go_term_annotation_id;


--
-- Name: go_term_publication_map; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.go_term_publication_map (
    go_term_publication_mapping_id integer NOT NULL,
    go_term_annotation_id integer NOT NULL,
    reference_id bigint NOT NULL
);


ALTER TABLE rnacen.go_term_publication_map OWNER TO rnacen;

--
-- Name: go_term_publication_map_go_term_publication_mapping_id_seq1; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.go_term_publication_map_go_term_publication_mapping_id_seq1
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.go_term_publication_map_go_term_publication_mapping_id_seq1 OWNER TO rnacen;

--
-- Name: go_term_publication_map_go_term_publication_mapping_id_seq1; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.go_term_publication_map_go_term_publication_mapping_id_seq1 OWNED BY rnacen.go_term_publication_map.go_term_publication_mapping_id;


--
-- Name: insdc_so_term_mapping; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.insdc_so_term_mapping (
    rna_type text NOT NULL,
    so_term_id text NOT NULL
);


ALTER TABLE rnacen.insdc_so_term_mapping OWNER TO rnacen;

--
-- Name: litscan_sentence_id_counts; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.litscan_sentence_id_counts (
    sent_ids integer,
    id_count bigint
);


ALTER TABLE rnacen.litscan_sentence_id_counts OWNER TO rnacen;

--
-- Name: litscan_statistics; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.litscan_statistics (
    id integer NOT NULL,
    searched_ids integer,
    articles integer,
    ids_in_use integer,
    urs integer,
    expert_db integer
);


ALTER TABLE rnacen.litscan_statistics OWNER TO rnacen;

--
-- Name: litscan_statistics_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.litscan_statistics_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.litscan_statistics_id_seq OWNER TO rnacen;

--
-- Name: litscan_statistics_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.litscan_statistics_id_seq OWNED BY rnacen.litscan_statistics.id;


--
-- Name: litsumm_summaries; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.litsumm_summaries (
    id integer NOT NULL,
    rna_id text,
    context text,
    summary text,
    cost double precision,
    total_tokens integer,
    attempts integer,
    truthful boolean,
    problem_summary boolean,
    consistency_check_result text,
    selection_method text,
    rescue_prompts text[],
    primary_id character varying(44),
    display_id character varying(100),
    should_show boolean
);


ALTER TABLE rnacen.litsumm_summaries OWNER TO rnacen;

--
-- Name: litsumm_summaries_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.litsumm_summaries_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.litsumm_summaries_id_seq OWNER TO rnacen;

--
-- Name: litsumm_summaries_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.litsumm_summaries_id_seq OWNED BY rnacen.litsumm_summaries.id;


--
-- Name: load_compara; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.load_compara (
    homology_group text NOT NULL,
    ensembl_transcript text NOT NULL
);


ALTER TABLE rnacen.load_compara OWNER TO rnacen;

--
-- Name: load_ensembl_pseudogenes; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.load_ensembl_pseudogenes (
    gene text NOT NULL,
    region_name text NOT NULL,
    chromosome text NOT NULL,
    strand integer NOT NULL,
    exon_start integer NOT NULL,
    exon_stop integer NOT NULL,
    assembly_id character varying(255) NOT NULL,
    exon_count integer NOT NULL
);


ALTER TABLE rnacen.load_ensembl_pseudogenes OWNER TO rnacen;

--
-- Name: load_genome_mapping_attempted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.load_genome_mapping_attempted (
    urs_taxid text NOT NULL,
    assembly_id text NOT NULL,
    last_run timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE rnacen.load_genome_mapping_attempted OWNER TO rnacen;

--
-- Name: load_karyotypes; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.load_karyotypes (
    assembly_id character varying(255) NOT NULL,
    karyotype text
);


ALTER TABLE rnacen.load_karyotypes OWNER TO rnacen;

--
-- Name: load_model_assignments; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.load_model_assignments (
    model_name text NOT NULL,
    so_term_id text NOT NULL
);


ALTER TABLE rnacen.load_model_assignments OWNER TO rnacen;

--
-- Name: load_qa_rfam_attempted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.load_qa_rfam_attempted (
    urs text NOT NULL,
    model_source text NOT NULL,
    source_version text NOT NULL,
    last_run timestamp without time zone DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE rnacen.load_qa_rfam_attempted OWNER TO rnacen;

--
-- Name: load_ref_pubmed; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.load_ref_pubmed (
    ref_pubmed_id integer,
    authors text,
    location text,
    title text,
    doi text
);


ALTER TABLE rnacen.load_ref_pubmed OWNER TO rnacen;

--
-- Name: load_rfam_go_terms; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.load_rfam_go_terms (
    ontology_term_id character varying(10) NOT NULL,
    rfam_model_id character varying(20) NOT NULL
);


ALTER TABLE rnacen.load_rfam_go_terms OWNER TO rnacen;

--
-- Name: load_rnc_coordinates; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.load_rnc_coordinates (
    accession character varying(200),
    local_start bigint,
    local_end bigint,
    chromosome character varying(100),
    strand bigint,
    assembly_id character varying(255)
);


ALTER TABLE rnacen.load_rnc_coordinates OWNER TO rnacen;

--
-- Name: load_rnc_secondary_structure; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.load_rnc_secondary_structure (
    rnc_accession_id character varying(100),
    secondary_structure text,
    md5 character varying(32)
);


ALTER TABLE rnacen.load_rnc_secondary_structure OWNER TO rnacen;

--
-- Name: load_rnc_text_mining; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.load_rnc_text_mining (
    pattern_group text,
    pattern text,
    matching_word text,
    sentence text,
    md5 text,
    authors text,
    location text,
    title text,
    pmid text,
    doi text
);


ALTER TABLE rnacen.load_rnc_text_mining OWNER TO rnacen;

--
-- Name: load_secondary_layout; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.load_secondary_layout (
    urs text NOT NULL,
    secondary_structure text NOT NULL,
    model text NOT NULL,
    overlap_count integer NOT NULL,
    basepair_count integer NOT NULL,
    model_start integer,
    model_stop integer,
    model_coverage double precision,
    sequence_start integer,
    sequence_stop integer,
    sequence_coverage double precision
);


ALTER TABLE rnacen.load_secondary_layout OWNER TO rnacen;

--
-- Name: r2dt_results; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.r2dt_results (
    urs text NOT NULL,
    secondary_structure text NOT NULL,
    overlap_count integer NOT NULL,
    basepair_count integer NOT NULL,
    model_start integer,
    model_stop integer,
    sequence_start integer,
    sequence_stop integer,
    sequence_coverage double precision,
    model_id integer NOT NULL,
    id bigint NOT NULL,
    inferred_should_show boolean DEFAULT true NOT NULL,
    model_coverage double precision,
    assigned_should_show boolean
);


ALTER TABLE rnacen.r2dt_results OWNER TO rnacen;

--
-- Name: load_secondary_layout_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.load_secondary_layout_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.load_secondary_layout_id_seq OWNER TO rnacen;

--
-- Name: load_secondary_layout_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.load_secondary_layout_id_seq OWNED BY rnacen.r2dt_results.id;


--
-- Name: load_secondary_layout_models; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.load_secondary_layout_models (
    model_name text NOT NULL,
    taxid integer NOT NULL,
    rna_type text NOT NULL,
    so_term text NOT NULL,
    cell_location text NOT NULL,
    model_source text NOT NULL,
    model_length integer NOT NULL
);


ALTER TABLE rnacen.load_secondary_layout_models OWNER TO rnacen;

--
-- Name: load_traveler_attempted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.load_traveler_attempted (
    urs text NOT NULL,
    r2dt_version text
);


ALTER TABLE rnacen.load_traveler_attempted OWNER TO rnacen;

--
-- Name: nhmmer_results_sq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.nhmmer_results_sq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 20;


ALTER SEQUENCE rnacen.nhmmer_results_sq OWNER TO rnacen;

--
-- Name: old_summaries; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.old_summaries (
    id integer,
    rna_id text,
    context text,
    summary text,
    cost double precision,
    total_tokens integer,
    attempts integer,
    truthful boolean,
    problem_summary boolean,
    consistency_check_result text,
    selection_method text
);


ALTER TABLE rnacen.old_summaries OWNER TO rnacen;

--
-- Name: ontology_terms; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.ontology_terms (
    ontology_term_id character varying(15) NOT NULL,
    ontology character varying(5),
    name text,
    definition text
);


ALTER TABLE rnacen.ontology_terms OWNER TO rnacen;

--
-- Name: pipeline_tracking_genome_mapping; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.pipeline_tracking_genome_mapping (
    id bigint NOT NULL,
    urs_taxid text NOT NULL,
    assembly_id text NOT NULL,
    last_run timestamp without time zone NOT NULL
);


ALTER TABLE rnacen.pipeline_tracking_genome_mapping OWNER TO rnacen;

--
-- Name: pipeline_tracking_genome_mapping_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.pipeline_tracking_genome_mapping_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.pipeline_tracking_genome_mapping_id_seq OWNER TO rnacen;

--
-- Name: pipeline_tracking_genome_mapping_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.pipeline_tracking_genome_mapping_id_seq OWNED BY rnacen.pipeline_tracking_genome_mapping.id;


--
-- Name: pipeline_tracking_qa_scan; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.pipeline_tracking_qa_scan (
    id bigint NOT NULL,
    urs text NOT NULL,
    model_source text NOT NULL,
    source_version text NOT NULL,
    last_run timestamp without time zone NOT NULL
);


ALTER TABLE rnacen.pipeline_tracking_qa_scan OWNER TO rnacen;

--
-- Name: pipeline_tracking_scan_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.pipeline_tracking_scan_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.pipeline_tracking_scan_id_seq OWNER TO rnacen;

--
-- Name: pipeline_tracking_scan_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.pipeline_tracking_scan_id_seq OWNED BY rnacen.pipeline_tracking_qa_scan.id;


--
-- Name: pipeline_tracking_traveler; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.pipeline_tracking_traveler (
    id bigint NOT NULL,
    urs text NOT NULL,
    last_run timestamp without time zone NOT NULL,
    r2dt_version text
);


ALTER TABLE rnacen.pipeline_tracking_traveler OWNER TO rnacen;

--
-- Name: pipeline_tracking_traveler_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.pipeline_tracking_traveler_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.pipeline_tracking_traveler_id_seq OWNER TO rnacen;

--
-- Name: pipeline_tracking_traveler_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.pipeline_tracking_traveler_id_seq OWNED BY rnacen.pipeline_tracking_traveler.id;


--
-- Name: protein_info; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.protein_info (
    protein_accession text NOT NULL,
    description text,
    label text,
    synonyms text[]
);


ALTER TABLE rnacen.protein_info OWNER TO rnacen;

--
-- Name: publications; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.publications (
    id integer NOT NULL,
    database character varying(40) NOT NULL,
    total_ids integer NOT NULL,
    results integer NOT NULL
);


ALTER TABLE rnacen.publications OWNER TO rnacen;

--
-- Name: publications_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.publications_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.publications_id_seq OWNER TO rnacen;

--
-- Name: publications_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.publications_id_seq OWNED BY rnacen.publications.id;


--
-- Name: qa_status; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.qa_status (
    rna_id character varying(50) NOT NULL,
    upi character varying(30) NOT NULL,
    taxid integer NOT NULL,
    has_issue boolean NOT NULL,
    incomplete_sequence boolean NOT NULL,
    possible_contamination boolean NOT NULL,
    missing_rfam_match boolean NOT NULL,
    messages jsonb NOT NULL,
    from_repetitive_region boolean NOT NULL,
    possible_orf boolean NOT NULL
);


ALTER TABLE rnacen.qa_status OWNER TO rnacen;

--
-- Name: r2dt_models; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.r2dt_models (
    id integer NOT NULL,
    model_name text NOT NULL,
    taxid integer NOT NULL,
    cellular_location text,
    rna_type text NOT NULL,
    so_term_id text NOT NULL,
    model_source text NOT NULL,
    model_length integer NOT NULL,
    model_basepair_count integer NOT NULL
);


ALTER TABLE rnacen.r2dt_models OWNER TO rnacen;

--
-- Name: release_stats; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.release_stats (
    dbid bigint,
    this_release bigint NOT NULL,
    prev_release bigint,
    start_time timestamp without time zone,
    end_time timestamp without time zone,
    ff_loaded_rows bigint,
    retired_prev_releases bigint,
    retired_this_release bigint,
    retired_next_releases bigint,
    retired_total bigint,
    created_w_predecessors_v_1 bigint,
    created_w_predecessors_v_gt1 bigint,
    created_w_predecessors bigint,
    created_wo_predecessors_v_1 bigint,
    created_wo_predecessors_v_gt1 bigint,
    created_wo_predecessors bigint,
    active_created_prev_releases bigint,
    active_created_this_release bigint,
    active_created_next_releases bigint,
    created_this_release bigint,
    active_updated_this_release bigint,
    active_untouched_this_release bigint,
    active_total bigint,
    ff_taxid_nulls bigint
);


ALTER TABLE rnacen.release_stats OWNER TO rnacen;

--
-- Name: rfam_analyzed_sequences; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rfam_analyzed_sequences (
    upi character varying(13) NOT NULL,
    date date NOT NULL,
    total_matches integer DEFAULT 0 NOT NULL,
    rfam_version character varying(5),
    total_family_matches integer DEFAULT 0 NOT NULL,
    CONSTRAINT rfam_analyzed_sequences_check CHECK ((total_matches >= total_family_matches)),
    CONSTRAINT rfam_analyzed_sequences_total_family_matches_check CHECK ((total_family_matches >= 0)),
    CONSTRAINT rfam_analyzed_sequences_total_matches_check CHECK ((total_matches >= 0))
);


ALTER TABLE rnacen.rfam_analyzed_sequences OWNER TO rnacen;

--
-- Name: rfam_clans; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rfam_clans (
    rfam_clan_id character varying(20) NOT NULL,
    name text NOT NULL,
    description text NOT NULL,
    family_count integer NOT NULL,
    CONSTRAINT rfam_clans_family_count_check CHECK ((family_count >= 0))
);


ALTER TABLE rnacen.rfam_clans OWNER TO rnacen;

--
-- Name: rfam_go_terms; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rfam_go_terms (
    rfam_go_term_id integer NOT NULL,
    rfam_model_id character varying(20) NOT NULL,
    ontology_term_id character varying(15) NOT NULL
);


ALTER TABLE rnacen.rfam_go_terms OWNER TO rnacen;

--
-- Name: rfam_go_terms_rfam_go_term_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.rfam_go_terms_rfam_go_term_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.rfam_go_terms_rfam_go_term_id_seq OWNER TO rnacen;

--
-- Name: rfam_go_terms_rfam_go_term_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.rfam_go_terms_rfam_go_term_id_seq OWNED BY rnacen.rfam_go_terms.rfam_go_term_id;


--
-- Name: rfam_model_hits; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rfam_model_hits (
    rfam_hit_id integer NOT NULL,
    sequence_start integer NOT NULL,
    sequence_stop integer NOT NULL,
    sequence_completeness double precision NOT NULL,
    model_start integer NOT NULL,
    model_stop integer NOT NULL,
    model_completeness double precision NOT NULL,
    overlap character varying(30) NOT NULL,
    e_value double precision NOT NULL,
    score double precision NOT NULL,
    rfam_model_id character varying(20) NOT NULL,
    upi character varying(13) NOT NULL,
    rnc_sequence_features_id integer,
    CONSTRAINT rfam_model_hits_model_start_check CHECK ((model_start >= 0)),
    CONSTRAINT rfam_model_hits_model_stop_check CHECK ((model_stop >= 0)),
    CONSTRAINT rfam_model_hits_sequence_start_check CHECK ((sequence_start >= 0)),
    CONSTRAINT rfam_model_hits_sequence_stop_check CHECK ((sequence_stop >= 0))
);


ALTER TABLE rnacen.rfam_model_hits OWNER TO rnacen;

--
-- Name: rfam_model_hits_rfam_hit_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.rfam_model_hits_rfam_hit_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.rfam_model_hits_rfam_hit_id_seq OWNER TO rnacen;

--
-- Name: rfam_model_hits_rfam_hit_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.rfam_model_hits_rfam_hit_id_seq OWNED BY rnacen.rfam_model_hits.rfam_hit_id;


--
-- Name: rfam_models; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rfam_models (
    rfam_model_id character varying(20) NOT NULL,
    short_name character varying(50) NOT NULL,
    long_name character varying(200) NOT NULL,
    description character varying(2000),
    seed_count integer NOT NULL,
    full_count integer NOT NULL,
    length integer NOT NULL,
    is_suppressed boolean NOT NULL,
    domain character varying(50),
    rna_type character varying(250) NOT NULL,
    rfam_clan_id character varying(20),
    rfam_rna_type text NOT NULL,
    so_rna_type text,
    CONSTRAINT rfam_models_full_count_check CHECK ((full_count >= 0)),
    CONSTRAINT rfam_models_length_check CHECK ((length >= 0)),
    CONSTRAINT rfam_models_seed_count_check CHECK ((seed_count >= 0))
);


ALTER TABLE rnacen.rfam_models OWNER TO rnacen;

--
-- Name: rna; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rna (
    id bigint,
    upi character varying(30) NOT NULL,
    "timestamp" timestamp without time zone,
    userstamp character varying(60),
    crc64 character(16),
    len integer,
    seq_short character varying(4000),
    seq_long text,
    md5 character varying(64),
    CONSTRAINT constraint_rna_seq_min_length CHECK ((char_length((seq_short)::text) >= 10))
);


ALTER TABLE rnacen.rna OWNER TO rnacen;

--
-- Name: TABLE rna; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON TABLE rnacen.rna IS 'protein sequences';


--
-- Name: COLUMN rna.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rna.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN rna."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rna."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN rna.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rna.userstamp IS 'user of the last modification';


--
-- Name: COLUMN rna.crc64; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rna.crc64 IS 'crc64 checksum for the sequence';


--
-- Name: COLUMN rna.len; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rna.len IS 'sequence length';


--
-- Name: COLUMN rna.seq_short; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rna.seq_short IS 'sequences shorter or equal to 4000 residues';


--
-- Name: COLUMN rna.seq_long; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rna.seq_long IS 'sequences longer than 4000 residues';


--
-- Name: COLUMN rna.md5; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rna.md5 IS 'MD5 checksum for the sequence';


--
-- Name: rnc_accession_sequence_feature; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rnc_accession_sequence_feature (
    id bigint NOT NULL,
    rnc_sequence_feature_id integer NOT NULL,
    accession text NOT NULL
);


ALTER TABLE rnacen.rnc_accession_sequence_feature OWNER TO rnacen;

--
-- Name: rnc_accession_sequence_region; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rnc_accession_sequence_region (
    id bigint NOT NULL,
    accession text NOT NULL,
    region_id bigint NOT NULL
);


ALTER TABLE rnacen.rnc_accession_sequence_region OWNER TO rnacen;

--
-- Name: rnc_accession_sequence_region_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.rnc_accession_sequence_region_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.rnc_accession_sequence_region_id_seq OWNER TO rnacen;

--
-- Name: rnc_accession_sequence_region_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.rnc_accession_sequence_region_id_seq OWNED BY rnacen.rnc_accession_sequence_region.id;


--
-- Name: rnc_accessions_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.rnc_accessions_seq
    START WITH 80872181
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 20;


ALTER SEQUENCE rnacen.rnc_accessions_seq OWNER TO rnacen;

--
-- Name: rnc_accessions; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rnc_accessions (
    id bigint DEFAULT nextval('rnacen.rnc_accessions_seq'::regclass),
    accession character varying(200) NOT NULL,
    parent_ac character varying(200),
    seq_version bigint,
    feature_start bigint,
    feature_end bigint,
    feature_name character varying(80),
    ordinal bigint,
    division character varying(6),
    keywords character varying(200),
    description character varying(500),
    species character varying(300),
    organelle character varying(200),
    classification character varying(1000),
    project character varying(100),
    is_composite character varying(2),
    non_coding_id character varying(200),
    database character varying(40),
    external_id character varying(300),
    optional_id character varying(200),
    common_name character varying(200),
    allele character varying(100),
    anticodon character varying(200),
    chromosome character varying(200),
    experiment text,
    function character varying(4000),
    gene character varying(200),
    gene_synonym character varying(800),
    inference character varying(600),
    locus_tag character varying(100),
    map character varying(400),
    mol_type character varying(100),
    ncrna_class character varying(100),
    note text,
    old_locus_tag character varying(200),
    operon character varying(100),
    product character varying(600),
    pseudogene character varying(100),
    standard_name character varying(200),
    db_xref text,
    rna_type character varying(15),
    url text
)
WITH (autovacuum_vacuum_scale_factor='0.05');


ALTER TABLE rnacen.rnc_accessions OWNER TO rnacen;

--
-- Name: rnc_accessions_sequence_features_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.rnc_accessions_sequence_features_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.rnc_accessions_sequence_features_id_seq OWNER TO rnacen;

--
-- Name: rnc_accessions_sequence_features_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.rnc_accessions_sequence_features_id_seq OWNED BY rnacen.rnc_accession_sequence_feature.id;


--
-- Name: rnc_assembly_pk_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.rnc_assembly_pk_seq
    START WITH 5029021
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 20;


ALTER SEQUENCE rnacen.rnc_assembly_pk_seq OWNER TO rnacen;

--
-- Name: rnc_chemical_components; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rnc_chemical_components (
    id character varying(16) NOT NULL,
    description character varying(1000),
    one_letter_code character varying(2),
    ccd_id character varying(6) DEFAULT 'NULL'::character varying,
    source character varying(20) DEFAULT 'NULL'::character varying,
    modomics_short_name character varying(40) DEFAULT 'NULL'::character varying
);


ALTER TABLE rnacen.rnc_chemical_components OWNER TO rnacen;

--
-- Name: rnc_coordinates_pk_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.rnc_coordinates_pk_seq
    START WITH 303450161
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 20;


ALTER SEQUENCE rnacen.rnc_coordinates_pk_seq OWNER TO rnacen;

--
-- Name: rnc_database; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rnc_database (
    id bigint NOT NULL,
    "timestamp" timestamp without time zone NOT NULL,
    userstamp character varying(30) NOT NULL,
    descr character varying(60) NOT NULL,
    current_release integer,
    full_descr character varying(1024),
    alive character varying(1) NOT NULL,
    for_release character(1),
    display_name character varying(60),
    project_id character varying(20),
    avg_length bigint,
    min_length bigint,
    max_length bigint,
    num_sequences bigint,
    num_organisms bigint,
    description character varying(1024),
    url character varying(500),
    example jsonb,
    reference jsonb
);


ALTER TABLE rnacen.rnc_database OWNER TO rnacen;

--
-- Name: TABLE rnc_database; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON TABLE rnacen.rnc_database IS 'source databases';


--
-- Name: COLUMN rnc_database.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rnc_database.id IS 'database identifier';


--
-- Name: COLUMN rnc_database."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rnc_database."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN rnc_database.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rnc_database.userstamp IS 'user of the last modification';


--
-- Name: COLUMN rnc_database.descr; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rnc_database.descr IS 'database abbreviation';


--
-- Name: COLUMN rnc_database.current_release; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rnc_database.current_release IS 'release identifier of the current release';


--
-- Name: COLUMN rnc_database.full_descr; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rnc_database.full_descr IS 'database description';


--
-- Name: COLUMN rnc_database.project_id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rnc_database.project_id IS 'ENA project id';


--
-- Name: COLUMN rnc_database.avg_length; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rnc_database.avg_length IS 'Precomputed average sequence length for a database';


--
-- Name: COLUMN rnc_database.min_length; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rnc_database.min_length IS 'Precomputed minimum sequence length for a database';


--
-- Name: COLUMN rnc_database.max_length; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rnc_database.max_length IS 'Precomputed maximum sequence length for a database';


--
-- Name: COLUMN rnc_database.num_sequences; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rnc_database.num_sequences IS 'Precomputed number of distinct sequences annotated by the database';


--
-- Name: COLUMN rnc_database.num_organisms; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rnc_database.num_organisms IS 'Precomputed number of distinct taxids annotated by the database';


--
-- Name: rnc_database_json_stats; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rnc_database_json_stats (
    database character varying(40) NOT NULL,
    length_counts text,
    taxonomic_lineage text
);


ALTER TABLE rnacen.rnc_database_json_stats OWNER TO rnacen;

--
-- Name: rnc_database_references; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rnc_database_references (
    id bigint NOT NULL,
    dbid integer NOT NULL,
    reference_id bigint NOT NULL
);


ALTER TABLE rnacen.rnc_database_references OWNER TO rnacen;

--
-- Name: rnc_database_references_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.rnc_database_references_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.rnc_database_references_id_seq OWNER TO rnacen;

--
-- Name: rnc_database_references_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.rnc_database_references_id_seq OWNED BY rnacen.rnc_database_references.id;


--
-- Name: rnc_feedback_overlap; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rnc_feedback_overlap (
    upi_taxid text NOT NULL,
    overlaps_with text[] NOT NULL,
    no_overlaps_with text[] NOT NULL,
    overlapping_upis text[],
    assembly_id character varying(255) NOT NULL,
    should_ignore boolean DEFAULT false,
    id bigint NOT NULL
);


ALTER TABLE rnacen.rnc_feedback_overlap OWNER TO rnacen;

--
-- Name: rnc_feedback_overlap_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.rnc_feedback_overlap_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.rnc_feedback_overlap_id_seq OWNER TO rnacen;

--
-- Name: rnc_feedback_overlap_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.rnc_feedback_overlap_id_seq OWNED BY rnacen.rnc_feedback_overlap.id;


--
-- Name: rnc_feedback_target_assemblies; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rnc_feedback_target_assemblies (
    assembly_id character varying(255),
    chromosome text,
    dbid bigint,
    database character varying(60)
);


ALTER TABLE rnacen.rnc_feedback_target_assemblies OWNER TO rnacen;

--
-- Name: rnc_gene_status; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rnc_gene_status (
    id bigint NOT NULL,
    assembly_id text NOT NULL,
    urs_taxid text NOT NULL,
    region_id integer NOT NULL,
    status text NOT NULL
);


ALTER TABLE rnacen.rnc_gene_status OWNER TO rnacen;

--
-- Name: rnc_gene_status_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.rnc_gene_status_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.rnc_gene_status_id_seq OWNER TO rnacen;

--
-- Name: rnc_gene_status_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.rnc_gene_status_id_seq OWNED BY rnacen.rnc_gene_status.id;


--
-- Name: rnc_import_tracker; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rnc_import_tracker (
    id bigint NOT NULL,
    db_name character varying(60) NOT NULL,
    db_id bigint NOT NULL,
    last_import_date timestamp without time zone,
    file_md5 character varying(64)
);


ALTER TABLE rnacen.rnc_import_tracker OWNER TO rnacen;

--
-- Name: rnc_import_tracker_db_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.rnc_import_tracker_db_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.rnc_import_tracker_db_id_seq OWNER TO rnacen;

--
-- Name: rnc_import_tracker_db_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.rnc_import_tracker_db_id_seq OWNED BY rnacen.rnc_import_tracker.db_id;


--
-- Name: rnc_import_tracker_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.rnc_import_tracker_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.rnc_import_tracker_id_seq OWNER TO rnacen;

--
-- Name: rnc_import_tracker_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.rnc_import_tracker_id_seq OWNED BY rnacen.rnc_import_tracker.id;


--
-- Name: rnc_interactions; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rnc_interactions (
    id bigint NOT NULL,
    intact_id text NOT NULL,
    urs_taxid text NOT NULL,
    interacting_id text NOT NULL,
    names jsonb NOT NULL,
    taxid integer NOT NULL
);


ALTER TABLE rnacen.rnc_interactions OWNER TO rnacen;

--
-- Name: rnc_interactions_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.rnc_interactions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.rnc_interactions_id_seq OWNER TO rnacen;

--
-- Name: rnc_interactions_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.rnc_interactions_id_seq OWNED BY rnacen.rnc_interactions.id;


--
-- Name: rnc_locus; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rnc_locus (
    id bigint NOT NULL,
    assembly_id text NOT NULL,
    locus_name text NOT NULL,
    public_locus_name text NOT NULL,
    chromosome text NOT NULL,
    strand text NOT NULL,
    locus_start integer NOT NULL,
    locus_stop integer NOT NULL,
    member_count integer NOT NULL
);


ALTER TABLE rnacen.rnc_locus OWNER TO rnacen;

--
-- Name: rnc_locus_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.rnc_locus_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.rnc_locus_id_seq OWNER TO rnacen;

--
-- Name: rnc_locus_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.rnc_locus_id_seq OWNED BY rnacen.rnc_locus.id;


--
-- Name: rnc_locus_members; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rnc_locus_members (
    id bigint NOT NULL,
    urs_taxid text NOT NULL,
    region_id integer NOT NULL,
    locus_id bigint NOT NULL,
    membership_status text NOT NULL
);


ALTER TABLE rnacen.rnc_locus_members OWNER TO rnacen;

--
-- Name: rnc_locus_members_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.rnc_locus_members_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.rnc_locus_members_id_seq OWNER TO rnacen;

--
-- Name: rnc_locus_members_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.rnc_locus_members_id_seq OWNED BY rnacen.rnc_locus_members.id;


--
-- Name: rnc_modifications; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rnc_modifications (
    id bigint NOT NULL,
    "position" bigint NOT NULL,
    author_assigned_position bigint NOT NULL,
    modification_id character varying(16) NOT NULL,
    upi character varying(26) NOT NULL,
    accession character varying(200) NOT NULL,
    CONSTRAINT sys_c0042332 CHECK (("position" >= 0))
);


ALTER TABLE rnacen.rnc_modifications OWNER TO rnacen;

--
-- Name: rnc_modifications_sq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.rnc_modifications_sq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 20;


ALTER SEQUENCE rnacen.rnc_modifications_sq OWNER TO rnacen;

--
-- Name: rnc_reference_map_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.rnc_reference_map_seq
    START WITH 84635921
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 20;


ALTER SEQUENCE rnacen.rnc_reference_map_seq OWNER TO rnacen;

--
-- Name: rnc_reference_map; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rnc_reference_map (
    id bigint DEFAULT nextval('rnacen.rnc_reference_map_seq'::regclass) NOT NULL,
    accession character varying(200) NOT NULL,
    reference_id bigint NOT NULL
)
WITH (autovacuum_vacuum_scale_factor='0.05');


ALTER TABLE rnacen.rnc_reference_map OWNER TO rnacen;

--
-- Name: rnc_refs_pk_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.rnc_refs_pk_seq
    START WITH 510701
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 20;


ALTER SEQUENCE rnacen.rnc_refs_pk_seq OWNER TO rnacen;

--
-- Name: rnc_references; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rnc_references (
    id bigint DEFAULT nextval('rnacen.rnc_refs_pk_seq'::regclass) NOT NULL,
    md5 character varying(64) NOT NULL,
    authors text,
    location character varying(4000),
    title character varying(4000),
    pmid character varying(40),
    pmcid character varying(40),
    epmcid character varying(40),
    doi character varying(160),
    epmc_updated smallint
);


ALTER TABLE rnacen.rnc_references OWNER TO rnacen;

--
-- Name: TABLE rnc_references; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON TABLE rnacen.rnc_references IS 'This table contains unique literature references, which are linked to their corresponding xrefs using the RNC_REFERENCES_MAP table.';


--
-- Name: COLUMN rnc_references.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rnc_references.id IS 'Unique id';


--
-- Name: COLUMN rnc_references.md5; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rnc_references.md5 IS 'md5_hex(AUTHORS + TITLE + LOCATION)';


--
-- Name: COLUMN rnc_references.authors; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rnc_references.authors IS 'Paper authors';


--
-- Name: COLUMN rnc_references.location; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rnc_references.location IS 'VARCHAR2 used because it supports up to 4000 characters';


--
-- Name: COLUMN rnc_references.title; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rnc_references.title IS 'Paper tile';


--
-- Name: COLUMN rnc_references.pmid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rnc_references.pmid IS 'Pubmed id';


--
-- Name: COLUMN rnc_references.pmcid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rnc_references.pmcid IS 'Pubmed Central id';


--
-- Name: COLUMN rnc_references.epmcid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rnc_references.epmcid IS 'Europe PMC id';


--
-- Name: COLUMN rnc_references.doi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rnc_references.doi IS 'Digital Object Identifier';


--
-- Name: COLUMN rnc_references.epmc_updated; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rnc_references.epmc_updated IS 'Flag showing whether the data have been updated with the EuropePMC data.';


--
-- Name: rnc_related_sequences; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rnc_related_sequences (
    id integer NOT NULL,
    source_urs_taxid character varying(50) NOT NULL,
    source_accession character varying(100) NOT NULL,
    target_urs_taxid character varying(50),
    target_accession character varying(100) NOT NULL,
    methods text[],
    relationship_type text DEFAULT ''::text NOT NULL
);


ALTER TABLE rnacen.rnc_related_sequences OWNER TO rnacen;

--
-- Name: rnc_related_sequences_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.rnc_related_sequences_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.rnc_related_sequences_id_seq OWNER TO rnacen;

--
-- Name: rnc_related_sequences_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.rnc_related_sequences_id_seq OWNED BY rnacen.rnc_related_sequences.id;


--
-- Name: rnc_relationship_types; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rnc_relationship_types (
    relationship_type text NOT NULL
);


ALTER TABLE rnacen.rnc_relationship_types OWNER TO rnacen;

--
-- Name: rnc_release; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rnc_release (
    id bigint NOT NULL,
    dbid bigint NOT NULL,
    release_date timestamp without time zone NOT NULL,
    release_type character(1) NOT NULL,
    status character(1) NOT NULL,
    "timestamp" timestamp without time zone NOT NULL,
    userstamp character varying(30) NOT NULL,
    descr character varying(32),
    force_load character(1)
);


ALTER TABLE rnacen.rnc_release OWNER TO rnacen;

--
-- Name: TABLE rnc_release; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON TABLE rnacen.rnc_release IS 'source database releases';


--
-- Name: COLUMN rnc_release.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rnc_release.id IS 'release identifier';


--
-- Name: COLUMN rnc_release.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rnc_release.dbid IS 'database identifier';


--
-- Name: COLUMN rnc_release.release_date; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.rnc_release.release_date IS 'release date';


--
-- Name: rnc_rna_precomputed; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rnc_rna_precomputed (
    id character varying(44) NOT NULL,
    taxid bigint,
    description character varying(500),
    upi character varying(26) NOT NULL,
    rna_type character varying(500) DEFAULT 'NULL'::character varying,
    update_date date DEFAULT ('now'::text)::date,
    has_coordinates boolean DEFAULT false,
    databases text,
    is_active boolean,
    last_release integer,
    short_description text,
    so_rna_type text,
    is_locus_representative boolean DEFAULT true,
    assigned_so_rna_type text
)
WITH (autovacuum_vacuum_scale_factor='0.05');


ALTER TABLE rnacen.rnc_rna_precomputed OWNER TO rnacen;

--
-- Name: rnc_secondary_structure; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rnc_secondary_structure (
    id integer,
    secondary_structure text,
    md5 character varying(32),
    rnc_accession_id character varying(100)
);


ALTER TABLE rnacen.rnc_secondary_structure OWNER TO rnacen;

--
-- Name: rnc_secondary_structure_layout_models_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.rnc_secondary_structure_layout_models_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.rnc_secondary_structure_layout_models_id_seq OWNER TO rnacen;

--
-- Name: rnc_secondary_structure_layout_models_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.rnc_secondary_structure_layout_models_id_seq OWNED BY rnacen.r2dt_models.id;


--
-- Name: rnc_sequence_exons; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rnc_sequence_exons (
    id integer NOT NULL,
    region_id integer,
    exon_start integer NOT NULL,
    exon_stop integer NOT NULL
);


ALTER TABLE rnacen.rnc_sequence_exons OWNER TO rnacen;

--
-- Name: rnc_sequence_exons_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.rnc_sequence_exons_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.rnc_sequence_exons_id_seq OWNER TO rnacen;

--
-- Name: rnc_sequence_exons_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.rnc_sequence_exons_id_seq OWNED BY rnacen.rnc_sequence_exons.id;


--
-- Name: rnc_sequence_feature_providers; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rnc_sequence_feature_providers (
    id bigint NOT NULL,
    name text,
    type text,
    description text
);


ALTER TABLE rnacen.rnc_sequence_feature_providers OWNER TO rnacen;

--
-- Name: rnc_sequence_feature_providers_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.rnc_sequence_feature_providers_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.rnc_sequence_feature_providers_id_seq OWNER TO rnacen;

--
-- Name: rnc_sequence_feature_providers_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.rnc_sequence_feature_providers_id_seq OWNED BY rnacen.rnc_sequence_feature_providers.id;


--
-- Name: rnc_sequence_feature_types; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rnc_sequence_feature_types (
    feature_name text NOT NULL,
    pretty_name text NOT NULL
);


ALTER TABLE rnacen.rnc_sequence_feature_types OWNER TO rnacen;

--
-- Name: rnc_sequence_features; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rnc_sequence_features (
    rnc_sequence_features_id integer NOT NULL,
    upi character varying(100) NOT NULL,
    taxid integer,
    accession character varying(100),
    start integer NOT NULL,
    stop integer NOT NULL,
    feature_name character varying(50) NOT NULL,
    metadata jsonb,
    feature_provider text
);


ALTER TABLE rnacen.rnc_sequence_features OWNER TO rnacen;

--
-- Name: rnc_sequence_features_rnc_sequence_features_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.rnc_sequence_features_rnc_sequence_features_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.rnc_sequence_features_rnc_sequence_features_id_seq OWNER TO rnacen;

--
-- Name: rnc_sequence_features_rnc_sequence_features_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.rnc_sequence_features_rnc_sequence_features_id_seq OWNED BY rnacen.rnc_sequence_features.rnc_sequence_features_id;


--
-- Name: rnc_sequence_regions; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rnc_sequence_regions (
    id integer NOT NULL,
    urs_taxid text NOT NULL,
    region_name text NOT NULL,
    chromosome text NOT NULL,
    strand integer NOT NULL,
    region_start integer NOT NULL,
    region_stop integer NOT NULL,
    assembly_id character varying(255),
    was_mapped boolean NOT NULL,
    identity double precision,
    providing_databases text[],
    exon_count integer NOT NULL,
    CONSTRAINT ck_rnc_sequence_regions__exon_count_size CHECK ((exon_count > 0))
);


ALTER TABLE rnacen.rnc_sequence_regions OWNER TO rnacen;

--
-- Name: xref_pk_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.xref_pk_seq
    START WITH 250817201
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 20;


ALTER SEQUENCE rnacen.xref_pk_seq OWNER TO rnacen;

--
-- Name: xref; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar])))
);


ALTER TABLE rnacen.xref OWNER TO rnacen;

--
-- Name: TABLE xref; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON TABLE rnacen.xref IS 'database cross-references';


--
-- Name: COLUMN xref.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref.dbid IS 'database identifier';


--
-- Name: COLUMN xref.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref.version_i IS 'sequence version';


--
-- Name: COLUMN xref.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref.id IS 'unique id';


--
-- Name: rnc_sequence_regions_active_provided; Type: VIEW; Schema: rnacen; Owner: rnacen
--

CREATE VIEW rnacen.rnc_sequence_regions_active_provided AS
 SELECT region.id,
    region.urs_taxid,
    region.region_name,
    region.chromosome,
    region.strand,
    region.region_start,
    region.region_stop,
    region.assembly_id,
    region.was_mapped,
    region.identity,
    region.providing_databases,
    region.exon_count
   FROM rnacen.rnc_sequence_regions region
  WHERE ((region.was_mapped = false) AND (EXISTS ( SELECT 1
           FROM (rnacen.rnc_accession_sequence_region acc_map
             JOIN rnacen.xref ON ((((xref.ac)::text = acc_map.accession) AND (xref.deleted = 'N'::bpchar))))
          WHERE (acc_map.region_id = region.id))));


ALTER VIEW rnacen.rnc_sequence_regions_active_provided OWNER TO rnacen;

--
-- Name: rnc_sequence_regions_active_mapped; Type: VIEW; Schema: rnacen; Owner: rnacen
--

CREATE VIEW rnacen.rnc_sequence_regions_active_mapped AS
 SELECT regions.id,
    regions.urs_taxid,
    regions.region_name,
    regions.chromosome,
    regions.strand,
    regions.region_start,
    regions.region_stop,
    regions.assembly_id,
    regions.was_mapped,
    regions.identity,
    regions.providing_databases,
    regions.exon_count
   FROM rnacen.rnc_sequence_regions regions
  WHERE ((regions.was_mapped = true) AND (NOT (EXISTS ( SELECT 1
           FROM rnacen.rnc_sequence_regions_active_provided provided
          WHERE ((provided.urs_taxid = regions.urs_taxid) AND ((provided.assembly_id)::text = (regions.assembly_id)::text))))));


ALTER VIEW rnacen.rnc_sequence_regions_active_mapped OWNER TO rnacen;

--
-- Name: rnc_sequence_regions_active; Type: MATERIALIZED VIEW; Schema: rnacen; Owner: rnacen
--

CREATE MATERIALIZED VIEW rnacen.rnc_sequence_regions_active AS
 SELECT rnc_sequence_regions_active_provided.id,
    rnc_sequence_regions_active_provided.urs_taxid,
    rnc_sequence_regions_active_provided.region_name,
    rnc_sequence_regions_active_provided.chromosome,
    rnc_sequence_regions_active_provided.strand,
    rnc_sequence_regions_active_provided.region_start,
    rnc_sequence_regions_active_provided.region_stop,
    rnc_sequence_regions_active_provided.assembly_id,
    rnc_sequence_regions_active_provided.was_mapped,
    rnc_sequence_regions_active_provided.identity,
    rnc_sequence_regions_active_provided.providing_databases,
    rnc_sequence_regions_active_provided.exon_count
   FROM rnacen.rnc_sequence_regions_active_provided
UNION
 SELECT rnc_sequence_regions_active_mapped.id,
    rnc_sequence_regions_active_mapped.urs_taxid,
    rnc_sequence_regions_active_mapped.region_name,
    rnc_sequence_regions_active_mapped.chromosome,
    rnc_sequence_regions_active_mapped.strand,
    rnc_sequence_regions_active_mapped.region_start,
    rnc_sequence_regions_active_mapped.region_stop,
    rnc_sequence_regions_active_mapped.assembly_id,
    rnc_sequence_regions_active_mapped.was_mapped,
    rnc_sequence_regions_active_mapped.identity,
    rnc_sequence_regions_active_mapped.providing_databases,
    rnc_sequence_regions_active_mapped.exon_count
   FROM rnacen.rnc_sequence_regions_active_mapped
  WITH NO DATA;


ALTER MATERIALIZED VIEW rnacen.rnc_sequence_regions_active OWNER TO rnacen;

--
-- Name: rnc_sequence_regions_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.rnc_sequence_regions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.rnc_sequence_regions_id_seq OWNER TO rnacen;

--
-- Name: rnc_sequence_regions_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.rnc_sequence_regions_id_seq OWNED BY rnacen.rnc_sequence_regions.id;


--
-- Name: rnc_taxonomy; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.rnc_taxonomy (
    id integer NOT NULL,
    name text NOT NULL,
    lineage text NOT NULL,
    aliases text[],
    replaced_by integer,
    common_name text,
    is_deleted boolean DEFAULT false NOT NULL,
    CONSTRAINT rnc_taxonomy_common_name_check CHECK ((common_name <> ''::text))
);


ALTER TABLE rnacen.rnc_taxonomy OWNER TO rnacen;

--
-- Name: seq_database_id; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.seq_database_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 20;


ALTER SEQUENCE rnacen.seq_database_id OWNER TO rnacen;

--
-- Name: seq_release_id; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.seq_release_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.seq_release_id OWNER TO rnacen;

--
-- Name: seq_upi; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.seq_upi
    START WITH 11735073
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.seq_upi OWNER TO rnacen;

--
-- Name: temp_bad_is_active; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.temp_bad_is_active (
    urs_taxid text,
    is_active boolean,
    all_deleted boolean
);


ALTER TABLE rnacen.temp_bad_is_active OWNER TO rnacen;

--
-- Name: unindexed_foreign_keys; Type: VIEW; Schema: rnacen; Owner: rnacen
--

CREATE VIEW rnacen.unindexed_foreign_keys AS
 WITH y AS (
         SELECT format('%I.%I'::text, n1.nspname, c1.relname) AS referencing_tbl,
            quote_ident((a1.attname)::text) AS referencing_column,
            t.conname AS existing_fk_on_referencing_tbl,
            format('%I.%I'::text, n2.nspname, c2.relname) AS referenced_tbl,
            quote_ident((a2.attname)::text) AS referenced_column,
            pg_relation_size((format('%I.%I'::text, n1.nspname, c1.relname))::regclass) AS referencing_tbl_bytes,
            pg_relation_size((format('%I.%I'::text, n2.nspname, c2.relname))::regclass) AS referenced_tbl_bytes,
            format('CREATE INDEX IF NOT EXISTS %I ON %I.%I(%I);'::text, (((c1.relname)::text || '$'::text) || (a1.attname)::text), n1.nspname, c1.relname, a1.attname) AS suggestion
           FROM ((((((pg_constraint t
             JOIN pg_attribute a1 ON (((a1.attrelid = t.conrelid) AND (a1.attnum = t.conkey[1]))))
             JOIN pg_class c1 ON ((c1.oid = t.conrelid)))
             JOIN pg_namespace n1 ON ((n1.oid = c1.relnamespace)))
             JOIN pg_class c2 ON ((c2.oid = t.confrelid)))
             JOIN pg_namespace n2 ON ((n2.oid = c2.relnamespace)))
             JOIN pg_attribute a2 ON (((a2.attrelid = t.confrelid) AND (a2.attnum = t.confkey[1]))))
          WHERE ((t.contype = 'f'::"char") AND (NOT (EXISTS ( SELECT 1
                   FROM pg_index i
                  WHERE ((i.indrelid = t.conrelid) AND (i.indkey[0] = t.conkey[1]))))))
        )
 SELECT y.referencing_tbl,
    y.referencing_column,
    y.existing_fk_on_referencing_tbl,
    y.referenced_tbl,
    y.referenced_column,
    pg_size_pretty(y.referencing_tbl_bytes) AS referencing_tbl_size,
    pg_size_pretty(y.referenced_tbl_bytes) AS referenced_tbl_size,
    y.suggestion
   FROM y
  ORDER BY y.referencing_tbl_bytes DESC, y.referenced_tbl_bytes DESC, y.referencing_tbl, y.referenced_tbl, y.referencing_column, y.referenced_column;


ALTER VIEW rnacen.unindexed_foreign_keys OWNER TO rnacen;

--
-- Name: validate_layout_counts; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.validate_layout_counts (
    name text NOT NULL,
    changed integer NOT NULL,
    unchanged integer NOT NULL,
    inserted integer NOT NULL,
    moved integer NOT NULL,
    rotated integer NOT NULL,
    total integer NOT NULL,
    rna_length integer,
    not_drawn integer,
    overlap_count integer
);


ALTER TABLE rnacen.validate_layout_counts OWNER TO rnacen;

--
-- Name: validate_layout_hits; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.validate_layout_hits (
    urs text,
    sequence_rna_type character varying(500),
    sequence_taxid bigint,
    model_name text,
    model_rna_type text,
    model_source text,
    model_so_rna_type text,
    model_taxid integer
);


ALTER TABLE rnacen.validate_layout_hits OWNER TO rnacen;

--
-- Name: xref_count; Type: VIEW; Schema: rnacen; Owner: rnacen
--

CREATE VIEW rnacen.xref_count AS
 SELECT count(*) AS xref_count,
    xref.upi
   FROM rnacen.xref
  WHERE (xref.deleted = 'N'::bpchar)
  GROUP BY xref.upi
  ORDER BY (count(*)) DESC;


ALTER VIEW rnacen.xref_count OWNER TO rnacen;

--
-- Name: xref_not_unique; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_not_unique (
    dbid smallint NOT NULL,
    release_id integer NOT NULL,
    upi character(13) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(30) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(100) NOT NULL,
    version integer,
    taxid bigint
);


ALTER TABLE rnacen.xref_not_unique OWNER TO rnacen;

--
-- Name: COLUMN xref_not_unique.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_not_unique.dbid IS 'database identifier';


--
-- Name: COLUMN xref_not_unique.release_id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_not_unique.release_id IS 'release identifier';


--
-- Name: COLUMN xref_not_unique.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_not_unique.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_not_unique.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_not_unique.version IS 'sequence version in the source database';


--
-- Name: xref_p10_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p10_deleted (
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p10_deleted_check CHECK (((dbid = 10) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p10_deleted OWNER TO rnacen;

--
-- Name: xref_p10_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p10_not_deleted (
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p10_not_deleted_check CHECK (((dbid = 10) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p10_not_deleted OWNER TO rnacen;

--
-- Name: xref_p11_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p11_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p11_deleted_check CHECK (((dbid = 11) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p11_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p11_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p11_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p11_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p11_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p11_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p11_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p11_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p11_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p11_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p11_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p11_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p11_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_deleted.id IS 'unique id';


--
-- Name: xref_p11_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p11_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p11_deleted_check CHECK (((dbid = 11) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p11_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p11_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p11_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p11_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p11_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p11_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p11_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p11_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p11_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p11_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p11_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p11_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p11_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_deleted_old.id IS 'unique id';


--
-- Name: xref_p11_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p11_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p11_not_deleted_check CHECK (((dbid = 11) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p11_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p11_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p11_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p11_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p11_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p11_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p11_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p11_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p11_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p11_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p11_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p11_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p11_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_not_deleted.id IS 'unique id';


--
-- Name: xref_p11_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p11_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p11_not_deleted_check CHECK (((dbid = 11) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p11_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p11_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p11_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p11_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p11_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p11_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p11_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p11_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p11_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p11_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p11_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p11_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p11_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p11_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p12_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p12_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p12_deleted_check CHECK (((dbid = 12) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p12_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p12_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p12_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p12_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p12_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p12_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p12_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p12_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p12_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p12_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p12_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p12_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p12_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_deleted.id IS 'unique id';


--
-- Name: xref_p12_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p12_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p12_deleted_check CHECK (((dbid = 12) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p12_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p12_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p12_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p12_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p12_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p12_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p12_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p12_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p12_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p12_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p12_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p12_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p12_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_deleted_old.id IS 'unique id';


--
-- Name: xref_p12_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p12_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p12_not_deleted_check CHECK (((dbid = 12) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p12_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p12_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p12_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p12_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p12_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p12_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p12_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p12_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p12_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p12_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p12_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p12_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p12_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_not_deleted.id IS 'unique id';


--
-- Name: xref_p12_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p12_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p12_not_deleted_check CHECK (((dbid = 12) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p12_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p12_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p12_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p12_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p12_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p12_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p12_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p12_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p12_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p12_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p12_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p12_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p12_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p12_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p13_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p13_deleted (
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p13_deleted_check CHECK (((dbid = 13) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p13_deleted OWNER TO rnacen;

--
-- Name: xref_p13_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p13_not_deleted (
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p13_not_deleted_check CHECK (((dbid = 13) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p13_not_deleted OWNER TO rnacen;

--
-- Name: xref_p14_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p14_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p14_deleted_check CHECK (((dbid = 14) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p14_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p14_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p14_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p14_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p14_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p14_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p14_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p14_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p14_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p14_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p14_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p14_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p14_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_deleted.id IS 'unique id';


--
-- Name: xref_p14_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p14_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p14_deleted_check CHECK (((dbid = 14) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p14_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p14_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p14_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p14_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p14_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p14_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p14_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p14_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p14_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p14_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p14_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p14_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p14_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_deleted_old.id IS 'unique id';


--
-- Name: xref_p14_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p14_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p14_not_deleted_check CHECK (((dbid = 14) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p14_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p14_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p14_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p14_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p14_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p14_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p14_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p14_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p14_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p14_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p14_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p14_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p14_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_not_deleted.id IS 'unique id';


--
-- Name: xref_p14_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p14_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p14_not_deleted_check CHECK (((dbid = 14) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p14_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p14_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p14_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p14_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p14_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p14_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p14_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p14_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p14_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p14_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p14_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p14_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p14_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p14_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p15_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p15_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p15_deleted_check CHECK (((dbid = 15) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p15_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p15_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p15_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p15_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p15_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p15_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p15_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p15_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p15_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p15_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p15_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p15_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p15_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_deleted.id IS 'unique id';


--
-- Name: xref_p15_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p15_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p15_deleted_check CHECK (((dbid = 15) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p15_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p15_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p15_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p15_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p15_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p15_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p15_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p15_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p15_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p15_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p15_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p15_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p15_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_deleted_old.id IS 'unique id';


--
-- Name: xref_p15_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p15_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p15_not_deleted_check CHECK (((dbid = 15) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p15_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p15_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p15_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p15_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p15_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p15_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p15_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p15_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p15_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p15_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p15_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p15_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p15_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_not_deleted.id IS 'unique id';


--
-- Name: xref_p15_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p15_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p15_not_deleted_check CHECK (((dbid = 15) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p15_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p15_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p15_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p15_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p15_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p15_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p15_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p15_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p15_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p15_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p15_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p15_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p15_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p15_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p16_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p16_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p16_deleted_check CHECK (((dbid = 16) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p16_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p16_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p16_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p16_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p16_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p16_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p16_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p16_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p16_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p16_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p16_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p16_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p16_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_deleted.id IS 'unique id';


--
-- Name: xref_p16_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p16_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p16_deleted_check CHECK (((dbid = 16) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p16_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p16_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p16_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p16_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p16_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p16_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p16_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p16_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p16_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p16_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p16_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p16_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p16_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_deleted_old.id IS 'unique id';


--
-- Name: xref_p16_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p16_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p16_not_deleted_check CHECK (((dbid = 16) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p16_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p16_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p16_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p16_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p16_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p16_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p16_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p16_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p16_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p16_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p16_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p16_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p16_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_not_deleted.id IS 'unique id';


--
-- Name: xref_p16_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p16_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p16_not_deleted_check CHECK (((dbid = 16) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p16_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p16_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p16_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p16_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p16_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p16_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p16_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p16_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p16_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p16_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p16_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p16_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p16_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p16_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p17_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p17_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p17_deleted_check CHECK (((dbid = 17) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p17_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p17_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p17_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p17_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p17_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p17_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p17_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p17_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p17_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p17_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p17_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p17_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p17_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_deleted.id IS 'unique id';


--
-- Name: xref_p17_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p17_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p17_deleted_check CHECK (((dbid = 17) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p17_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p17_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p17_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p17_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p17_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p17_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p17_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p17_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p17_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p17_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p17_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p17_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p17_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_deleted_old.id IS 'unique id';


--
-- Name: xref_p17_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p17_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p17_not_deleted_check CHECK (((dbid = 17) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p17_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p17_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p17_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p17_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p17_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p17_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p17_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p17_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p17_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p17_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p17_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p17_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p17_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_not_deleted.id IS 'unique id';


--
-- Name: xref_p17_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p17_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p17_not_deleted_check CHECK (((dbid = 17) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p17_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p17_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p17_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p17_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p17_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p17_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p17_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p17_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p17_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p17_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p17_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p17_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p17_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p17_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p18_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p18_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p18_deleted_check CHECK (((dbid = 18) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p18_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p18_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p18_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p18_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p18_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p18_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p18_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p18_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p18_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p18_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p18_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p18_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p18_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_deleted.id IS 'unique id';


--
-- Name: xref_p18_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p18_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p18_deleted_check CHECK (((dbid = 18) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p18_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p18_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p18_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p18_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p18_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p18_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p18_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p18_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p18_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p18_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p18_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p18_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p18_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_deleted_old.id IS 'unique id';


--
-- Name: xref_p18_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p18_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p18_not_deleted_check CHECK (((dbid = 18) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p18_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p18_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p18_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p18_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p18_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p18_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p18_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p18_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p18_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p18_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p18_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p18_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p18_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_not_deleted.id IS 'unique id';


--
-- Name: xref_p18_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p18_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p18_not_deleted_check CHECK (((dbid = 18) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p18_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p18_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p18_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p18_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p18_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p18_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p18_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p18_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p18_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p18_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p18_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p18_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p18_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p18_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p19_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p19_deleted (
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p19_deleted_check CHECK (((dbid = 19) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p19_deleted OWNER TO rnacen;

--
-- Name: xref_p19_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p19_not_deleted (
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p19_not_deleted_check CHECK (((dbid = 19) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p19_not_deleted OWNER TO rnacen;

--
-- Name: xref_p1_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p1_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p1_deleted_check CHECK (((dbid = 1) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p1_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p1_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p1_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p1_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p1_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p1_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p1_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p1_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p1_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p1_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p1_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p1_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p1_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_deleted.id IS 'unique id';


--
-- Name: xref_p1_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p1_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p1_deleted_check CHECK (((dbid = 1) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p1_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p1_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p1_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p1_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p1_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p1_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p1_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p1_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p1_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p1_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p1_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p1_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p1_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_deleted_old.id IS 'unique id';


--
-- Name: xref_p1_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p1_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p1_not_deleted_check CHECK (((dbid = 1) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p1_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p1_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p1_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p1_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p1_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p1_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p1_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p1_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p1_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p1_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p1_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p1_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p1_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_not_deleted.id IS 'unique id';


--
-- Name: xref_p1_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p1_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p1_not_deleted_check CHECK (((dbid = 1) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p1_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p1_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p1_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p1_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p1_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p1_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p1_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p1_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p1_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p1_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p1_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p1_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p1_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p1_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p20_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p20_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p20_deleted_check CHECK (((dbid = 20) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p20_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p20_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p20_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p20_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p20_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p20_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p20_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p20_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p20_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p20_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p20_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p20_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p20_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_deleted.id IS 'unique id';


--
-- Name: xref_p20_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p20_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p20_deleted_check CHECK (((dbid = 20) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p20_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p20_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p20_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p20_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p20_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p20_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p20_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p20_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p20_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p20_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p20_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p20_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p20_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_deleted_old.id IS 'unique id';


--
-- Name: xref_p20_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p20_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p20_not_deleted_check CHECK (((dbid = 20) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p20_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p20_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p20_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p20_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p20_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p20_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p20_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p20_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p20_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p20_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p20_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p20_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p20_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_not_deleted.id IS 'unique id';


--
-- Name: xref_p20_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p20_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p20_not_deleted_check CHECK (((dbid = 20) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p20_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p20_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p20_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p20_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p20_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p20_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p20_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p20_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p20_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p20_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p20_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p20_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p20_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p20_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p21_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p21_deleted (
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p21_deleted_check CHECK (((dbid = 21) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p21_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p21_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p21_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p21_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p21_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p21_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p21_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p21_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p21_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p21_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p21_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p21_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p21_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p21_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p21_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p21_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p21_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p21_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p21_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p21_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p21_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p21_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p21_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p21_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p21_deleted.id IS 'unique id';


--
-- Name: xref_p21_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p21_not_deleted (
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p21_not_deleted_check CHECK (((dbid = 21) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p21_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p21_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p21_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p21_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p21_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p21_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p21_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p21_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p21_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p21_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p21_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p21_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p21_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p21_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p21_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p21_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p21_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p21_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p21_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p21_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p21_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p21_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p21_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p21_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p21_not_deleted.id IS 'unique id';


--
-- Name: xref_p22_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p22_deleted (
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p22_deleted_check CHECK (((dbid = 22) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p22_deleted OWNER TO rnacen;

--
-- Name: xref_p22_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p22_not_deleted (
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p22_not_deleted_check CHECK (((dbid = 22) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p22_not_deleted OWNER TO rnacen;

--
-- Name: xref_p23_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p23_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p23_deleted_check CHECK (((dbid = 23) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p23_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p23_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p23_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p23_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p23_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p23_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p23_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p23_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p23_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p23_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p23_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p23_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p23_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_deleted.id IS 'unique id';


--
-- Name: xref_p23_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p23_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p23_deleted_check CHECK (((dbid = 23) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p23_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p23_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p23_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p23_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p23_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p23_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p23_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p23_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p23_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p23_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p23_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p23_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p23_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_deleted_old.id IS 'unique id';


--
-- Name: xref_p23_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p23_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p23_not_deleted_check CHECK (((dbid = 23) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p23_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p23_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p23_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p23_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p23_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p23_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p23_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p23_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p23_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p23_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p23_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p23_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p23_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_not_deleted.id IS 'unique id';


--
-- Name: xref_p23_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p23_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p23_not_deleted_check CHECK (((dbid = 23) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p23_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p23_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p23_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p23_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p23_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p23_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p23_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p23_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p23_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p23_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p23_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p23_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p23_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p23_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p24_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p24_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p24_deleted_check CHECK (((dbid = 24) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p24_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p24_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p24_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p24_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p24_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p24_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p24_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p24_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p24_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p24_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p24_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p24_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p24_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_deleted.id IS 'unique id';


--
-- Name: xref_p24_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p24_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p24_deleted_check CHECK (((dbid = 24) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p24_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p24_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p24_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p24_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p24_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p24_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p24_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p24_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p24_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p24_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p24_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p24_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p24_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_deleted_old.id IS 'unique id';


--
-- Name: xref_p24_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p24_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p24_not_deleted_check CHECK (((dbid = 24) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p24_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p24_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p24_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p24_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p24_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p24_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p24_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p24_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p24_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p24_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p24_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p24_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p24_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_not_deleted.id IS 'unique id';


--
-- Name: xref_p24_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p24_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p24_not_deleted_check CHECK (((dbid = 24) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p24_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p24_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p24_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p24_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p24_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p24_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p24_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p24_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p24_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p24_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p24_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p24_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p24_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p24_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p25_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p25_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p25_deleted_check CHECK (((dbid = 25) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p25_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p25_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p25_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p25_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p25_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p25_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p25_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p25_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p25_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p25_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p25_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p25_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p25_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_deleted.id IS 'unique id';


--
-- Name: xref_p25_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p25_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p25_deleted_check CHECK (((dbid = 25) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p25_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p25_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p25_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p25_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p25_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p25_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p25_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p25_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p25_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p25_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p25_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p25_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p25_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_deleted_old.id IS 'unique id';


--
-- Name: xref_p25_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p25_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p25_not_deleted_check CHECK (((dbid = 25) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p25_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p25_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p25_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p25_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p25_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p25_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p25_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p25_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p25_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p25_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p25_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p25_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p25_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_not_deleted.id IS 'unique id';


--
-- Name: xref_p25_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p25_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p25_not_deleted_check CHECK (((dbid = 25) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p25_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p25_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p25_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p25_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p25_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p25_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p25_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p25_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p25_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p25_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p25_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p25_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p25_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p25_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p26_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p26_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p26_deleted_check CHECK (((dbid = 26) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p26_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p26_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p26_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p26_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p26_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p26_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p26_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p26_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p26_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p26_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p26_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p26_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p26_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_deleted.id IS 'unique id';


--
-- Name: xref_p26_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p26_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p26_deleted_check CHECK (((dbid = 26) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p26_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p26_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p26_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p26_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p26_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p26_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p26_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p26_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p26_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p26_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p26_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p26_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p26_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_deleted_old.id IS 'unique id';


--
-- Name: xref_p26_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p26_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p26_not_deleted_check CHECK (((dbid = 26) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p26_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p26_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p26_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p26_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p26_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p26_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p26_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p26_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p26_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p26_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p26_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p26_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p26_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_not_deleted.id IS 'unique id';


--
-- Name: xref_p26_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p26_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p26_not_deleted_check CHECK (((dbid = 26) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p26_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p26_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p26_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p26_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p26_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p26_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p26_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p26_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p26_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p26_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p26_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p26_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p26_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p26_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p27_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p27_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p27_deleted_check CHECK (((dbid = 27) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p27_deleted OWNER TO rnacen;

--
-- Name: xref_p27_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p27_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p27_not_deleted_check CHECK (((dbid = 27) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p27_not_deleted OWNER TO rnacen;

--
-- Name: xref_p28_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p28_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p28_deleted_check CHECK (((dbid = 28) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p28_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p28_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p28_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p28_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p28_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p28_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p28_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p28_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p28_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p28_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p28_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p28_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p28_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p28_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p28_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p28_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p28_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p28_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p28_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p28_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p28_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p28_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p28_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p28_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p28_deleted.id IS 'unique id';


--
-- Name: xref_p28_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p28_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p28_not_deleted_check CHECK (((dbid = 28) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p28_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p28_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p28_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p28_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p28_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p28_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p28_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p28_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p28_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p28_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p28_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p28_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p28_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p28_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p28_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p28_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p28_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p28_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p28_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p28_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p28_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p28_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p28_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p28_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p28_not_deleted.id IS 'unique id';


--
-- Name: xref_p29_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p29_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p29_deleted_check CHECK (((dbid = 29) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p29_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p29_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p29_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p29_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p29_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p29_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p29_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p29_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p29_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p29_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p29_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p29_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p29_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p29_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p29_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p29_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p29_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p29_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p29_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p29_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p29_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p29_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p29_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p29_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p29_deleted.id IS 'unique id';


--
-- Name: xref_p29_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p29_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p29_not_deleted_check CHECK (((dbid = 29) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p29_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p29_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p29_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p29_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p29_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p29_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p29_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p29_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p29_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p29_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p29_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p29_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p29_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p29_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p29_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p29_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p29_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p29_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p29_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p29_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p29_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p29_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p29_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p29_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p29_not_deleted.id IS 'unique id';


--
-- Name: xref_p2_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p2_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p2_deleted_check CHECK (((dbid = 2) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p2_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p2_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p2_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p2_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p2_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p2_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p2_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p2_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p2_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p2_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p2_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p2_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p2_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_deleted.id IS 'unique id';


--
-- Name: xref_p2_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p2_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p2_deleted_check CHECK (((dbid = 2) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p2_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p2_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p2_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p2_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p2_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p2_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p2_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p2_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p2_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p2_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p2_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p2_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p2_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_deleted_old.id IS 'unique id';


--
-- Name: xref_p2_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p2_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p2_not_deleted_check CHECK (((dbid = 2) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p2_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p2_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p2_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p2_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p2_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p2_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p2_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p2_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p2_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p2_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p2_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p2_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p2_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_not_deleted.id IS 'unique id';


--
-- Name: xref_p2_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p2_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p2_not_deleted_check CHECK (((dbid = 2) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p2_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p2_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p2_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p2_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p2_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p2_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p2_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p2_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p2_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p2_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p2_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p2_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p2_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p2_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p30_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p30_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p30_deleted_check CHECK (((dbid = 30) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p30_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p30_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p30_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p30_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p30_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p30_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p30_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p30_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p30_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p30_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p30_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p30_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p30_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_deleted.id IS 'unique id';


--
-- Name: xref_p30_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p30_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p30_deleted_check CHECK (((dbid = 30) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p30_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p30_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p30_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p30_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p30_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p30_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p30_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p30_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p30_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p30_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p30_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p30_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p30_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_deleted_old.id IS 'unique id';


--
-- Name: xref_p30_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p30_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p30_not_deleted_check CHECK (((dbid = 30) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p30_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p30_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p30_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p30_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p30_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p30_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p30_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p30_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p30_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p30_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p30_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p30_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p30_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_not_deleted.id IS 'unique id';


--
-- Name: xref_p30_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p30_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p30_not_deleted_check CHECK (((dbid = 30) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p30_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p30_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p30_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p30_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p30_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p30_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p30_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p30_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p30_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p30_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p30_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p30_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p30_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p30_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p31_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p31_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p31_deleted_check CHECK (((dbid = 31) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p31_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p31_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p31_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p31_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p31_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p31_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p31_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p31_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p31_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p31_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p31_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p31_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p31_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_deleted.id IS 'unique id';


--
-- Name: xref_p31_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p31_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p31_deleted_check CHECK (((dbid = 31) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p31_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p31_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p31_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p31_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p31_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p31_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p31_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p31_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p31_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p31_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p31_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p31_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p31_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_deleted_old.id IS 'unique id';


--
-- Name: xref_p31_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p31_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p31_not_deleted_check CHECK (((dbid = 31) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p31_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p31_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p31_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p31_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p31_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p31_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p31_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p31_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p31_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p31_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p31_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p31_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p31_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_not_deleted.id IS 'unique id';


--
-- Name: xref_p31_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p31_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p31_not_deleted_check CHECK (((dbid = 31) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p31_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p31_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p31_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p31_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p31_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p31_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p31_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p31_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p31_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p31_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p31_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p31_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p31_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p31_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p32_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p32_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p32_deleted_check CHECK (((dbid = 32) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p32_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p32_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p32_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p32_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p32_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p32_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p32_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p32_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p32_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p32_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p32_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p32_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p32_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p32_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p32_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p32_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p32_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p32_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p32_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p32_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p32_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p32_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p32_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p32_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p32_deleted.id IS 'unique id';


--
-- Name: xref_p32_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p32_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p32_not_deleted_check CHECK (((dbid = 32) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p32_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p32_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p32_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p32_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p32_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p32_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p32_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p32_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p32_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p32_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p32_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p32_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p32_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p32_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p32_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p32_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p32_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p32_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p32_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p32_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p32_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p32_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p32_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p32_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p32_not_deleted.id IS 'unique id';


--
-- Name: xref_p33_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p33_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p33_deleted_check CHECK (((dbid = 33) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p33_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p33_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p33_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p33_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p33_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p33_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p33_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p33_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p33_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p33_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p33_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p33_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p33_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_deleted.id IS 'unique id';


--
-- Name: xref_p33_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p33_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p33_deleted_check CHECK (((dbid = 33) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p33_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p33_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p33_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p33_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p33_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p33_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p33_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p33_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p33_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p33_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p33_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p33_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p33_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_deleted_old.id IS 'unique id';


--
-- Name: xref_p33_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p33_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p33_not_deleted_check CHECK (((dbid = 33) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p33_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p33_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p33_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p33_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p33_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p33_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p33_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p33_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p33_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p33_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p33_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p33_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p33_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_not_deleted.id IS 'unique id';


--
-- Name: xref_p33_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p33_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p33_not_deleted_check CHECK (((dbid = 33) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p33_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p33_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p33_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p33_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p33_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p33_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p33_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p33_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p33_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p33_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p33_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p33_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p33_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p33_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p34_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p34_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p34_deleted_check CHECK (((dbid = 34) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p34_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p34_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p34_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p34_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p34_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p34_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p34_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p34_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p34_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p34_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p34_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p34_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p34_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_deleted.id IS 'unique id';


--
-- Name: xref_p34_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p34_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p34_deleted_check CHECK (((dbid = 34) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p34_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p34_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p34_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p34_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p34_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p34_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p34_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p34_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p34_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p34_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p34_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p34_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p34_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_deleted_old.id IS 'unique id';


--
-- Name: xref_p34_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p34_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p34_not_deleted_check CHECK (((dbid = 34) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p34_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p34_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p34_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p34_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p34_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p34_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p34_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p34_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p34_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p34_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p34_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p34_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p34_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_not_deleted.id IS 'unique id';


--
-- Name: xref_p34_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p34_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p34_not_deleted_check CHECK (((dbid = 34) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p34_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p34_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p34_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p34_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p34_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p34_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p34_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p34_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p34_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p34_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p34_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p34_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p34_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p34_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p35_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p35_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p35_deleted_check CHECK (((dbid = 35) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p35_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p35_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p35_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p35_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p35_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p35_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p35_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p35_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p35_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p35_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p35_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p35_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p35_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_deleted.id IS 'unique id';


--
-- Name: xref_p35_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p35_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p35_deleted_check CHECK (((dbid = 35) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p35_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p35_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p35_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p35_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p35_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p35_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p35_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p35_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p35_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p35_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p35_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p35_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p35_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_deleted_old.id IS 'unique id';


--
-- Name: xref_p35_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p35_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p35_not_deleted_check CHECK (((dbid = 35) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p35_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p35_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p35_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p35_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p35_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p35_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p35_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p35_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p35_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p35_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p35_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p35_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p35_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_not_deleted.id IS 'unique id';


--
-- Name: xref_p35_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p35_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p35_not_deleted_check CHECK (((dbid = 35) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p35_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p35_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p35_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p35_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p35_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p35_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p35_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p35_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p35_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p35_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p35_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p35_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p35_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p35_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p36_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p36_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p36_deleted_check CHECK (((dbid = 36) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p36_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p36_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p36_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p36_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p36_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p36_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p36_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p36_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p36_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p36_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p36_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p36_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p36_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_deleted.id IS 'unique id';


--
-- Name: xref_p36_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p36_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p36_deleted_check CHECK (((dbid = 36) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p36_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p36_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p36_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p36_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p36_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p36_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p36_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p36_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p36_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p36_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p36_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p36_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p36_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_deleted_old.id IS 'unique id';


--
-- Name: xref_p36_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p36_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p36_not_deleted_check CHECK (((dbid = 36) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p36_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p36_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p36_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p36_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p36_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p36_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p36_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p36_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p36_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p36_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p36_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p36_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p36_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_not_deleted.id IS 'unique id';


--
-- Name: xref_p36_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p36_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p36_not_deleted_check CHECK (((dbid = 36) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p36_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p36_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p36_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p36_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p36_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p36_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p36_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p36_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p36_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p36_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p36_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p36_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p36_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p36_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p37_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p37_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p37_deleted_check CHECK (((dbid = 37) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p37_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p37_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p37_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p37_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p37_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p37_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p37_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p37_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p37_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p37_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p37_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p37_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p37_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_deleted.id IS 'unique id';


--
-- Name: xref_p37_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p37_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p37_deleted_check CHECK (((dbid = 37) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p37_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p37_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p37_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p37_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p37_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p37_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p37_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p37_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p37_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p37_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p37_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p37_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p37_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_deleted_old.id IS 'unique id';


--
-- Name: xref_p37_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p37_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p37_not_deleted_check CHECK (((dbid = 37) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p37_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p37_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p37_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p37_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p37_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p37_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p37_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p37_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p37_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p37_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p37_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p37_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p37_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_not_deleted.id IS 'unique id';


--
-- Name: xref_p37_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p37_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p37_not_deleted_check CHECK (((dbid = 37) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p37_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p37_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p37_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p37_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p37_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p37_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p37_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p37_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p37_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p37_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p37_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p37_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p37_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p37_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p38_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p38_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p38_deleted_check CHECK (((dbid = 38) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p38_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p38_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p38_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p38_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p38_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p38_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p38_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p38_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p38_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p38_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p38_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p38_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p38_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_deleted.id IS 'unique id';


--
-- Name: xref_p38_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p38_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p38_deleted_check CHECK (((dbid = 38) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p38_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p38_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p38_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p38_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p38_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p38_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p38_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p38_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p38_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p38_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p38_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p38_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p38_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_deleted_old.id IS 'unique id';


--
-- Name: xref_p38_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p38_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p38_not_deleted_check CHECK (((dbid = 38) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p38_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p38_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p38_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p38_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p38_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p38_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p38_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p38_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p38_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p38_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p38_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p38_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p38_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_not_deleted.id IS 'unique id';


--
-- Name: xref_p38_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p38_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p38_not_deleted_check CHECK (((dbid = 38) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p38_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p38_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p38_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p38_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p38_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p38_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p38_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p38_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p38_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p38_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p38_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p38_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p38_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p38_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p39_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p39_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p39_deleted_check CHECK (((dbid = 39) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p39_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p39_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p39_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p39_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p39_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p39_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p39_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p39_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p39_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p39_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p39_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p39_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p39_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_deleted.id IS 'unique id';


--
-- Name: xref_p39_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p39_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p39_deleted_check CHECK (((dbid = 39) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p39_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p39_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p39_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p39_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p39_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p39_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p39_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p39_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p39_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p39_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p39_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p39_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p39_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_deleted_old.id IS 'unique id';


--
-- Name: xref_p39_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p39_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p39_not_deleted_check CHECK (((dbid = 39) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p39_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p39_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p39_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p39_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p39_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p39_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p39_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p39_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p39_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p39_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p39_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p39_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p39_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_not_deleted.id IS 'unique id';


--
-- Name: xref_p39_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p39_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p39_not_deleted_check CHECK (((dbid = 39) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p39_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p39_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p39_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p39_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p39_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p39_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p39_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p39_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p39_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p39_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p39_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p39_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p39_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p39_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p3_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p3_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p3_deleted_check CHECK (((dbid = 3) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p3_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p3_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p3_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p3_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p3_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p3_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p3_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p3_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p3_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p3_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p3_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p3_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p3_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_deleted.id IS 'unique id';


--
-- Name: xref_p3_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p3_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p3_deleted_check CHECK (((dbid = 3) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p3_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p3_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p3_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p3_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p3_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p3_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p3_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p3_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p3_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p3_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p3_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p3_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p3_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_deleted_old.id IS 'unique id';


--
-- Name: xref_p3_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p3_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p3_not_deleted_check CHECK (((dbid = 3) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p3_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p3_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p3_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p3_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p3_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p3_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p3_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p3_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p3_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p3_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p3_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p3_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p3_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_not_deleted.id IS 'unique id';


--
-- Name: xref_p3_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p3_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p3_not_deleted_check CHECK (((dbid = 3) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p3_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p3_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p3_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p3_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p3_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p3_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p3_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p3_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p3_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p3_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p3_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p3_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p3_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p3_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p40_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p40_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p40_deleted_check CHECK (((dbid = 40) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p40_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p40_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p40_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p40_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p40_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p40_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p40_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p40_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p40_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p40_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p40_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p40_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p40_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_deleted.id IS 'unique id';


--
-- Name: xref_p40_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p40_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p40_deleted_check CHECK (((dbid = 40) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p40_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p40_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p40_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p40_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p40_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p40_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p40_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p40_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p40_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p40_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p40_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p40_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p40_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_deleted_old.id IS 'unique id';


--
-- Name: xref_p40_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p40_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p40_not_deleted_check CHECK (((dbid = 40) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p40_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p40_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p40_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p40_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p40_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p40_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p40_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p40_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p40_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p40_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p40_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p40_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p40_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_not_deleted.id IS 'unique id';


--
-- Name: xref_p40_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p40_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p40_not_deleted_check CHECK (((dbid = 40) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p40_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p40_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p40_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p40_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p40_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p40_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p40_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p40_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p40_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p40_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p40_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p40_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p40_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p40_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p41_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p41_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p41_deleted_check CHECK (((dbid = 41) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p41_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p41_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p41_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p41_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p41_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p41_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p41_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p41_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p41_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p41_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p41_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p41_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p41_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_deleted.id IS 'unique id';


--
-- Name: xref_p41_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p41_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p41_deleted_check CHECK (((dbid = 41) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p41_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p41_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p41_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p41_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p41_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p41_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p41_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p41_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p41_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p41_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p41_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p41_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p41_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_deleted_old.id IS 'unique id';


--
-- Name: xref_p41_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p41_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p41_not_deleted_check CHECK (((dbid = 41) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p41_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p41_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p41_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p41_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p41_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p41_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p41_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p41_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p41_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p41_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p41_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p41_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p41_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_not_deleted.id IS 'unique id';


--
-- Name: xref_p41_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p41_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p41_not_deleted_check CHECK (((dbid = 41) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p41_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p41_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p41_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p41_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p41_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p41_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p41_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p41_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p41_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p41_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p41_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p41_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p41_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p41_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p42_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p42_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p42_deleted_check CHECK (((dbid = 42) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p42_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p42_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p42_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p42_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p42_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p42_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p42_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p42_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p42_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p42_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p42_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p42_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p42_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_deleted.id IS 'unique id';


--
-- Name: xref_p42_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p42_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p42_deleted_check CHECK (((dbid = 42) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p42_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p42_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p42_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p42_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p42_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p42_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p42_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p42_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p42_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p42_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p42_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p42_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p42_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_deleted_old.id IS 'unique id';


--
-- Name: xref_p42_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p42_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p42_not_deleted_check CHECK (((dbid = 42) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p42_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p42_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p42_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p42_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p42_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p42_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p42_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p42_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p42_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p42_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p42_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p42_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p42_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_not_deleted.id IS 'unique id';


--
-- Name: xref_p42_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p42_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p42_not_deleted_check CHECK (((dbid = 42) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p42_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p42_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p42_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p42_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p42_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p42_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p42_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p42_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p42_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p42_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p42_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p42_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p42_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p42_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p43_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p43_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p43_deleted_check CHECK (((dbid = 43) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p43_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p43_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p43_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p43_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p43_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p43_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p43_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p43_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p43_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p43_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p43_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p43_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p43_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_deleted.id IS 'unique id';


--
-- Name: xref_p43_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p43_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint NOT NULL,
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p43_deleted_check CHECK (((dbid = 43) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p43_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p43_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p43_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p43_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p43_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p43_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p43_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p43_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p43_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p43_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p43_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p43_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p43_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_deleted_old.id IS 'unique id';


--
-- Name: xref_p43_deleted_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.xref_p43_deleted_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.xref_p43_deleted_id_seq OWNER TO rnacen;

--
-- Name: xref_p43_deleted_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.xref_p43_deleted_id_seq OWNED BY rnacen.xref_p43_deleted_old.id;


--
-- Name: xref_p43_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p43_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p43_not_deleted_check CHECK (((dbid = 43) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p43_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p43_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p43_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p43_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p43_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p43_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p43_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p43_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p43_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p43_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p43_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p43_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p43_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_not_deleted.id IS 'unique id';


--
-- Name: xref_p43_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p43_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint NOT NULL,
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p43_not_deleted_check CHECK (((dbid = 43) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p43_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p43_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p43_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p43_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p43_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p43_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p43_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p43_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p43_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p43_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p43_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p43_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p43_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p43_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p43_not_deleted_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.xref_p43_not_deleted_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.xref_p43_not_deleted_id_seq OWNER TO rnacen;

--
-- Name: xref_p43_not_deleted_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.xref_p43_not_deleted_id_seq OWNED BY rnacen.xref_p43_not_deleted_old.id;


--
-- Name: xref_p44_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p44_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p44_deleted_check CHECK (((dbid = 44) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p44_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p44_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p44_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p44_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p44_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p44_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p44_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p44_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p44_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p44_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p44_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p44_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p44_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_deleted.id IS 'unique id';


--
-- Name: xref_p44_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p44_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p44_deleted_check CHECK (((dbid = 44) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p44_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p44_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p44_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p44_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p44_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p44_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p44_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p44_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p44_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p44_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p44_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p44_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p44_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_deleted_old.id IS 'unique id';


--
-- Name: xref_p44_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p44_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p44_not_deleted_check CHECK (((dbid = 44) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p44_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p44_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p44_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p44_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p44_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p44_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p44_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p44_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p44_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p44_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p44_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p44_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p44_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_not_deleted.id IS 'unique id';


--
-- Name: xref_p44_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p44_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p44_not_deleted_check CHECK (((dbid = 44) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p44_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p44_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p44_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p44_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p44_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p44_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p44_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p44_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p44_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p44_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p44_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p44_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p44_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p44_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p45_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p45_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p45_deleted_check CHECK (((dbid = 45) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p45_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p45_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p45_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p45_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p45_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p45_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p45_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p45_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p45_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p45_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p45_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p45_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p45_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_deleted.id IS 'unique id';


--
-- Name: xref_p45_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p45_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p45_deleted_check CHECK (((dbid = 45) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p45_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p45_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p45_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p45_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p45_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p45_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p45_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p45_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p45_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p45_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p45_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p45_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p45_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_deleted_old.id IS 'unique id';


--
-- Name: xref_p45_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p45_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p45_not_deleted_check CHECK (((dbid = 45) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p45_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p45_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p45_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p45_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p45_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p45_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p45_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p45_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p45_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p45_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p45_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p45_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p45_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_not_deleted.id IS 'unique id';


--
-- Name: xref_p45_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p45_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p45_not_deleted_check CHECK (((dbid = 45) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p45_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p45_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p45_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p45_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p45_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p45_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p45_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p45_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p45_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p45_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p45_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p45_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p45_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p45_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p46_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p46_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p46_deleted_check CHECK (((dbid = 46) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p46_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p46_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p46_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p46_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p46_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p46_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p46_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p46_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p46_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p46_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p46_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p46_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p46_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_deleted.id IS 'unique id';


--
-- Name: xref_p46_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p46_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p46_deleted_check CHECK (((dbid = 46) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p46_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p46_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p46_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p46_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p46_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p46_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p46_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p46_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p46_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p46_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p46_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p46_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p46_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_deleted_old.id IS 'unique id';


--
-- Name: xref_p46_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p46_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p46_not_deleted_check CHECK (((dbid = 46) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p46_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p46_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p46_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p46_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p46_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p46_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p46_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p46_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p46_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p46_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p46_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p46_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p46_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_not_deleted.id IS 'unique id';


--
-- Name: xref_p46_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p46_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p46_not_deleted_check CHECK (((dbid = 46) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p46_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p46_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p46_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p46_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p46_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p46_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p46_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p46_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p46_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p46_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p46_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p46_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p46_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p46_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p47_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p47_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p47_deleted_check CHECK (((dbid = 47) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p47_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p47_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p47_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p47_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p47_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p47_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p47_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p47_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p47_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p47_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p47_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p47_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p47_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_deleted.id IS 'unique id';


--
-- Name: xref_p47_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p47_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p47_deleted_check CHECK (((dbid = 47) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p47_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p47_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p47_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p47_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p47_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p47_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p47_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p47_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p47_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p47_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p47_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p47_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p47_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_deleted_old.id IS 'unique id';


--
-- Name: xref_p47_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p47_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p47_not_deleted_check CHECK (((dbid = 47) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p47_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p47_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p47_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p47_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p47_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p47_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p47_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p47_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p47_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p47_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p47_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p47_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p47_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_not_deleted.id IS 'unique id';


--
-- Name: xref_p47_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p47_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p47_not_deleted_check CHECK (((dbid = 47) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p47_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p47_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p47_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p47_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p47_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p47_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p47_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p47_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p47_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p47_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p47_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p47_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p47_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p47_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p48_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p48_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p48_deleted_check CHECK (((dbid = 48) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p48_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p48_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p48_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p48_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p48_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p48_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p48_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p48_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p48_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p48_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p48_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p48_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p48_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_deleted.id IS 'unique id';


--
-- Name: xref_p48_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p48_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p48_deleted_check CHECK (((dbid = 48) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p48_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p48_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p48_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p48_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p48_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p48_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p48_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p48_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p48_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p48_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p48_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p48_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p48_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_deleted_old.id IS 'unique id';


--
-- Name: xref_p48_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p48_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p48_not_deleted_check CHECK (((dbid = 48) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p48_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p48_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p48_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p48_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p48_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p48_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p48_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p48_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p48_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p48_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p48_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p48_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p48_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_not_deleted.id IS 'unique id';


--
-- Name: xref_p48_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p48_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p48_not_deleted_check CHECK (((dbid = 48) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p48_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p48_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p48_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p48_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p48_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p48_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p48_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p48_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p48_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p48_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p48_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p48_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p48_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p48_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p49_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p49_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p49_deleted_check CHECK (((dbid = 49) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p49_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p49_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p49_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p49_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p49_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p49_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p49_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p49_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p49_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p49_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p49_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p49_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p49_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_deleted.id IS 'unique id';


--
-- Name: xref_p49_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p49_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint NOT NULL,
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p49_deleted_check CHECK (((dbid = 49) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p49_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p49_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p49_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p49_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p49_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p49_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p49_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p49_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p49_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p49_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p49_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p49_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p49_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_deleted_old.id IS 'unique id';


--
-- Name: xref_p49_deleted_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.xref_p49_deleted_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.xref_p49_deleted_id_seq OWNER TO rnacen;

--
-- Name: xref_p49_deleted_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.xref_p49_deleted_id_seq OWNED BY rnacen.xref_p49_deleted_old.id;


--
-- Name: xref_p49_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p49_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p49_not_deleted_check CHECK (((dbid = 49) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p49_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p49_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p49_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p49_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p49_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p49_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p49_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p49_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p49_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p49_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p49_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p49_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p49_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_not_deleted.id IS 'unique id';


--
-- Name: xref_p49_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p49_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint NOT NULL,
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p49_not_deleted_check CHECK (((dbid = 49) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p49_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p49_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p49_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p49_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p49_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p49_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p49_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p49_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p49_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p49_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p49_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p49_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p49_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p49_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p49_not_deleted_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.xref_p49_not_deleted_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.xref_p49_not_deleted_id_seq OWNER TO rnacen;

--
-- Name: xref_p49_not_deleted_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.xref_p49_not_deleted_id_seq OWNED BY rnacen.xref_p49_not_deleted_old.id;


--
-- Name: xref_p4_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p4_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p4_deleted_check CHECK (((dbid = 4) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p4_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p4_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p4_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p4_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p4_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p4_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p4_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p4_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p4_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p4_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p4_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p4_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p4_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_deleted.id IS 'unique id';


--
-- Name: xref_p4_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p4_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p4_deleted_check CHECK (((dbid = 4) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p4_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p4_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p4_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p4_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p4_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p4_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p4_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p4_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p4_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p4_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p4_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p4_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p4_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_deleted_old.id IS 'unique id';


--
-- Name: xref_p4_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p4_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p4_not_deleted_check CHECK (((dbid = 4) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p4_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p4_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p4_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p4_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p4_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p4_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p4_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p4_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p4_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p4_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p4_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p4_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p4_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_not_deleted.id IS 'unique id';


--
-- Name: xref_p4_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p4_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p4_not_deleted_check CHECK (((dbid = 4) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p4_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p4_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p4_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p4_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p4_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p4_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p4_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p4_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p4_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p4_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p4_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p4_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p4_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p4_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p50_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p50_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p50_deleted_check CHECK (((dbid = 50) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p50_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p50_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p50_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p50_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p50_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p50_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p50_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p50_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p50_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p50_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p50_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p50_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p50_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_deleted.id IS 'unique id';


--
-- Name: xref_p50_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p50_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p50_deleted_check CHECK (((dbid = 50) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p50_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p50_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p50_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p50_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p50_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p50_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p50_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p50_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p50_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p50_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p50_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p50_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p50_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_deleted_old.id IS 'unique id';


--
-- Name: xref_p50_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p50_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p50_not_deleted_check CHECK (((dbid = 50) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p50_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p50_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p50_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p50_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p50_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p50_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p50_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p50_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p50_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p50_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p50_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p50_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p50_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_not_deleted.id IS 'unique id';


--
-- Name: xref_p50_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p50_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p50_not_deleted_check CHECK (((dbid = 50) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p50_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p50_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p50_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p50_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p50_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p50_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p50_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p50_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p50_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p50_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p50_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p50_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p50_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p50_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p51_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p51_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p51_deleted_check CHECK (((dbid = 51) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p51_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p51_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p51_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p51_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p51_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p51_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p51_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p51_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p51_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p51_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p51_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p51_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p51_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_deleted.id IS 'unique id';


--
-- Name: xref_p51_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p51_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint NOT NULL,
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p51_deleted_check CHECK (((dbid = 51) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p51_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p51_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p51_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p51_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p51_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p51_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p51_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p51_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p51_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p51_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p51_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p51_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p51_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_deleted_old.id IS 'unique id';


--
-- Name: xref_p51_deleted_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.xref_p51_deleted_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.xref_p51_deleted_id_seq OWNER TO rnacen;

--
-- Name: xref_p51_deleted_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.xref_p51_deleted_id_seq OWNED BY rnacen.xref_p51_deleted_old.id;


--
-- Name: xref_p51_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p51_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p51_not_deleted_check CHECK (((dbid = 51) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p51_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p51_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p51_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p51_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p51_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p51_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p51_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p51_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p51_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p51_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p51_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p51_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p51_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_not_deleted.id IS 'unique id';


--
-- Name: xref_p51_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p51_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint NOT NULL,
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p51_not_deleted_check CHECK (((dbid = 51) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p51_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p51_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p51_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p51_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p51_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p51_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p51_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p51_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p51_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p51_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p51_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p51_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p51_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p51_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p51_not_deleted_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.xref_p51_not_deleted_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.xref_p51_not_deleted_id_seq OWNER TO rnacen;

--
-- Name: xref_p51_not_deleted_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.xref_p51_not_deleted_id_seq OWNED BY rnacen.xref_p51_not_deleted_old.id;


--
-- Name: xref_p52_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p52_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p52_deleted_check CHECK (((dbid = 52) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p52_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p52_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p52_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p52_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p52_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p52_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p52_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p52_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p52_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p52_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p52_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p52_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p52_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_deleted.id IS 'unique id';


--
-- Name: xref_p52_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p52_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p52_deleted_check CHECK (((dbid = 52) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p52_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p52_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p52_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p52_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p52_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p52_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p52_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p52_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p52_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p52_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p52_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p52_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p52_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_deleted_old.id IS 'unique id';


--
-- Name: xref_p52_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p52_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p52_not_deleted_check CHECK (((dbid = 52) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p52_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p52_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p52_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p52_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p52_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p52_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p52_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p52_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p52_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p52_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p52_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p52_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p52_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_not_deleted.id IS 'unique id';


--
-- Name: xref_p52_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p52_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p52_not_deleted_check CHECK (((dbid = 52) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p52_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p52_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p52_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p52_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p52_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p52_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p52_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p52_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p52_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p52_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p52_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p52_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p52_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p52_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p53_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p53_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p53_deleted_check CHECK (((dbid = 53) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p53_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p53_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p53_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p53_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p53_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p53_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p53_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p53_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p53_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p53_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p53_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p53_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p53_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_deleted.id IS 'unique id';


--
-- Name: xref_p53_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p53_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint NOT NULL,
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p53_deleted_check CHECK (((dbid = 53) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p53_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p53_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p53_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p53_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p53_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p53_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p53_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p53_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p53_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p53_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p53_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p53_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p53_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_deleted_old.id IS 'unique id';


--
-- Name: xref_p53_deleted_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.xref_p53_deleted_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.xref_p53_deleted_id_seq OWNER TO rnacen;

--
-- Name: xref_p53_deleted_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.xref_p53_deleted_id_seq OWNED BY rnacen.xref_p53_deleted_old.id;


--
-- Name: xref_p53_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p53_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p53_not_deleted_check CHECK (((dbid = 53) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p53_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p53_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p53_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p53_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p53_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p53_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p53_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p53_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p53_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p53_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p53_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p53_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p53_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_not_deleted.id IS 'unique id';


--
-- Name: xref_p53_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p53_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint NOT NULL,
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p53_not_deleted_check CHECK (((dbid = 53) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p53_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p53_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p53_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p53_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p53_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p53_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p53_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p53_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p53_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p53_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p53_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p53_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p53_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p53_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p53_not_deleted_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.xref_p53_not_deleted_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.xref_p53_not_deleted_id_seq OWNER TO rnacen;

--
-- Name: xref_p53_not_deleted_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.xref_p53_not_deleted_id_seq OWNED BY rnacen.xref_p53_not_deleted_old.id;


--
-- Name: xref_p54_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p54_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint NOT NULL,
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p54_deleted_check CHECK (((dbid = 54) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p54_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p54_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p54_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p54_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p54_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p54_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p54_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p54_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p54_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p54_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p54_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p54_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p54_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p54_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p54_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p54_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p54_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p54_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p54_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p54_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p54_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p54_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p54_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p54_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p54_deleted.id IS 'unique id';


--
-- Name: xref_p54_deleted_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.xref_p54_deleted_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.xref_p54_deleted_id_seq OWNER TO rnacen;

--
-- Name: xref_p54_deleted_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.xref_p54_deleted_id_seq OWNED BY rnacen.xref_p54_deleted.id;


--
-- Name: xref_p54_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p54_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint NOT NULL,
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p54_not_deleted_check CHECK (((dbid = 54) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p54_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p54_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p54_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p54_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p54_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p54_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p54_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p54_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p54_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p54_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p54_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p54_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p54_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p54_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p54_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p54_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p54_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p54_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p54_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p54_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p54_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p54_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p54_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p54_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p54_not_deleted.id IS 'unique id';


--
-- Name: xref_p54_not_deleted_id_seq; Type: SEQUENCE; Schema: rnacen; Owner: rnacen
--

CREATE SEQUENCE rnacen.xref_p54_not_deleted_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE rnacen.xref_p54_not_deleted_id_seq OWNER TO rnacen;

--
-- Name: xref_p54_not_deleted_id_seq; Type: SEQUENCE OWNED BY; Schema: rnacen; Owner: rnacen
--

ALTER SEQUENCE rnacen.xref_p54_not_deleted_id_seq OWNED BY rnacen.xref_p54_not_deleted.id;


--
-- Name: xref_p55_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p55_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p55_deleted_check CHECK (((dbid = 55) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p55_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p55_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p55_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p55_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p55_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p55_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p55_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p55_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p55_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p55_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p55_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p55_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p55_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_deleted.id IS 'unique id';


--
-- Name: xref_p55_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p55_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p55_deleted_check CHECK (((dbid = 55) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p55_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p55_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p55_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p55_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p55_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p55_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p55_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p55_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p55_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p55_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p55_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p55_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p55_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_deleted_old.id IS 'unique id';


--
-- Name: xref_p55_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p55_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p55_not_deleted_check CHECK (((dbid = 55) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p55_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p55_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p55_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p55_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p55_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p55_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p55_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p55_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p55_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p55_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p55_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p55_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p55_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_not_deleted.id IS 'unique id';


--
-- Name: xref_p55_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p55_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p55_not_deleted_check CHECK (((dbid = 55) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p55_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p55_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p55_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p55_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p55_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p55_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p55_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p55_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p55_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p55_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p55_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p55_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p55_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p55_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p5_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p5_deleted (
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p5_deleted_check CHECK (((dbid = 5) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p5_deleted OWNER TO rnacen;

--
-- Name: xref_p5_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p5_not_deleted (
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p5_not_deleted_check CHECK (((dbid = 5) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p5_not_deleted OWNER TO rnacen;

--
-- Name: xref_p6_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p6_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p6_deleted_check CHECK (((dbid = 6) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p6_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p6_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p6_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p6_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p6_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p6_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p6_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p6_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p6_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p6_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p6_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p6_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p6_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_deleted.id IS 'unique id';


--
-- Name: xref_p6_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p6_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p6_deleted_check CHECK (((dbid = 6) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p6_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p6_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p6_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p6_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p6_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p6_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p6_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p6_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p6_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p6_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p6_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p6_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p6_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_deleted_old.id IS 'unique id';


--
-- Name: xref_p6_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p6_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p6_not_deleted_check CHECK (((dbid = 6) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p6_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p6_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p6_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p6_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p6_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p6_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p6_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p6_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p6_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p6_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p6_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p6_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p6_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_not_deleted.id IS 'unique id';


--
-- Name: xref_p6_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p6_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p6_not_deleted_check CHECK (((dbid = 6) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p6_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p6_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p6_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p6_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p6_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p6_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p6_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p6_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p6_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p6_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p6_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p6_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p6_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p6_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p7_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p7_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p7_deleted_check CHECK (((dbid = 7) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p7_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p7_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p7_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p7_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p7_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p7_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p7_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p7_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p7_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p7_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p7_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p7_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p7_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_deleted.id IS 'unique id';


--
-- Name: xref_p7_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p7_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p7_deleted_check CHECK (((dbid = 7) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p7_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p7_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p7_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p7_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p7_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p7_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p7_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p7_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p7_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p7_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p7_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p7_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p7_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_deleted_old.id IS 'unique id';


--
-- Name: xref_p7_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p7_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p7_not_deleted_check CHECK (((dbid = 7) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p7_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p7_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p7_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p7_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p7_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p7_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p7_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p7_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p7_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p7_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p7_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p7_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p7_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_not_deleted.id IS 'unique id';


--
-- Name: xref_p7_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p7_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p7_not_deleted_check CHECK (((dbid = 7) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p7_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p7_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p7_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p7_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p7_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p7_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p7_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p7_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p7_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p7_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p7_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p7_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p7_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p7_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p8_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p8_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p8_deleted_check CHECK (((dbid = 8) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p8_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p8_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p8_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p8_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p8_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p8_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p8_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p8_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p8_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p8_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p8_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p8_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p8_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_deleted.id IS 'unique id';


--
-- Name: xref_p8_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p8_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p8_deleted_check CHECK (((dbid = 8) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p8_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p8_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p8_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p8_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p8_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p8_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p8_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p8_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p8_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p8_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p8_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p8_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p8_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_deleted_old.id IS 'unique id';


--
-- Name: xref_p8_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p8_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p8_not_deleted_check CHECK (((dbid = 8) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p8_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p8_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p8_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p8_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p8_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p8_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p8_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p8_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p8_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p8_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p8_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p8_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p8_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_not_deleted.id IS 'unique id';


--
-- Name: xref_p8_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p8_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p8_not_deleted_check CHECK (((dbid = 8) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p8_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p8_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p8_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p8_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p8_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p8_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p8_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p8_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p8_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p8_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p8_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p8_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p8_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p8_not_deleted_old.id IS 'unique id';


--
-- Name: xref_p9_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p9_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p9_deleted_check CHECK (((dbid = 9) AND (deleted = 'Y'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p9_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p9_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p9_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p9_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p9_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p9_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p9_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p9_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p9_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p9_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p9_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p9_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p9_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_deleted.id IS 'unique id';


--
-- Name: xref_p9_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p9_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p9_deleted_check CHECK (((dbid = 9) AND (deleted = 'Y'::bpchar)))
);


ALTER TABLE rnacen.xref_p9_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p9_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p9_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p9_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p9_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p9_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p9_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p9_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p9_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p9_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p9_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p9_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p9_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_deleted_old.id IS 'unique id';


--
-- Name: xref_p9_not_deleted; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p9_not_deleted (
    dbid smallint,
    created integer,
    last integer,
    upi character varying(26),
    version_i integer,
    deleted character(1),
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone,
    userstamp character varying(20) DEFAULT 'USER'::character varying,
    ac character varying(300),
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p9_not_deleted_check CHECK (((dbid = 9) AND (deleted = 'N'::bpchar)))
)
INHERITS (rnacen.xref);


ALTER TABLE rnacen.xref_p9_not_deleted OWNER TO rnacen;

--
-- Name: COLUMN xref_p9_not_deleted.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_not_deleted.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p9_not_deleted.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_not_deleted.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p9_not_deleted.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_not_deleted.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p9_not_deleted.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_not_deleted.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p9_not_deleted.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_not_deleted.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p9_not_deleted.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_not_deleted.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p9_not_deleted."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_not_deleted."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p9_not_deleted.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_not_deleted.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p9_not_deleted.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_not_deleted.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p9_not_deleted.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_not_deleted.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p9_not_deleted.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_not_deleted.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p9_not_deleted.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_not_deleted.id IS 'unique id';


--
-- Name: xref_p9_not_deleted_old; Type: TABLE; Schema: rnacen; Owner: rnacen
--

CREATE TABLE rnacen.xref_p9_not_deleted_old (
    dbid smallint NOT NULL,
    created integer NOT NULL,
    last integer NOT NULL,
    upi character varying(26) NOT NULL,
    version_i integer NOT NULL,
    deleted character(1) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT ('now'::text)::timestamp without time zone NOT NULL,
    userstamp character varying(20) DEFAULT 'USER'::character varying NOT NULL,
    ac character varying(300) NOT NULL,
    version integer,
    taxid bigint,
    id bigint DEFAULT nextval('rnacen.xref_pk_seq'::regclass),
    CONSTRAINT "ck_xref$deleted" CHECK ((deleted = ANY (ARRAY['Y'::bpchar, 'N'::bpchar]))),
    CONSTRAINT xref_p9_not_deleted_check CHECK (((dbid = 9) AND (deleted = 'N'::bpchar)))
);


ALTER TABLE rnacen.xref_p9_not_deleted_old OWNER TO rnacen;

--
-- Name: COLUMN xref_p9_not_deleted_old.dbid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_not_deleted_old.dbid IS 'database identifier';


--
-- Name: COLUMN xref_p9_not_deleted_old.created; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_not_deleted_old.created IS 'release identifier where the cross-reference was created';


--
-- Name: COLUMN xref_p9_not_deleted_old.last; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_not_deleted_old.last IS 'release identifier where the cross-reference was last seen';


--
-- Name: COLUMN xref_p9_not_deleted_old.upi; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_not_deleted_old.upi IS 'unique RNAcentral identifier';


--
-- Name: COLUMN xref_p9_not_deleted_old.version_i; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_not_deleted_old.version_i IS 'sequence version';


--
-- Name: COLUMN xref_p9_not_deleted_old.deleted; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_not_deleted_old.deleted IS '''Y'' if the cross-reference exists in the most recent database release or ''N'' if not';


--
-- Name: COLUMN xref_p9_not_deleted_old."timestamp"; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_not_deleted_old."timestamp" IS 'time of the last modification';


--
-- Name: COLUMN xref_p9_not_deleted_old.userstamp; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_not_deleted_old.userstamp IS 'user of the last modification';


--
-- Name: COLUMN xref_p9_not_deleted_old.ac; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_not_deleted_old.ac IS 'protein identifier in the source database';


--
-- Name: COLUMN xref_p9_not_deleted_old.version; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_not_deleted_old.version IS 'sequence version in the source database';


--
-- Name: COLUMN xref_p9_not_deleted_old.taxid; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_not_deleted_old.taxid IS 'taxonomy identifier';


--
-- Name: COLUMN xref_p9_not_deleted_old.id; Type: COMMENT; Schema: rnacen; Owner: rnacen
--

COMMENT ON COLUMN rnacen.xref_p9_not_deleted_old.id IS 'unique id';


--
-- Name: auth_group id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.auth_group ALTER COLUMN id SET DEFAULT nextval('rnacen.auth_group_id_seq'::regclass);


--
-- Name: auth_group_permissions id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.auth_group_permissions ALTER COLUMN id SET DEFAULT nextval('rnacen.auth_group_permissions_id_seq'::regclass);


--
-- Name: auth_permission id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.auth_permission ALTER COLUMN id SET DEFAULT nextval('rnacen.auth_permission_id_seq'::regclass);


--
-- Name: auth_user id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.auth_user ALTER COLUMN id SET DEFAULT nextval('rnacen.auth_user_id_seq'::regclass);


--
-- Name: auth_user_groups id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.auth_user_groups ALTER COLUMN id SET DEFAULT nextval('rnacen.auth_user_groups_id_seq'::regclass);


--
-- Name: auth_user_user_permissions id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.auth_user_user_permissions ALTER COLUMN id SET DEFAULT nextval('rnacen.auth_user_user_permissions_id_seq'::regclass);


--
-- Name: bad_precompute id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.bad_precompute ALTER COLUMN id SET DEFAULT nextval('rnacen.bad_precompute_id_seq'::regclass);


--
-- Name: blog id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.blog ALTER COLUMN id SET DEFAULT nextval('rnacen.blog_id_seq'::regclass);


--
-- Name: corsheaders_corsmodel id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.corsheaders_corsmodel ALTER COLUMN id SET DEFAULT nextval('rnacen.corsheaders_corsmodel_id_seq'::regclass);


--
-- Name: django_admin_log id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.django_admin_log ALTER COLUMN id SET DEFAULT nextval('rnacen.django_admin_log_id_seq'::regclass);


--
-- Name: django_content_type id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.django_content_type ALTER COLUMN id SET DEFAULT nextval('rnacen.django_content_type_id_seq'::regclass);


--
-- Name: django_migrations id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.django_migrations ALTER COLUMN id SET DEFAULT nextval('rnacen.django_migrations_id_seq'::regclass);


--
-- Name: django_site id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.django_site ALTER COLUMN id SET DEFAULT nextval('rnacen.django_site_id_seq'::regclass);


--
-- Name: ensembl_compara id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.ensembl_compara ALTER COLUMN id SET DEFAULT nextval('rnacen.ensembl_compara_id_seq'::regclass);


--
-- Name: ensembl_coordinate_systems id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.ensembl_coordinate_systems ALTER COLUMN id SET DEFAULT nextval('rnacen.ensembl_coordinate_systems_id_seq'::regclass);


--
-- Name: ensembl_import_tracking id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.ensembl_import_tracking ALTER COLUMN id SET DEFAULT nextval('rnacen.ensembl_import_tracking_id_seq'::regclass);


--
-- Name: ensembl_karyotype id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.ensembl_karyotype ALTER COLUMN id SET DEFAULT nextval('rnacen.ensembl_karyotype_id_seq'::regclass);


--
-- Name: ensembl_pseudogene_exons id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.ensembl_pseudogene_exons ALTER COLUMN id SET DEFAULT nextval('rnacen.ensembl_pseudogene_exons_id_seq'::regclass);


--
-- Name: ensembl_pseudogene_regions id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.ensembl_pseudogene_regions ALTER COLUMN id SET DEFAULT nextval('rnacen.ensembl_pseudogene_regions_id_seq'::regclass);


--
-- Name: go_term_annotations go_term_annotation_id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.go_term_annotations ALTER COLUMN go_term_annotation_id SET DEFAULT nextval('rnacen.go_term_annotations_go_term_annotation_id_seq'::regclass);


--
-- Name: go_term_publication_map go_term_publication_mapping_id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.go_term_publication_map ALTER COLUMN go_term_publication_mapping_id SET DEFAULT nextval('rnacen.go_term_publication_map_go_term_publication_mapping_id_seq1'::regclass);


--
-- Name: litscan_statistics id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.litscan_statistics ALTER COLUMN id SET DEFAULT nextval('rnacen.litscan_statistics_id_seq'::regclass);


--
-- Name: litsumm_summaries id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.litsumm_summaries ALTER COLUMN id SET DEFAULT nextval('rnacen.litsumm_summaries_id_seq'::regclass);


--
-- Name: pipeline_tracking_genome_mapping id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.pipeline_tracking_genome_mapping ALTER COLUMN id SET DEFAULT nextval('rnacen.pipeline_tracking_genome_mapping_id_seq'::regclass);


--
-- Name: pipeline_tracking_qa_scan id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.pipeline_tracking_qa_scan ALTER COLUMN id SET DEFAULT nextval('rnacen.pipeline_tracking_scan_id_seq'::regclass);


--
-- Name: pipeline_tracking_traveler id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.pipeline_tracking_traveler ALTER COLUMN id SET DEFAULT nextval('rnacen.pipeline_tracking_traveler_id_seq'::regclass);


--
-- Name: publications id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.publications ALTER COLUMN id SET DEFAULT nextval('rnacen.publications_id_seq'::regclass);


--
-- Name: r2dt_models id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.r2dt_models ALTER COLUMN id SET DEFAULT nextval('rnacen.rnc_secondary_structure_layout_models_id_seq'::regclass);


--
-- Name: r2dt_results id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.r2dt_results ALTER COLUMN id SET DEFAULT nextval('rnacen.load_secondary_layout_id_seq'::regclass);


--
-- Name: rfam_go_terms rfam_go_term_id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rfam_go_terms ALTER COLUMN rfam_go_term_id SET DEFAULT nextval('rnacen.rfam_go_terms_rfam_go_term_id_seq'::regclass);


--
-- Name: rfam_model_hits rfam_hit_id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rfam_model_hits ALTER COLUMN rfam_hit_id SET DEFAULT nextval('rnacen.rfam_model_hits_rfam_hit_id_seq'::regclass);


--
-- Name: rnc_accession_sequence_feature id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_accession_sequence_feature ALTER COLUMN id SET DEFAULT nextval('rnacen.rnc_accessions_sequence_features_id_seq'::regclass);


--
-- Name: rnc_accession_sequence_region id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_accession_sequence_region ALTER COLUMN id SET DEFAULT nextval('rnacen.rnc_accession_sequence_region_id_seq'::regclass);


--
-- Name: rnc_database_references id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_database_references ALTER COLUMN id SET DEFAULT nextval('rnacen.rnc_database_references_id_seq'::regclass);


--
-- Name: rnc_feedback_overlap id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_feedback_overlap ALTER COLUMN id SET DEFAULT nextval('rnacen.rnc_feedback_overlap_id_seq'::regclass);


--
-- Name: rnc_gene_status id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_gene_status ALTER COLUMN id SET DEFAULT nextval('rnacen.rnc_gene_status_id_seq'::regclass);


--
-- Name: rnc_import_tracker id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_import_tracker ALTER COLUMN id SET DEFAULT nextval('rnacen.rnc_import_tracker_id_seq'::regclass);


--
-- Name: rnc_import_tracker db_id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_import_tracker ALTER COLUMN db_id SET DEFAULT nextval('rnacen.rnc_import_tracker_db_id_seq'::regclass);


--
-- Name: rnc_interactions id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_interactions ALTER COLUMN id SET DEFAULT nextval('rnacen.rnc_interactions_id_seq'::regclass);


--
-- Name: rnc_locus id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_locus ALTER COLUMN id SET DEFAULT nextval('rnacen.rnc_locus_id_seq'::regclass);


--
-- Name: rnc_locus_members id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_locus_members ALTER COLUMN id SET DEFAULT nextval('rnacen.rnc_locus_members_id_seq'::regclass);


--
-- Name: rnc_related_sequences id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_related_sequences ALTER COLUMN id SET DEFAULT nextval('rnacen.rnc_related_sequences_id_seq'::regclass);


--
-- Name: rnc_sequence_exons id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_sequence_exons ALTER COLUMN id SET DEFAULT nextval('rnacen.rnc_sequence_exons_id_seq'::regclass);


--
-- Name: rnc_sequence_feature_providers id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_sequence_feature_providers ALTER COLUMN id SET DEFAULT nextval('rnacen.rnc_sequence_feature_providers_id_seq'::regclass);


--
-- Name: rnc_sequence_features rnc_sequence_features_id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_sequence_features ALTER COLUMN rnc_sequence_features_id SET DEFAULT nextval('rnacen.rnc_sequence_features_rnc_sequence_features_id_seq'::regclass);


--
-- Name: rnc_sequence_regions id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_sequence_regions ALTER COLUMN id SET DEFAULT nextval('rnacen.rnc_sequence_regions_id_seq'::regclass);


--
-- Name: xref_p10_deleted timestamp; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p10_deleted ALTER COLUMN "timestamp" SET DEFAULT ('now'::text)::timestamp without time zone;


--
-- Name: xref_p10_deleted userstamp; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p10_deleted ALTER COLUMN userstamp SET DEFAULT 'USER'::character varying;


--
-- Name: xref_p10_deleted id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p10_deleted ALTER COLUMN id SET DEFAULT nextval('rnacen.xref_pk_seq'::regclass);


--
-- Name: xref_p10_not_deleted timestamp; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p10_not_deleted ALTER COLUMN "timestamp" SET DEFAULT ('now'::text)::timestamp without time zone;


--
-- Name: xref_p10_not_deleted userstamp; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p10_not_deleted ALTER COLUMN userstamp SET DEFAULT 'USER'::character varying;


--
-- Name: xref_p10_not_deleted id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p10_not_deleted ALTER COLUMN id SET DEFAULT nextval('rnacen.xref_pk_seq'::regclass);


--
-- Name: xref_p13_deleted timestamp; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p13_deleted ALTER COLUMN "timestamp" SET DEFAULT ('now'::text)::timestamp without time zone;


--
-- Name: xref_p13_deleted userstamp; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p13_deleted ALTER COLUMN userstamp SET DEFAULT 'USER'::character varying;


--
-- Name: xref_p13_deleted id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p13_deleted ALTER COLUMN id SET DEFAULT nextval('rnacen.xref_pk_seq'::regclass);


--
-- Name: xref_p13_not_deleted timestamp; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p13_not_deleted ALTER COLUMN "timestamp" SET DEFAULT ('now'::text)::timestamp without time zone;


--
-- Name: xref_p13_not_deleted userstamp; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p13_not_deleted ALTER COLUMN userstamp SET DEFAULT 'USER'::character varying;


--
-- Name: xref_p13_not_deleted id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p13_not_deleted ALTER COLUMN id SET DEFAULT nextval('rnacen.xref_pk_seq'::regclass);


--
-- Name: xref_p19_deleted timestamp; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p19_deleted ALTER COLUMN "timestamp" SET DEFAULT ('now'::text)::timestamp without time zone;


--
-- Name: xref_p19_deleted userstamp; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p19_deleted ALTER COLUMN userstamp SET DEFAULT 'USER'::character varying;


--
-- Name: xref_p19_deleted id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p19_deleted ALTER COLUMN id SET DEFAULT nextval('rnacen.xref_pk_seq'::regclass);


--
-- Name: xref_p19_not_deleted timestamp; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p19_not_deleted ALTER COLUMN "timestamp" SET DEFAULT ('now'::text)::timestamp without time zone;


--
-- Name: xref_p19_not_deleted userstamp; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p19_not_deleted ALTER COLUMN userstamp SET DEFAULT 'USER'::character varying;


--
-- Name: xref_p19_not_deleted id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p19_not_deleted ALTER COLUMN id SET DEFAULT nextval('rnacen.xref_pk_seq'::regclass);


--
-- Name: xref_p21_deleted timestamp; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p21_deleted ALTER COLUMN "timestamp" SET DEFAULT ('now'::text)::timestamp without time zone;


--
-- Name: xref_p21_deleted userstamp; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p21_deleted ALTER COLUMN userstamp SET DEFAULT 'USER'::character varying;


--
-- Name: xref_p21_deleted id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p21_deleted ALTER COLUMN id SET DEFAULT nextval('rnacen.xref_pk_seq'::regclass);


--
-- Name: xref_p21_not_deleted timestamp; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p21_not_deleted ALTER COLUMN "timestamp" SET DEFAULT ('now'::text)::timestamp without time zone;


--
-- Name: xref_p21_not_deleted userstamp; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p21_not_deleted ALTER COLUMN userstamp SET DEFAULT 'USER'::character varying;


--
-- Name: xref_p21_not_deleted id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p21_not_deleted ALTER COLUMN id SET DEFAULT nextval('rnacen.xref_pk_seq'::regclass);


--
-- Name: xref_p22_deleted timestamp; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p22_deleted ALTER COLUMN "timestamp" SET DEFAULT ('now'::text)::timestamp without time zone;


--
-- Name: xref_p22_deleted userstamp; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p22_deleted ALTER COLUMN userstamp SET DEFAULT 'USER'::character varying;


--
-- Name: xref_p22_deleted id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p22_deleted ALTER COLUMN id SET DEFAULT nextval('rnacen.xref_pk_seq'::regclass);


--
-- Name: xref_p22_not_deleted timestamp; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p22_not_deleted ALTER COLUMN "timestamp" SET DEFAULT ('now'::text)::timestamp without time zone;


--
-- Name: xref_p22_not_deleted userstamp; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p22_not_deleted ALTER COLUMN userstamp SET DEFAULT 'USER'::character varying;


--
-- Name: xref_p22_not_deleted id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p22_not_deleted ALTER COLUMN id SET DEFAULT nextval('rnacen.xref_pk_seq'::regclass);


--
-- Name: xref_p43_deleted_old id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p43_deleted_old ALTER COLUMN id SET DEFAULT nextval('rnacen.xref_p43_deleted_id_seq'::regclass);


--
-- Name: xref_p43_not_deleted_old id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p43_not_deleted_old ALTER COLUMN id SET DEFAULT nextval('rnacen.xref_p43_not_deleted_id_seq'::regclass);


--
-- Name: xref_p49_deleted_old id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p49_deleted_old ALTER COLUMN id SET DEFAULT nextval('rnacen.xref_p49_deleted_id_seq'::regclass);


--
-- Name: xref_p49_not_deleted_old id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p49_not_deleted_old ALTER COLUMN id SET DEFAULT nextval('rnacen.xref_p49_not_deleted_id_seq'::regclass);


--
-- Name: xref_p51_deleted_old id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p51_deleted_old ALTER COLUMN id SET DEFAULT nextval('rnacen.xref_p51_deleted_id_seq'::regclass);


--
-- Name: xref_p51_not_deleted_old id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p51_not_deleted_old ALTER COLUMN id SET DEFAULT nextval('rnacen.xref_p51_not_deleted_id_seq'::regclass);


--
-- Name: xref_p53_deleted_old id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p53_deleted_old ALTER COLUMN id SET DEFAULT nextval('rnacen.xref_p53_deleted_id_seq'::regclass);


--
-- Name: xref_p53_not_deleted_old id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p53_not_deleted_old ALTER COLUMN id SET DEFAULT nextval('rnacen.xref_p53_not_deleted_id_seq'::regclass);


--
-- Name: xref_p54_deleted id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p54_deleted ALTER COLUMN id SET DEFAULT nextval('rnacen.xref_p54_deleted_id_seq'::regclass);


--
-- Name: xref_p54_not_deleted id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p54_not_deleted ALTER COLUMN id SET DEFAULT nextval('rnacen.xref_p54_not_deleted_id_seq'::regclass);


--
-- Name: xref_p5_deleted timestamp; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p5_deleted ALTER COLUMN "timestamp" SET DEFAULT ('now'::text)::timestamp without time zone;


--
-- Name: xref_p5_deleted userstamp; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p5_deleted ALTER COLUMN userstamp SET DEFAULT 'USER'::character varying;


--
-- Name: xref_p5_deleted id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p5_deleted ALTER COLUMN id SET DEFAULT nextval('rnacen.xref_pk_seq'::regclass);


--
-- Name: xref_p5_not_deleted timestamp; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p5_not_deleted ALTER COLUMN "timestamp" SET DEFAULT ('now'::text)::timestamp without time zone;


--
-- Name: xref_p5_not_deleted userstamp; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p5_not_deleted ALTER COLUMN userstamp SET DEFAULT 'USER'::character varying;


--
-- Name: xref_p5_not_deleted id; Type: DEFAULT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p5_not_deleted ALTER COLUMN id SET DEFAULT nextval('rnacen.xref_pk_seq'::regclass);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_key; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_key UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_key; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_key UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.auth_user_groups
    ADD CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_user_id_group_id_key; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_group_id_key UNIQUE (user_id, group_id);


--
-- Name: auth_user auth_user_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.auth_user
    ADD CONSTRAINT auth_user_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_permission_id_key; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_permission_id_key UNIQUE (user_id, permission_id);


--
-- Name: auth_user auth_user_username_key; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.auth_user
    ADD CONSTRAINT auth_user_username_key UNIQUE (username);


--
-- Name: bad_precompute bad_precompute_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.bad_precompute
    ADD CONSTRAINT bad_precompute_pkey PRIMARY KEY (id);


--
-- Name: blog blog_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.blog
    ADD CONSTRAINT blog_pkey PRIMARY KEY (id);


--
-- Name: rna constraint_rna_seq_long_n; Type: CHECK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE rnacen.rna
    ADD CONSTRAINT constraint_rna_seq_long_n CHECK (((seq_long IS NULL) OR (((len - length(replace(seq_long, 'N'::text, ''::text))))::numeric <= round((0.1 * (len)::numeric))))) NOT VALID;


--
-- Name: rna constraint_rna_seq_short_n; Type: CHECK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE rnacen.rna
    ADD CONSTRAINT constraint_rna_seq_short_n CHECK (((seq_short IS NULL) OR (((len - length(replace((seq_short)::text, 'N'::text, ''::text))))::numeric <= round((0.1 * (len)::numeric))))) NOT VALID;


--
-- Name: corsheaders_corsmodel corsheaders_corsmodel_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.corsheaders_corsmodel
    ADD CONSTRAINT corsheaders_corsmodel_pkey PRIMARY KEY (id);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_45f3b1d93ec8c61c_uniq; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.django_content_type
    ADD CONSTRAINT django_content_type_app_label_45f3b1d93ec8c61c_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: django_site django_site_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.django_site
    ADD CONSTRAINT django_site_pkey PRIMARY KEY (id);


--
-- Name: ensembl_assembly ensembl_assembly_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.ensembl_assembly
    ADD CONSTRAINT ensembl_assembly_pkey PRIMARY KEY (assembly_id);


--
-- Name: ensembl_coordinate_systems ensembl_coordinate_systems_chromosome_assembly_id_key; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.ensembl_coordinate_systems
    ADD CONSTRAINT ensembl_coordinate_systems_chromosome_assembly_id_key UNIQUE (chromosome, assembly_id);


--
-- Name: ensembl_coordinate_systems ensembl_coordinate_systems_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.ensembl_coordinate_systems
    ADD CONSTRAINT ensembl_coordinate_systems_pkey PRIMARY KEY (id);


--
-- Name: ensembl_import_tracking ensembl_import_tracking_database_name_task_name_key; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.ensembl_import_tracking
    ADD CONSTRAINT ensembl_import_tracking_database_name_task_name_key UNIQUE (database_name, task_name);


--
-- Name: ensembl_import_tracking ensembl_import_tracking_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.ensembl_import_tracking
    ADD CONSTRAINT ensembl_import_tracking_pkey PRIMARY KEY (id);


--
-- Name: ensembl_karyotype ensembl_karyotype_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.ensembl_karyotype
    ADD CONSTRAINT ensembl_karyotype_pkey PRIMARY KEY (id);


--
-- Name: ensembl_pseudogene_exons ensembl_pseudogene_exons_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.ensembl_pseudogene_exons
    ADD CONSTRAINT ensembl_pseudogene_exons_pkey PRIMARY KEY (id);


--
-- Name: ensembl_pseudogene_regions ensembl_pseudogene_regions_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.ensembl_pseudogene_regions
    ADD CONSTRAINT ensembl_pseudogene_regions_pkey PRIMARY KEY (id);


--
-- Name: go_term_annotations go_term_annotations_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.go_term_annotations
    ADD CONSTRAINT go_term_annotations_pkey PRIMARY KEY (go_term_annotation_id);


--
-- Name: go_term_publication_map go_term_publication_map_pkey1; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.go_term_publication_map
    ADD CONSTRAINT go_term_publication_map_pkey1 PRIMARY KEY (go_term_publication_mapping_id);


--
-- Name: insdc_so_term_mapping insdc_so_term_mapping_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.insdc_so_term_mapping
    ADD CONSTRAINT insdc_so_term_mapping_pkey PRIMARY KEY (rna_type);


--
-- Name: litscan_statistics litscan_statistics_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.litscan_statistics
    ADD CONSTRAINT litscan_statistics_pkey PRIMARY KEY (id);


--
-- Name: litsumm_summaries litsumm_summaries_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.litsumm_summaries
    ADD CONSTRAINT litsumm_summaries_pkey PRIMARY KEY (id);


--
-- Name: r2dt_results load_secondary_layout_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.r2dt_results
    ADD CONSTRAINT load_secondary_layout_pkey PRIMARY KEY (id);


--
-- Name: load_traveler_attempted load_traveler_attempted_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.load_traveler_attempted
    ADD CONSTRAINT load_traveler_attempted_pkey PRIMARY KEY (urs);


--
-- Name: rnc_sequence_feature_providers name_unique; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_sequence_feature_providers
    ADD CONSTRAINT name_unique UNIQUE (name);


--
-- Name: ontology_terms ontology_terms_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.ontology_terms
    ADD CONSTRAINT ontology_terms_pkey PRIMARY KEY (ontology_term_id);


--
-- Name: pipeline_tracking_genome_mapping pipeline_tracking_genome_mapping_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.pipeline_tracking_genome_mapping
    ADD CONSTRAINT pipeline_tracking_genome_mapping_pkey PRIMARY KEY (id);


--
-- Name: pipeline_tracking_genome_mapping pipeline_tracking_genome_mapping_urs_taxid_assembly_key; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.pipeline_tracking_genome_mapping
    ADD CONSTRAINT pipeline_tracking_genome_mapping_urs_taxid_assembly_key UNIQUE (urs_taxid, assembly_id);


--
-- Name: pipeline_tracking_qa_scan pipeline_tracking_scan_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.pipeline_tracking_qa_scan
    ADD CONSTRAINT pipeline_tracking_scan_pkey PRIMARY KEY (id);


--
-- Name: pipeline_tracking_traveler pipeline_tracking_traveler_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.pipeline_tracking_traveler
    ADD CONSTRAINT pipeline_tracking_traveler_pkey PRIMARY KEY (id);


--
-- Name: pipeline_tracking_traveler pipeline_tracking_traveler_urs_key; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.pipeline_tracking_traveler
    ADD CONSTRAINT pipeline_tracking_traveler_urs_key UNIQUE (urs);


--
-- Name: protein_info protein_info_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.protein_info
    ADD CONSTRAINT protein_info_pkey PRIMARY KEY (protein_accession);


--
-- Name: publications publications_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.publications
    ADD CONSTRAINT publications_pkey PRIMARY KEY (id);


--
-- Name: qa_status qa_status_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.qa_status
    ADD CONSTRAINT qa_status_pkey PRIMARY KEY (rna_id);


--
-- Name: release_stats release_stats_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.release_stats
    ADD CONSTRAINT release_stats_pkey PRIMARY KEY (this_release);


--
-- Name: rfam_analyzed_sequences rfam_analyzed_sequences_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rfam_analyzed_sequences
    ADD CONSTRAINT rfam_analyzed_sequences_pkey PRIMARY KEY (upi);


--
-- Name: rfam_clans rfam_clans_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rfam_clans
    ADD CONSTRAINT rfam_clans_pkey PRIMARY KEY (rfam_clan_id);


--
-- Name: rfam_go_terms rfam_go_terms_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rfam_go_terms
    ADD CONSTRAINT rfam_go_terms_pkey PRIMARY KEY (rfam_go_term_id);


--
-- Name: rfam_model_hits rfam_model_hits_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rfam_model_hits
    ADD CONSTRAINT rfam_model_hits_pkey PRIMARY KEY (rfam_hit_id);


--
-- Name: rfam_models rfam_models_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rfam_models
    ADD CONSTRAINT rfam_models_pkey PRIMARY KEY (rfam_model_id);


--
-- Name: rna rna_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rna
    ADD CONSTRAINT rna_pkey PRIMARY KEY (upi);


--
-- Name: rnc_accession_sequence_region rnc_accession_sequence_region_accession_region_id_key; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_accession_sequence_region
    ADD CONSTRAINT rnc_accession_sequence_region_accession_region_id_key UNIQUE (accession, region_id);


--
-- Name: rnc_accession_sequence_region rnc_accession_sequence_region_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_accession_sequence_region
    ADD CONSTRAINT rnc_accession_sequence_region_pkey PRIMARY KEY (id);


--
-- Name: rnc_accessions rnc_accessions_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_accessions
    ADD CONSTRAINT rnc_accessions_pkey PRIMARY KEY (accession);


--
-- Name: rnc_accession_sequence_feature rnc_accessions_sequence_featu_accession_rnc_sequence_featur_key; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_accession_sequence_feature
    ADD CONSTRAINT rnc_accessions_sequence_featu_accession_rnc_sequence_featur_key UNIQUE (accession, rnc_sequence_feature_id);


--
-- Name: rnc_accession_sequence_feature rnc_accessions_sequence_features_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_accession_sequence_feature
    ADD CONSTRAINT rnc_accessions_sequence_features_pkey PRIMARY KEY (id);


--
-- Name: rnc_chemical_components rnc_chemical_components_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_chemical_components
    ADD CONSTRAINT rnc_chemical_components_pkey PRIMARY KEY (id);


--
-- Name: cpat_results rnc_cpat_results_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.cpat_results
    ADD CONSTRAINT rnc_cpat_results_pkey PRIMARY KEY (urs_taxid);


--
-- Name: rnc_database_json_stats rnc_database_json_stats_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_database_json_stats
    ADD CONSTRAINT rnc_database_json_stats_pkey PRIMARY KEY (database);


--
-- Name: rnc_database rnc_database_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_database
    ADD CONSTRAINT rnc_database_pkey PRIMARY KEY (id);


--
-- Name: rnc_database_references rnc_database_references_dbid_reference_id_key; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_database_references
    ADD CONSTRAINT rnc_database_references_dbid_reference_id_key UNIQUE (dbid, reference_id);


--
-- Name: rnc_database_references rnc_database_references_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_database_references
    ADD CONSTRAINT rnc_database_references_pkey PRIMARY KEY (id);


--
-- Name: rnc_feedback_overlap rnc_feedback_overlap_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_feedback_overlap
    ADD CONSTRAINT rnc_feedback_overlap_pkey PRIMARY KEY (id);


--
-- Name: rnc_gene_status rnc_gene_status_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_gene_status
    ADD CONSTRAINT rnc_gene_status_pkey PRIMARY KEY (id);


--
-- Name: rnc_gene_status rnc_gene_status_region_id_key; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_gene_status
    ADD CONSTRAINT rnc_gene_status_region_id_key UNIQUE (region_id);


--
-- Name: rnc_import_tracker rnc_import_tracker_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_import_tracker
    ADD CONSTRAINT rnc_import_tracker_pkey PRIMARY KEY (id);


--
-- Name: rnc_interactions rnc_interactions_intact_id_key; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_interactions
    ADD CONSTRAINT rnc_interactions_intact_id_key UNIQUE (intact_id);


--
-- Name: rnc_interactions rnc_interactions_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_interactions
    ADD CONSTRAINT rnc_interactions_pkey PRIMARY KEY (id);


--
-- Name: rnc_locus rnc_locus_assembly_id_locus_name_key; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_locus
    ADD CONSTRAINT rnc_locus_assembly_id_locus_name_key UNIQUE (assembly_id, locus_name);


--
-- Name: rnc_locus_members rnc_locus_members_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_locus_members
    ADD CONSTRAINT rnc_locus_members_pkey PRIMARY KEY (id);


--
-- Name: rnc_locus_members rnc_locus_members_region_id_key; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_locus_members
    ADD CONSTRAINT rnc_locus_members_region_id_key UNIQUE (region_id);


--
-- Name: rnc_locus rnc_locus_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_locus
    ADD CONSTRAINT rnc_locus_pkey PRIMARY KEY (id);


--
-- Name: rnc_locus rnc_locus_public_locus_name_key; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_locus
    ADD CONSTRAINT rnc_locus_public_locus_name_key UNIQUE (public_locus_name);


--
-- Name: rnc_modifications rnc_modifications_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_modifications
    ADD CONSTRAINT rnc_modifications_pkey PRIMARY KEY (id);


--
-- Name: rnc_reference_map rnc_reference_map_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_reference_map
    ADD CONSTRAINT rnc_reference_map_pkey PRIMARY KEY (id);


--
-- Name: rnc_reference_map rnc_references_map$accession$reference_id; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_reference_map
    ADD CONSTRAINT "rnc_references_map$accession$reference_id" UNIQUE (accession, reference_id);


--
-- Name: rnc_references rnc_references_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_references
    ADD CONSTRAINT rnc_references_pkey PRIMARY KEY (id);


--
-- Name: rnc_related_sequences rnc_related_sequences_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_related_sequences
    ADD CONSTRAINT rnc_related_sequences_pkey PRIMARY KEY (id);


--
-- Name: rnc_relationship_types rnc_relationship_types_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_relationship_types
    ADD CONSTRAINT rnc_relationship_types_pkey PRIMARY KEY (relationship_type);


--
-- Name: rnc_release rnc_release_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_release
    ADD CONSTRAINT rnc_release_pkey PRIMARY KEY (id);


--
-- Name: rnc_rna_precomputed rnc_rna_precomputed_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_rna_precomputed
    ADD CONSTRAINT rnc_rna_precomputed_pkey PRIMARY KEY (id);


--
-- Name: r2dt_models rnc_secondary_structure_layout_models_model_name_key; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.r2dt_models
    ADD CONSTRAINT rnc_secondary_structure_layout_models_model_name_key UNIQUE (model_name);


--
-- Name: r2dt_models rnc_secondary_structure_layout_models_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.r2dt_models
    ADD CONSTRAINT rnc_secondary_structure_layout_models_pkey PRIMARY KEY (id);


--
-- Name: rnc_sequence_exons rnc_sequence_exons_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_sequence_exons
    ADD CONSTRAINT rnc_sequence_exons_pkey PRIMARY KEY (id);


--
-- Name: rnc_sequence_feature_types rnc_sequence_feature_types_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_sequence_feature_types
    ADD CONSTRAINT rnc_sequence_feature_types_pkey PRIMARY KEY (feature_name);


--
-- Name: rnc_sequence_features rnc_sequence_features_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_sequence_features
    ADD CONSTRAINT rnc_sequence_features_pkey PRIMARY KEY (rnc_sequence_features_id);


--
-- Name: rnc_sequence_regions rnc_sequence_regions_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_sequence_regions
    ADD CONSTRAINT rnc_sequence_regions_pkey PRIMARY KEY (id);


--
-- Name: rnc_taxonomy rnc_taxonomy_pkey; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_taxonomy
    ADD CONSTRAINT rnc_taxonomy_pkey PRIMARY KEY (id);


--
-- Name: ensembl_pseudogene_exons un_ensembl_pseduogene_exons__region_start_stop; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.ensembl_pseudogene_exons
    ADD CONSTRAINT un_ensembl_pseduogene_exons__region_start_stop UNIQUE (region_id, exon_start, exon_stop);


--
-- Name: go_term_annotations un_go_term_annotations; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.go_term_annotations
    ADD CONSTRAINT un_go_term_annotations UNIQUE (rna_id, qualifier, ontology_term_id, evidence_code, assigned_by);


--
-- Name: go_term_publication_map un_go_term_publication_map_anno_ref; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.go_term_publication_map
    ADD CONSTRAINT un_go_term_publication_map_anno_ref UNIQUE (go_term_annotation_id, reference_id);


--
-- Name: r2dt_results un_layout__urs; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.r2dt_results
    ADD CONSTRAINT un_layout__urs UNIQUE (urs);


--
-- Name: rfam_go_terms un_rfam_go_terms__rfam_model_id_ontology_term_id; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rfam_go_terms
    ADD CONSTRAINT un_rfam_go_terms__rfam_model_id_ontology_term_id UNIQUE (rfam_model_id, ontology_term_id);


--
-- Name: rfam_model_hits un_rfam_model_hits_unique_cols; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rfam_model_hits
    ADD CONSTRAINT un_rfam_model_hits_unique_cols UNIQUE (sequence_start, sequence_stop, model_start, model_stop, rfam_model_id, upi);


--
-- Name: rnc_feedback_overlap un_rnc_feedback_overlap__upi_assembly; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_feedback_overlap
    ADD CONSTRAINT un_rnc_feedback_overlap__upi_assembly UNIQUE (upi_taxid, assembly_id);


--
-- Name: rnc_sequence_exons un_rnc_sequence_exons__region_start_stop; Type: CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_sequence_exons
    ADD CONSTRAINT un_rnc_sequence_exons__region_start_stop UNIQUE (region_id, exon_start, exon_stop);


--
-- Name: auth_group_name_253ae2a6331666e8_like; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX auth_group_name_253ae2a6331666e8_like ON rnacen.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_0e939a4f; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX auth_group_permissions_0e939a4f ON rnacen.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_5f4a8d8; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX auth_group_permissions_5f4a8d8 ON rnacen.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_8373b171; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX auth_group_permissions_8373b171 ON rnacen.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_group_permissions_83df41e; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX auth_group_permissions_83df41e ON rnacen.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_37ef4eb4; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX auth_permission_37ef4eb4 ON rnacen.auth_permission USING btree (content_type_id);


--
-- Name: auth_permission_417f1b1c; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX auth_permission_417f1b1c ON rnacen.auth_permission USING btree (content_type_id);


--
-- Name: auth_user_groups_0e939a4f; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX auth_user_groups_0e939a4f ON rnacen.auth_user_groups USING btree (group_id);


--
-- Name: auth_user_groups_5f412f9a; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX auth_user_groups_5f412f9a ON rnacen.auth_user_groups USING btree (group_id);


--
-- Name: auth_user_groups_6340c63c; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX auth_user_groups_6340c63c ON rnacen.auth_user_groups USING btree (user_id);


--
-- Name: auth_user_groups_e8701ad4; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX auth_user_groups_e8701ad4 ON rnacen.auth_user_groups USING btree (user_id);


--
-- Name: auth_user_user_permissions7493; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX auth_user_user_permissions7493 ON rnacen.auth_user_user_permissions USING btree (permission_id);


--
-- Name: auth_user_user_permissions_8373b171; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX auth_user_user_permissions_8373b171 ON rnacen.auth_user_user_permissions USING btree (permission_id);


--
-- Name: auth_user_user_permissions_e8701ad4; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX auth_user_user_permissions_e8701ad4 ON rnacen.auth_user_user_permissions USING btree (user_id);


--
-- Name: auth_user_user_permissionsbd5d; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX auth_user_user_permissionsbd5d ON rnacen.auth_user_user_permissions USING btree (user_id);


--
-- Name: auth_user_username_51b3b110094b8aae_like; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX auth_user_username_51b3b110094b8aae_like ON rnacen.auth_user USING btree (username varchar_pattern_ops);


--
-- Name: django_admin_log_37ef4eb4; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX django_admin_log_37ef4eb4 ON rnacen.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_417f1b1c; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX django_admin_log_417f1b1c ON rnacen.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_6340c63c; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX django_admin_log_6340c63c ON rnacen.django_admin_log USING btree (user_id);


--
-- Name: django_admin_log_e8701ad4; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX django_admin_log_e8701ad4 ON rnacen.django_admin_log USING btree (user_id);


--
-- Name: django_session_b7b81f0c; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX django_session_b7b81f0c ON rnacen.django_session USING btree (expire_date);


--
-- Name: django_session_de54fa62; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX django_session_de54fa62 ON rnacen.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_461cfeaa630ca218_like; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX django_session_session_key_461cfeaa630ca218_like ON rnacen.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: ensembl_assembly_assembly_full_name_4e04e34c934d828c_like; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ensembl_assembly_assembly_full_name_4e04e34c934d828c_like ON rnacen.ensembl_assembly USING btree (assembly_full_name varchar_pattern_ops);


--
-- Name: ensembl_assembly_assembly_id_445613b5d4415e25_like; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ensembl_assembly_assembly_id_445613b5d4415e25_like ON rnacen.ensembl_assembly USING btree (assembly_id varchar_pattern_ops);


--
-- Name: ensembl_assembly_assembly_ucsc_18c1678ec4499598_like; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ensembl_assembly_assembly_ucsc_18c1678ec4499598_like ON rnacen.ensembl_assembly USING btree (assembly_ucsc varchar_pattern_ops);


--
-- Name: ensembl_assembly_b0b7b698; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ensembl_assembly_b0b7b698 ON rnacen.ensembl_assembly USING btree (taxid);


--
-- Name: ensembl_assembly_common_name_2fb95f30e1a6510c_like; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ensembl_assembly_common_name_2fb95f30e1a6510c_like ON rnacen.ensembl_assembly USING btree (common_name varchar_pattern_ops);


--
-- Name: ensembl_assembly_d3a9bcdf; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ensembl_assembly_d3a9bcdf ON rnacen.ensembl_assembly USING btree (assembly_ucsc);


--
-- Name: ensembl_assembly_f0a6a773; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ensembl_assembly_f0a6a773 ON rnacen.ensembl_assembly USING btree (common_name);


--
-- Name: ensembl_assembly_f18d9711; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ensembl_assembly_f18d9711 ON rnacen.ensembl_assembly USING btree (gca_accession);


--
-- Name: ensembl_assembly_fce94082; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ensembl_assembly_fce94082 ON rnacen.ensembl_assembly USING btree (assembly_full_name);


--
-- Name: ensembl_assembly_gca_accession_6453f4761e62fac1_like; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ensembl_assembly_gca_accession_6453f4761e62fac1_like ON rnacen.ensembl_assembly USING btree (gca_accession varchar_pattern_ops);


--
-- Name: ensembl_assembly_subdomain_15320e5d; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ensembl_assembly_subdomain_15320e5d ON rnacen.ensembl_assembly USING btree (subdomain);


--
-- Name: ensembl_assembly_subdomain_15320e5d_like; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ensembl_assembly_subdomain_15320e5d_like ON rnacen.ensembl_assembly USING btree (subdomain varchar_pattern_ops);


--
-- Name: ensembl_karyotype_id_uindex; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX ensembl_karyotype_id_uindex ON rnacen.ensembl_karyotype USING btree (id);


--
-- Name: fk_ensembl_compara__urs_taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX fk_ensembl_compara__urs_taxid ON rnacen.ensembl_compara USING btree (urs_taxid);


--
-- Name: fk_rnc_secondary_structure_layout_models__model_name; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX fk_rnc_secondary_structure_layout_models__model_name ON rnacen.r2dt_models USING btree (model_name);


--
-- Name: fk_rnc_secondary_structure_layout_models__taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX fk_rnc_secondary_structure_layout_models__taxid ON rnacen.r2dt_models USING btree (taxid);


--
-- Name: idx_rnc__feedback_overlap__no_overlaps_with; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX idx_rnc__feedback_overlap__no_overlaps_with ON rnacen.rnc_feedback_overlap USING gin (no_overlaps_with);


--
-- Name: idx_rnc__feedback_overlap__overlaps_with; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX idx_rnc__feedback_overlap__overlaps_with ON rnacen.rnc_feedback_overlap USING gin (overlaps_with);


--
-- Name: ix_ensembl_compara__homology_id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_ensembl_compara__homology_id ON rnacen.ensembl_compara USING btree (homology_id);


--
-- Name: ix_ensembl_coordinate_systems__assembly_id_chromosome; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_ensembl_coordinate_systems__assembly_id_chromosome ON rnacen.ensembl_coordinate_systems USING btree (assembly_id, chromosome);


--
-- Name: ix_layout__model_id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_layout__model_id ON rnacen.r2dt_results USING btree (model_id);


--
-- Name: ix_layout__urs; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_layout__urs ON rnacen.r2dt_results USING btree (urs);


--
-- Name: ix_rnc_gene_status__urs_taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_rnc_gene_status__urs_taxid ON rnacen.rnc_gene_status USING btree (urs_taxid);


--
-- Name: ix_rnc_references__reference_id_accesion; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_rnc_references__reference_id_accesion ON rnacen.rnc_reference_map USING btree (reference_id, accession);


--
-- Name: ix_rnc_related_sequences__target_ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_rnc_related_sequences__target_ac ON rnacen.rnc_related_sequences USING btree (target_accession);


--
-- Name: ix_rnc_rna_precomputed_assigned_rna; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_rnc_rna_precomputed_assigned_rna ON rnacen.rnc_rna_precomputed USING btree (assigned_so_rna_type);


--
-- Name: ix_rnc_sequence_features__upi_taxid_name; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_rnc_sequence_features__upi_taxid_name ON rnacen.rnc_sequence_features USING btree (upi, taxid, feature_name);


--
-- Name: ix_rnc_sequence_regions__assembly_id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_rnc_sequence_regions__assembly_id ON rnacen.rnc_sequence_regions USING btree (assembly_id);


--
-- Name: ix_rnc_sequence_regions_active__assembly_id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_rnc_sequence_regions_active__assembly_id ON rnacen.rnc_sequence_regions_active USING btree (assembly_id);


--
-- Name: ix_rnc_sequence_regions_active__urs_taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_rnc_sequence_regions_active__urs_taxid ON rnacen.rnc_sequence_regions_active USING btree (urs_taxid);


--
-- Name: ix_rnx_sequence_features_upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_rnx_sequence_features_upi ON rnacen.rnc_sequence_features USING btree (upi);


--
-- Name: ix_sequence_regions__assembly_id_chromosome; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_sequence_regions__assembly_id_chromosome ON rnacen.rnc_sequence_regions USING btree (assembly_id, chromosome);


--
-- Name: ix_sequence_regions__assembly_id_chromosome_start_stop; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_sequence_regions__assembly_id_chromosome_start_stop ON rnacen.rnc_sequence_regions USING btree (assembly_id, chromosome, region_start, region_stop);


--
-- Name: ix_sequence_regions__urs_taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_sequence_regions__urs_taxid ON rnacen.rnc_sequence_regions USING btree (urs_taxid);


--
-- Name: ix_xref__upi_taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_xref__upi_taxid ON rnacen.xref USING btree (upi, taxid);


--
-- Name: ix_xref_p10_deleted__upi_taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_xref_p10_deleted__upi_taxid ON rnacen.xref_p10_deleted USING btree (upi, taxid);


--
-- Name: ix_xref_p10_not_deleted__upi_taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_xref_p10_not_deleted__upi_taxid ON rnacen.xref_p10_not_deleted USING btree (upi, taxid);


--
-- Name: ix_xref_p13_deleted__upi_taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_xref_p13_deleted__upi_taxid ON rnacen.xref_p13_deleted USING btree (upi, taxid);


--
-- Name: ix_xref_p13_not_deleted__upi_taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_xref_p13_not_deleted__upi_taxid ON rnacen.xref_p13_not_deleted USING btree (upi, taxid);


--
-- Name: ix_xref_p19_deleted__upi_taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_xref_p19_deleted__upi_taxid ON rnacen.xref_p19_deleted USING btree (upi, taxid);


--
-- Name: ix_xref_p19_not_deleted__upi_taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_xref_p19_not_deleted__upi_taxid ON rnacen.xref_p19_not_deleted USING btree (upi, taxid);


--
-- Name: ix_xref_p21_deleted__upi_taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_xref_p21_deleted__upi_taxid ON rnacen.xref_p21_deleted USING btree (upi, taxid);


--
-- Name: ix_xref_p21_not_deleted__upi_taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_xref_p21_not_deleted__upi_taxid ON rnacen.xref_p21_not_deleted USING btree (upi, taxid);


--
-- Name: ix_xref_p22_deleted__upi_taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_xref_p22_deleted__upi_taxid ON rnacen.xref_p22_deleted USING btree (upi, taxid);


--
-- Name: ix_xref_p22_not_deleted__upi_taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_xref_p22_not_deleted__upi_taxid ON rnacen.xref_p22_not_deleted USING btree (upi, taxid);


--
-- Name: ix_xref_p27_deleted__upi_taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_xref_p27_deleted__upi_taxid ON rnacen.xref_p27_deleted USING btree (upi, taxid);


--
-- Name: ix_xref_p27_not_deleted__upi_taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_xref_p27_not_deleted__upi_taxid ON rnacen.xref_p27_not_deleted USING btree (upi, taxid);


--
-- Name: ix_xref_p28_deleted__upi_taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_xref_p28_deleted__upi_taxid ON rnacen.xref_p28_deleted USING btree (upi, taxid);


--
-- Name: ix_xref_p28_not_deleted__upi_taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_xref_p28_not_deleted__upi_taxid ON rnacen.xref_p28_not_deleted USING btree (upi, taxid);


--
-- Name: ix_xref_p29_deleted__upi_taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_xref_p29_deleted__upi_taxid ON rnacen.xref_p29_deleted USING btree (upi, taxid);


--
-- Name: ix_xref_p29_not_deleted__upi_taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_xref_p29_not_deleted__upi_taxid ON rnacen.xref_p29_not_deleted USING btree (upi, taxid);


--
-- Name: ix_xref_p5_deleted__upi_taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_xref_p5_deleted__upi_taxid ON rnacen.xref_p5_deleted USING btree (upi, taxid);


--
-- Name: ix_xref_p5_not_deleted__upi_taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX ix_xref_p5_not_deleted__upi_taxid ON rnacen.xref_p5_not_deleted USING btree (upi, taxid);


--
-- Name: qa_status__has_issue; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX qa_status__has_issue ON rnacen.qa_status USING btree (has_issue) WHERE has_issue;


--
-- Name: qa_status__upi_taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX qa_status__upi_taxid ON rnacen.qa_status USING btree (upi, taxid);


--
-- Name: rfam_analyzed_sequences_upi_143bc1f118b7f227_like; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX rfam_analyzed_sequences_upi_143bc1f118b7f227_like ON rnacen.rfam_analyzed_sequences USING btree (upi varchar_pattern_ops);


--
-- Name: rfam_clans_rfam_clan_id_bb628fbf349ed40_like; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX rfam_clans_rfam_clan_id_bb628fbf349ed40_like ON rnacen.rfam_clans USING btree (rfam_clan_id varchar_pattern_ops);


--
-- Name: rfam_go_terms_4582906f; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX rfam_go_terms_4582906f ON rnacen.rfam_go_terms USING btree (rfam_model_id);


--
-- Name: rfam_go_terms_rfam_model_id_418d94a91e74ecaa_like; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX rfam_go_terms_rfam_model_id_418d94a91e74ecaa_like ON rnacen.rfam_go_terms USING btree (rfam_model_id varchar_pattern_ops);


--
-- Name: rfam_model_hits_4582906f; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX rfam_model_hits_4582906f ON rnacen.rfam_model_hits USING btree (rfam_model_id);


--
-- Name: rfam_model_hits_98db0b07; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX rfam_model_hits_98db0b07 ON rnacen.rfam_model_hits USING btree (upi);


--
-- Name: rfam_models_21e3d921; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX rfam_models_21e3d921 ON rnacen.rfam_models USING btree (rfam_clan_id);


--
-- Name: rfam_models_rfam_clan_id_4497ffd203fbfac6_like; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX rfam_models_rfam_clan_id_4497ffd203fbfac6_like ON rnacen.rfam_models USING btree (rfam_clan_id varchar_pattern_ops);


--
-- Name: rfam_models_rfam_model_id_3cafff1ce352ae9c_like; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX rfam_models_rfam_model_id_3cafff1ce352ae9c_like ON rnacen.rfam_models USING btree (rfam_model_id varchar_pattern_ops);


--
-- Name: rna$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "rna$id" ON rnacen.rna USING btree (id);


--
-- Name: rna$len; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "rna$len" ON rnacen.rna USING btree (len);


--
-- Name: rna$md5; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "rna$md5" ON rnacen.rna USING btree (md5);


--
-- Name: rnc_accessions$database; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "rnc_accessions$database" ON rnacen.rnc_accessions USING btree (database);


--
-- Name: rnc_accessions$db_xref; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "rnc_accessions$db_xref" ON rnacen.rnc_accessions USING gin (db_xref gin_trgm_ops);


--
-- Name: rnc_accessions$external_id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "rnc_accessions$external_id" ON rnacen.rnc_accessions USING btree (external_id);


--
-- Name: rnc_accessions$feature_name; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "rnc_accessions$feature_name" ON rnacen.rnc_accessions USING btree (feature_name);


--
-- Name: rnc_accessions$is_composite; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "rnc_accessions$is_composite" ON rnacen.rnc_accessions USING btree (is_composite);


--
-- Name: rnc_accessions$locus_tag; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "rnc_accessions$locus_tag" ON rnacen.rnc_accessions USING btree (locus_tag);


--
-- Name: rnc_accessions$optional_id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "rnc_accessions$optional_id" ON rnacen.rnc_accessions USING btree (optional_id);


--
-- Name: rnc_accessions$parent_ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "rnc_accessions$parent_ac" ON rnacen.rnc_accessions USING btree (parent_ac);


--
-- Name: rnc_accessions$species; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "rnc_accessions$species" ON rnacen.rnc_accessions USING btree (species);


--
-- Name: rnc_accessions_ncrna_class_index; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX rnc_accessions_ncrna_class_index ON rnacen.rnc_accessions USING btree (ncrna_class);


--
-- Name: rnc_database$descr; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "rnc_database$descr" ON rnacen.rnc_database USING btree (descr);


--
-- Name: rnc_modifications_accession_index; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX rnc_modifications_accession_index ON rnacen.rnc_modifications USING btree (accession);


--
-- Name: rnc_modifications_modification_id_idx; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX rnc_modifications_modification_id_idx ON rnacen.rnc_modifications USING btree (modification_id);


--
-- Name: rnc_modifications_upi_idx; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX rnc_modifications_upi_idx ON rnacen.rnc_modifications USING btree (upi);


--
-- Name: rnc_reference_map$reference_id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "rnc_reference_map$reference_id" ON rnacen.rnc_reference_map USING btree (reference_id);


--
-- Name: rnc_references$pmid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "rnc_references$pmid" ON rnacen.rnc_references USING btree (pmid);


--
-- Name: rnc_references_map$accession; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "rnc_references_map$accession" ON rnacen.rnc_reference_map USING btree (accession);


--
-- Name: rnc_references_map$reference_id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "rnc_references_map$reference_id" ON rnacen.rnc_reference_map USING btree (reference_id);


--
-- Name: rnc_related_relationship_type_idx; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX rnc_related_relationship_type_idx ON rnacen.rnc_related_sequences USING btree (relationship_type);


--
-- Name: rnc_related_sequences_source_urs_taxid_idx; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX rnc_related_sequences_source_urs_taxid_idx ON rnacen.rnc_related_sequences USING btree (source_urs_taxid);


--
-- Name: rnc_related_sequences_target_urs_taxid_idx; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX rnc_related_sequences_target_urs_taxid_idx ON rnacen.rnc_related_sequences USING btree (target_urs_taxid);


--
-- Name: rnc_rna_precomputed_98db0b07; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX rnc_rna_precomputed_98db0b07 ON rnacen.rnc_rna_precomputed USING btree (upi);


--
-- Name: rnc_rna_precomputed_is_active_idx; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX rnc_rna_precomputed_is_active_idx ON rnacen.rnc_rna_precomputed USING btree (is_active);


--
-- Name: rnc_rna_precomputed_rna_type_idx; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX rnc_rna_precomputed_rna_type_idx ON rnacen.rnc_rna_precomputed USING btree (rna_type);


--
-- Name: rnc_rna_precomputed_upi_idx; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX rnc_rna_precomputed_upi_idx ON rnacen.rnc_rna_precomputed USING btree (upi, taxid);


--
-- Name: rnc_secondary_structure_layout_models_id_model_source_idx; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX rnc_secondary_structure_layout_models_id_model_source_idx ON rnacen.r2dt_models USING btree (id, model_source);


--
-- Name: rnc_secondary_structure_layout_models_model_source_idx; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX rnc_secondary_structure_layout_models_model_source_idx ON rnacen.r2dt_models USING btree (model_source);


--
-- Name: un__ensembl_pseudogene_regions_region_name; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX un__ensembl_pseudogene_regions_region_name ON rnacen.ensembl_pseudogene_regions USING btree (md5(region_name));


--
-- Name: un_ensembl_karyotype__assembly_id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX un_ensembl_karyotype__assembly_id ON rnacen.ensembl_karyotype USING btree (assembly_id);


--
-- Name: un_pipeline_tracking_scan_urs_model; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX un_pipeline_tracking_scan_urs_model ON rnacen.pipeline_tracking_qa_scan USING btree (urs, model_source);


--
-- Name: un_rnc_related_sequences__source_ac_target_ac_relationship_tyoe; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX un_rnc_related_sequences__source_ac_target_ac_relationship_tyoe ON rnacen.rnc_related_sequences USING btree (source_accession, target_accession, relationship_type);


--
-- Name: un_rnc_sequence_features__upi_taxid_accession_start_stop_featur; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX un_rnc_sequence_features__upi_taxid_accession_start_stop_featur ON rnacen.rnc_sequence_features USING btree (upi, taxid, accession, start, stop, feature_name);


--
-- Name: un_rnc_sequence_regions__region_name_assembly_id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX un_rnc_sequence_regions__region_name_assembly_id ON rnacen.rnc_sequence_regions USING btree (md5(region_name), assembly_id);


--
-- Name: xref$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref$ac" ON rnacen.xref USING btree (ac);


--
-- Name: xref$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref$created" ON rnacen.xref USING btree (created);


--
-- Name: xref$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref$dbid" ON rnacen.xref USING btree (dbid);


--
-- Name: xref$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref$id" ON rnacen.xref USING btree (id);


--
-- Name: xref$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref$last" ON rnacen.xref USING btree (last);


--
-- Name: xref$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref$taxid" ON rnacen.xref USING btree (taxid);


--
-- Name: xref$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref$upi" ON rnacen.xref USING btree (upi);


--
-- Name: xref_p10_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p10_deleted$ac" ON rnacen.xref_p10_deleted USING btree (ac);


--
-- Name: xref_p10_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p10_deleted$created" ON rnacen.xref_p10_deleted USING btree (created);


--
-- Name: xref_p10_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p10_deleted$dbid" ON rnacen.xref_p10_deleted USING btree (dbid);


--
-- Name: xref_p10_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p10_deleted$id" ON rnacen.xref_p10_deleted USING btree (id);


--
-- Name: xref_p10_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p10_deleted$last" ON rnacen.xref_p10_deleted USING btree (last);


--
-- Name: xref_p10_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p10_deleted$taxid" ON rnacen.xref_p10_deleted USING btree (taxid);


--
-- Name: xref_p10_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p10_deleted$upi" ON rnacen.xref_p10_deleted USING btree (upi);


--
-- Name: xref_p10_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p10_not_deleted$ac" ON rnacen.xref_p10_not_deleted USING btree (ac);


--
-- Name: xref_p10_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p10_not_deleted$created" ON rnacen.xref_p10_not_deleted USING btree (created);


--
-- Name: xref_p10_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p10_not_deleted$dbid" ON rnacen.xref_p10_not_deleted USING btree (dbid);


--
-- Name: xref_p10_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p10_not_deleted$id" ON rnacen.xref_p10_not_deleted USING btree (id);


--
-- Name: xref_p10_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p10_not_deleted$last" ON rnacen.xref_p10_not_deleted USING btree (last);


--
-- Name: xref_p10_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p10_not_deleted$taxid" ON rnacen.xref_p10_not_deleted USING btree (taxid);


--
-- Name: xref_p10_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p10_not_deleted$upi" ON rnacen.xref_p10_not_deleted USING btree (upi);


--
-- Name: xref_p11_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p11_deleted$ac" ON rnacen.xref_p11_deleted USING btree (ac);


--
-- Name: xref_p11_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p11_deleted$ac_old" ON rnacen.xref_p11_deleted_old USING btree (ac);


--
-- Name: xref_p11_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p11_deleted$created" ON rnacen.xref_p11_deleted USING btree (created);


--
-- Name: xref_p11_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p11_deleted$created_old" ON rnacen.xref_p11_deleted_old USING btree (created);


--
-- Name: xref_p11_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p11_deleted$dbid" ON rnacen.xref_p11_deleted USING btree (dbid);


--
-- Name: xref_p11_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p11_deleted$dbid_old" ON rnacen.xref_p11_deleted_old USING btree (dbid);


--
-- Name: xref_p11_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p11_deleted$id" ON rnacen.xref_p11_deleted USING btree (id);


--
-- Name: xref_p11_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p11_deleted$id_old" ON rnacen.xref_p11_deleted_old USING btree (id);


--
-- Name: xref_p11_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p11_deleted$last" ON rnacen.xref_p11_deleted USING btree (last);


--
-- Name: xref_p11_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p11_deleted$last_old" ON rnacen.xref_p11_deleted_old USING btree (last);


--
-- Name: xref_p11_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p11_deleted$taxid" ON rnacen.xref_p11_deleted USING btree (taxid);


--
-- Name: xref_p11_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p11_deleted$taxid_old" ON rnacen.xref_p11_deleted_old USING btree (taxid);


--
-- Name: xref_p11_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p11_deleted$upi" ON rnacen.xref_p11_deleted USING btree (upi);


--
-- Name: xref_p11_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p11_deleted$upi_old" ON rnacen.xref_p11_deleted_old USING btree (upi);


--
-- Name: xref_p11_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p11_not_deleted$ac" ON rnacen.xref_p11_not_deleted USING btree (ac);


--
-- Name: xref_p11_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p11_not_deleted$ac_old" ON rnacen.xref_p11_not_deleted_old USING btree (ac);


--
-- Name: xref_p11_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p11_not_deleted$created" ON rnacen.xref_p11_not_deleted USING btree (created);


--
-- Name: xref_p11_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p11_not_deleted$created_old" ON rnacen.xref_p11_not_deleted_old USING btree (created);


--
-- Name: xref_p11_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p11_not_deleted$dbid" ON rnacen.xref_p11_not_deleted USING btree (dbid);


--
-- Name: xref_p11_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p11_not_deleted$dbid_old" ON rnacen.xref_p11_not_deleted_old USING btree (dbid);


--
-- Name: xref_p11_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p11_not_deleted$id" ON rnacen.xref_p11_not_deleted USING btree (id);


--
-- Name: xref_p11_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p11_not_deleted$id_old" ON rnacen.xref_p11_not_deleted_old USING btree (id);


--
-- Name: xref_p11_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p11_not_deleted$last" ON rnacen.xref_p11_not_deleted USING btree (last);


--
-- Name: xref_p11_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p11_not_deleted$last_old" ON rnacen.xref_p11_not_deleted_old USING btree (last);


--
-- Name: xref_p11_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p11_not_deleted$taxid" ON rnacen.xref_p11_not_deleted USING btree (taxid);


--
-- Name: xref_p11_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p11_not_deleted$taxid_old" ON rnacen.xref_p11_not_deleted_old USING btree (taxid);


--
-- Name: xref_p11_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p11_not_deleted$upi" ON rnacen.xref_p11_not_deleted USING btree (upi);


--
-- Name: xref_p11_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p11_not_deleted$upi_old" ON rnacen.xref_p11_not_deleted_old USING btree (upi);


--
-- Name: xref_p12_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p12_deleted$ac" ON rnacen.xref_p12_deleted USING btree (ac);


--
-- Name: xref_p12_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p12_deleted$ac_old" ON rnacen.xref_p12_deleted_old USING btree (ac);


--
-- Name: xref_p12_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p12_deleted$created" ON rnacen.xref_p12_deleted USING btree (created);


--
-- Name: xref_p12_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p12_deleted$created_old" ON rnacen.xref_p12_deleted_old USING btree (created);


--
-- Name: xref_p12_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p12_deleted$dbid" ON rnacen.xref_p12_deleted USING btree (dbid);


--
-- Name: xref_p12_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p12_deleted$dbid_old" ON rnacen.xref_p12_deleted_old USING btree (dbid);


--
-- Name: xref_p12_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p12_deleted$id" ON rnacen.xref_p12_deleted USING btree (id);


--
-- Name: xref_p12_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p12_deleted$id_old" ON rnacen.xref_p12_deleted_old USING btree (id);


--
-- Name: xref_p12_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p12_deleted$last" ON rnacen.xref_p12_deleted USING btree (last);


--
-- Name: xref_p12_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p12_deleted$last_old" ON rnacen.xref_p12_deleted_old USING btree (last);


--
-- Name: xref_p12_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p12_deleted$taxid" ON rnacen.xref_p12_deleted USING btree (taxid);


--
-- Name: xref_p12_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p12_deleted$taxid_old" ON rnacen.xref_p12_deleted_old USING btree (taxid);


--
-- Name: xref_p12_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p12_deleted$upi" ON rnacen.xref_p12_deleted USING btree (upi);


--
-- Name: xref_p12_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p12_deleted$upi_old" ON rnacen.xref_p12_deleted_old USING btree (upi);


--
-- Name: xref_p12_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p12_not_deleted$ac" ON rnacen.xref_p12_not_deleted USING btree (ac);


--
-- Name: xref_p12_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p12_not_deleted$ac_old" ON rnacen.xref_p12_not_deleted_old USING btree (ac);


--
-- Name: xref_p12_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p12_not_deleted$created" ON rnacen.xref_p12_not_deleted USING btree (created);


--
-- Name: xref_p12_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p12_not_deleted$created_old" ON rnacen.xref_p12_not_deleted_old USING btree (created);


--
-- Name: xref_p12_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p12_not_deleted$dbid" ON rnacen.xref_p12_not_deleted USING btree (dbid);


--
-- Name: xref_p12_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p12_not_deleted$dbid_old" ON rnacen.xref_p12_not_deleted_old USING btree (dbid);


--
-- Name: xref_p12_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p12_not_deleted$id" ON rnacen.xref_p12_not_deleted USING btree (id);


--
-- Name: xref_p12_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p12_not_deleted$id_old" ON rnacen.xref_p12_not_deleted_old USING btree (id);


--
-- Name: xref_p12_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p12_not_deleted$last" ON rnacen.xref_p12_not_deleted USING btree (last);


--
-- Name: xref_p12_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p12_not_deleted$last_old" ON rnacen.xref_p12_not_deleted_old USING btree (last);


--
-- Name: xref_p12_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p12_not_deleted$taxid" ON rnacen.xref_p12_not_deleted USING btree (taxid);


--
-- Name: xref_p12_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p12_not_deleted$taxid_old" ON rnacen.xref_p12_not_deleted_old USING btree (taxid);


--
-- Name: xref_p12_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p12_not_deleted$upi" ON rnacen.xref_p12_not_deleted USING btree (upi);


--
-- Name: xref_p12_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p12_not_deleted$upi_old" ON rnacen.xref_p12_not_deleted_old USING btree (upi);


--
-- Name: xref_p13_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p13_deleted$ac" ON rnacen.xref_p13_deleted USING btree (ac);


--
-- Name: xref_p13_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p13_deleted$created" ON rnacen.xref_p13_deleted USING btree (created);


--
-- Name: xref_p13_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p13_deleted$dbid" ON rnacen.xref_p13_deleted USING btree (dbid);


--
-- Name: xref_p13_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p13_deleted$id" ON rnacen.xref_p13_deleted USING btree (id);


--
-- Name: xref_p13_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p13_deleted$last" ON rnacen.xref_p13_deleted USING btree (last);


--
-- Name: xref_p13_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p13_deleted$taxid" ON rnacen.xref_p13_deleted USING btree (taxid);


--
-- Name: xref_p13_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p13_deleted$upi" ON rnacen.xref_p13_deleted USING btree (upi);


--
-- Name: xref_p13_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p13_not_deleted$ac" ON rnacen.xref_p13_not_deleted USING btree (ac);


--
-- Name: xref_p13_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p13_not_deleted$created" ON rnacen.xref_p13_not_deleted USING btree (created);


--
-- Name: xref_p13_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p13_not_deleted$dbid" ON rnacen.xref_p13_not_deleted USING btree (dbid);


--
-- Name: xref_p13_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p13_not_deleted$id" ON rnacen.xref_p13_not_deleted USING btree (id);


--
-- Name: xref_p13_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p13_not_deleted$last" ON rnacen.xref_p13_not_deleted USING btree (last);


--
-- Name: xref_p13_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p13_not_deleted$taxid" ON rnacen.xref_p13_not_deleted USING btree (taxid);


--
-- Name: xref_p13_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p13_not_deleted$upi" ON rnacen.xref_p13_not_deleted USING btree (upi);


--
-- Name: xref_p14_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p14_deleted$ac" ON rnacen.xref_p14_deleted USING btree (ac);


--
-- Name: xref_p14_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p14_deleted$ac_old" ON rnacen.xref_p14_deleted_old USING btree (ac);


--
-- Name: xref_p14_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p14_deleted$created" ON rnacen.xref_p14_deleted USING btree (created);


--
-- Name: xref_p14_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p14_deleted$created_old" ON rnacen.xref_p14_deleted_old USING btree (created);


--
-- Name: xref_p14_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p14_deleted$dbid" ON rnacen.xref_p14_deleted USING btree (dbid);


--
-- Name: xref_p14_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p14_deleted$dbid_old" ON rnacen.xref_p14_deleted_old USING btree (dbid);


--
-- Name: xref_p14_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p14_deleted$id" ON rnacen.xref_p14_deleted USING btree (id);


--
-- Name: xref_p14_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p14_deleted$id_old" ON rnacen.xref_p14_deleted_old USING btree (id);


--
-- Name: xref_p14_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p14_deleted$last" ON rnacen.xref_p14_deleted USING btree (last);


--
-- Name: xref_p14_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p14_deleted$last_old" ON rnacen.xref_p14_deleted_old USING btree (last);


--
-- Name: xref_p14_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p14_deleted$taxid" ON rnacen.xref_p14_deleted USING btree (taxid);


--
-- Name: xref_p14_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p14_deleted$taxid_old" ON rnacen.xref_p14_deleted_old USING btree (taxid);


--
-- Name: xref_p14_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p14_deleted$upi" ON rnacen.xref_p14_deleted USING btree (upi);


--
-- Name: xref_p14_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p14_deleted$upi_old" ON rnacen.xref_p14_deleted_old USING btree (upi);


--
-- Name: xref_p14_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p14_not_deleted$ac" ON rnacen.xref_p14_not_deleted USING btree (ac);


--
-- Name: xref_p14_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p14_not_deleted$ac_old" ON rnacen.xref_p14_not_deleted_old USING btree (ac);


--
-- Name: xref_p14_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p14_not_deleted$created" ON rnacen.xref_p14_not_deleted USING btree (created);


--
-- Name: xref_p14_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p14_not_deleted$created_old" ON rnacen.xref_p14_not_deleted_old USING btree (created);


--
-- Name: xref_p14_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p14_not_deleted$dbid" ON rnacen.xref_p14_not_deleted USING btree (dbid);


--
-- Name: xref_p14_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p14_not_deleted$dbid_old" ON rnacen.xref_p14_not_deleted_old USING btree (dbid);


--
-- Name: xref_p14_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p14_not_deleted$id" ON rnacen.xref_p14_not_deleted USING btree (id);


--
-- Name: xref_p14_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p14_not_deleted$id_old" ON rnacen.xref_p14_not_deleted_old USING btree (id);


--
-- Name: xref_p14_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p14_not_deleted$last" ON rnacen.xref_p14_not_deleted USING btree (last);


--
-- Name: xref_p14_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p14_not_deleted$last_old" ON rnacen.xref_p14_not_deleted_old USING btree (last);


--
-- Name: xref_p14_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p14_not_deleted$taxid" ON rnacen.xref_p14_not_deleted USING btree (taxid);


--
-- Name: xref_p14_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p14_not_deleted$taxid_old" ON rnacen.xref_p14_not_deleted_old USING btree (taxid);


--
-- Name: xref_p14_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p14_not_deleted$upi" ON rnacen.xref_p14_not_deleted USING btree (upi);


--
-- Name: xref_p14_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p14_not_deleted$upi_old" ON rnacen.xref_p14_not_deleted_old USING btree (upi);


--
-- Name: xref_p15_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p15_deleted$ac" ON rnacen.xref_p15_deleted USING btree (ac);


--
-- Name: xref_p15_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p15_deleted$ac_old" ON rnacen.xref_p15_deleted_old USING btree (ac);


--
-- Name: xref_p15_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p15_deleted$created" ON rnacen.xref_p15_deleted USING btree (created);


--
-- Name: xref_p15_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p15_deleted$created_old" ON rnacen.xref_p15_deleted_old USING btree (created);


--
-- Name: xref_p15_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p15_deleted$dbid" ON rnacen.xref_p15_deleted USING btree (dbid);


--
-- Name: xref_p15_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p15_deleted$dbid_old" ON rnacen.xref_p15_deleted_old USING btree (dbid);


--
-- Name: xref_p15_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p15_deleted$id" ON rnacen.xref_p15_deleted USING btree (id);


--
-- Name: xref_p15_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p15_deleted$id_old" ON rnacen.xref_p15_deleted_old USING btree (id);


--
-- Name: xref_p15_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p15_deleted$last" ON rnacen.xref_p15_deleted USING btree (last);


--
-- Name: xref_p15_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p15_deleted$last_old" ON rnacen.xref_p15_deleted_old USING btree (last);


--
-- Name: xref_p15_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p15_deleted$taxid" ON rnacen.xref_p15_deleted USING btree (taxid);


--
-- Name: xref_p15_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p15_deleted$taxid_old" ON rnacen.xref_p15_deleted_old USING btree (taxid);


--
-- Name: xref_p15_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p15_deleted$upi" ON rnacen.xref_p15_deleted USING btree (upi);


--
-- Name: xref_p15_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p15_deleted$upi_old" ON rnacen.xref_p15_deleted_old USING btree (upi);


--
-- Name: xref_p15_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p15_not_deleted$ac" ON rnacen.xref_p15_not_deleted USING btree (ac);


--
-- Name: xref_p15_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p15_not_deleted$ac_old" ON rnacen.xref_p15_not_deleted_old USING btree (ac);


--
-- Name: xref_p15_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p15_not_deleted$created" ON rnacen.xref_p15_not_deleted USING btree (created);


--
-- Name: xref_p15_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p15_not_deleted$created_old" ON rnacen.xref_p15_not_deleted_old USING btree (created);


--
-- Name: xref_p15_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p15_not_deleted$dbid" ON rnacen.xref_p15_not_deleted USING btree (dbid);


--
-- Name: xref_p15_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p15_not_deleted$dbid_old" ON rnacen.xref_p15_not_deleted_old USING btree (dbid);


--
-- Name: xref_p15_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p15_not_deleted$id" ON rnacen.xref_p15_not_deleted USING btree (id);


--
-- Name: xref_p15_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p15_not_deleted$id_old" ON rnacen.xref_p15_not_deleted_old USING btree (id);


--
-- Name: xref_p15_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p15_not_deleted$last" ON rnacen.xref_p15_not_deleted USING btree (last);


--
-- Name: xref_p15_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p15_not_deleted$last_old" ON rnacen.xref_p15_not_deleted_old USING btree (last);


--
-- Name: xref_p15_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p15_not_deleted$taxid" ON rnacen.xref_p15_not_deleted USING btree (taxid);


--
-- Name: xref_p15_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p15_not_deleted$taxid_old" ON rnacen.xref_p15_not_deleted_old USING btree (taxid);


--
-- Name: xref_p15_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p15_not_deleted$upi" ON rnacen.xref_p15_not_deleted USING btree (upi);


--
-- Name: xref_p15_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p15_not_deleted$upi_old" ON rnacen.xref_p15_not_deleted_old USING btree (upi);


--
-- Name: xref_p16_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p16_deleted$ac" ON rnacen.xref_p16_deleted USING btree (ac);


--
-- Name: xref_p16_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p16_deleted$ac_old" ON rnacen.xref_p16_deleted_old USING btree (ac);


--
-- Name: xref_p16_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p16_deleted$created" ON rnacen.xref_p16_deleted USING btree (created);


--
-- Name: xref_p16_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p16_deleted$created_old" ON rnacen.xref_p16_deleted_old USING btree (created);


--
-- Name: xref_p16_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p16_deleted$dbid" ON rnacen.xref_p16_deleted USING btree (dbid);


--
-- Name: xref_p16_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p16_deleted$dbid_old" ON rnacen.xref_p16_deleted_old USING btree (dbid);


--
-- Name: xref_p16_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p16_deleted$id" ON rnacen.xref_p16_deleted USING btree (id);


--
-- Name: xref_p16_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p16_deleted$id_old" ON rnacen.xref_p16_deleted_old USING btree (id);


--
-- Name: xref_p16_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p16_deleted$last" ON rnacen.xref_p16_deleted USING btree (last);


--
-- Name: xref_p16_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p16_deleted$last_old" ON rnacen.xref_p16_deleted_old USING btree (last);


--
-- Name: xref_p16_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p16_deleted$taxid" ON rnacen.xref_p16_deleted USING btree (taxid);


--
-- Name: xref_p16_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p16_deleted$taxid_old" ON rnacen.xref_p16_deleted_old USING btree (taxid);


--
-- Name: xref_p16_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p16_deleted$upi" ON rnacen.xref_p16_deleted USING btree (upi);


--
-- Name: xref_p16_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p16_deleted$upi_old" ON rnacen.xref_p16_deleted_old USING btree (upi);


--
-- Name: xref_p16_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p16_not_deleted$ac" ON rnacen.xref_p16_not_deleted USING btree (ac);


--
-- Name: xref_p16_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p16_not_deleted$ac_old" ON rnacen.xref_p16_not_deleted_old USING btree (ac);


--
-- Name: xref_p16_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p16_not_deleted$created" ON rnacen.xref_p16_not_deleted USING btree (created);


--
-- Name: xref_p16_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p16_not_deleted$created_old" ON rnacen.xref_p16_not_deleted_old USING btree (created);


--
-- Name: xref_p16_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p16_not_deleted$dbid" ON rnacen.xref_p16_not_deleted USING btree (dbid);


--
-- Name: xref_p16_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p16_not_deleted$dbid_old" ON rnacen.xref_p16_not_deleted_old USING btree (dbid);


--
-- Name: xref_p16_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p16_not_deleted$id" ON rnacen.xref_p16_not_deleted USING btree (id);


--
-- Name: xref_p16_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p16_not_deleted$id_old" ON rnacen.xref_p16_not_deleted_old USING btree (id);


--
-- Name: xref_p16_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p16_not_deleted$last" ON rnacen.xref_p16_not_deleted USING btree (last);


--
-- Name: xref_p16_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p16_not_deleted$last_old" ON rnacen.xref_p16_not_deleted_old USING btree (last);


--
-- Name: xref_p16_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p16_not_deleted$taxid" ON rnacen.xref_p16_not_deleted USING btree (taxid);


--
-- Name: xref_p16_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p16_not_deleted$taxid_old" ON rnacen.xref_p16_not_deleted_old USING btree (taxid);


--
-- Name: xref_p16_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p16_not_deleted$upi" ON rnacen.xref_p16_not_deleted USING btree (upi);


--
-- Name: xref_p16_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p16_not_deleted$upi_old" ON rnacen.xref_p16_not_deleted_old USING btree (upi);


--
-- Name: xref_p17_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p17_deleted$ac" ON rnacen.xref_p17_deleted USING btree (ac);


--
-- Name: xref_p17_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p17_deleted$ac_old" ON rnacen.xref_p17_deleted_old USING btree (ac);


--
-- Name: xref_p17_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p17_deleted$created" ON rnacen.xref_p17_deleted USING btree (created);


--
-- Name: xref_p17_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p17_deleted$created_old" ON rnacen.xref_p17_deleted_old USING btree (created);


--
-- Name: xref_p17_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p17_deleted$dbid" ON rnacen.xref_p17_deleted USING btree (dbid);


--
-- Name: xref_p17_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p17_deleted$dbid_old" ON rnacen.xref_p17_deleted_old USING btree (dbid);


--
-- Name: xref_p17_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p17_deleted$id" ON rnacen.xref_p17_deleted USING btree (id);


--
-- Name: xref_p17_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p17_deleted$id_old" ON rnacen.xref_p17_deleted_old USING btree (id);


--
-- Name: xref_p17_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p17_deleted$last" ON rnacen.xref_p17_deleted USING btree (last);


--
-- Name: xref_p17_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p17_deleted$last_old" ON rnacen.xref_p17_deleted_old USING btree (last);


--
-- Name: xref_p17_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p17_deleted$taxid" ON rnacen.xref_p17_deleted USING btree (taxid);


--
-- Name: xref_p17_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p17_deleted$taxid_old" ON rnacen.xref_p17_deleted_old USING btree (taxid);


--
-- Name: xref_p17_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p17_deleted$upi" ON rnacen.xref_p17_deleted USING btree (upi);


--
-- Name: xref_p17_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p17_deleted$upi_old" ON rnacen.xref_p17_deleted_old USING btree (upi);


--
-- Name: xref_p17_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p17_not_deleted$ac" ON rnacen.xref_p17_not_deleted USING btree (ac);


--
-- Name: xref_p17_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p17_not_deleted$ac_old" ON rnacen.xref_p17_not_deleted_old USING btree (ac);


--
-- Name: xref_p17_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p17_not_deleted$created" ON rnacen.xref_p17_not_deleted USING btree (created);


--
-- Name: xref_p17_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p17_not_deleted$created_old" ON rnacen.xref_p17_not_deleted_old USING btree (created);


--
-- Name: xref_p17_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p17_not_deleted$dbid" ON rnacen.xref_p17_not_deleted USING btree (dbid);


--
-- Name: xref_p17_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p17_not_deleted$dbid_old" ON rnacen.xref_p17_not_deleted_old USING btree (dbid);


--
-- Name: xref_p17_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p17_not_deleted$id" ON rnacen.xref_p17_not_deleted USING btree (id);


--
-- Name: xref_p17_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p17_not_deleted$id_old" ON rnacen.xref_p17_not_deleted_old USING btree (id);


--
-- Name: xref_p17_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p17_not_deleted$last" ON rnacen.xref_p17_not_deleted USING btree (last);


--
-- Name: xref_p17_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p17_not_deleted$last_old" ON rnacen.xref_p17_not_deleted_old USING btree (last);


--
-- Name: xref_p17_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p17_not_deleted$taxid" ON rnacen.xref_p17_not_deleted USING btree (taxid);


--
-- Name: xref_p17_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p17_not_deleted$taxid_old" ON rnacen.xref_p17_not_deleted_old USING btree (taxid);


--
-- Name: xref_p17_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p17_not_deleted$upi" ON rnacen.xref_p17_not_deleted USING btree (upi);


--
-- Name: xref_p17_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p17_not_deleted$upi_old" ON rnacen.xref_p17_not_deleted_old USING btree (upi);


--
-- Name: xref_p18_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p18_deleted$ac" ON rnacen.xref_p18_deleted USING btree (ac);


--
-- Name: xref_p18_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p18_deleted$ac_old" ON rnacen.xref_p18_deleted_old USING btree (ac);


--
-- Name: xref_p18_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p18_deleted$created" ON rnacen.xref_p18_deleted USING btree (created);


--
-- Name: xref_p18_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p18_deleted$created_old" ON rnacen.xref_p18_deleted_old USING btree (created);


--
-- Name: xref_p18_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p18_deleted$dbid" ON rnacen.xref_p18_deleted USING btree (dbid);


--
-- Name: xref_p18_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p18_deleted$dbid_old" ON rnacen.xref_p18_deleted_old USING btree (dbid);


--
-- Name: xref_p18_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p18_deleted$id" ON rnacen.xref_p18_deleted USING btree (id);


--
-- Name: xref_p18_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p18_deleted$id_old" ON rnacen.xref_p18_deleted_old USING btree (id);


--
-- Name: xref_p18_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p18_deleted$last" ON rnacen.xref_p18_deleted USING btree (last);


--
-- Name: xref_p18_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p18_deleted$last_old" ON rnacen.xref_p18_deleted_old USING btree (last);


--
-- Name: xref_p18_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p18_deleted$taxid" ON rnacen.xref_p18_deleted USING btree (taxid);


--
-- Name: xref_p18_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p18_deleted$taxid_old" ON rnacen.xref_p18_deleted_old USING btree (taxid);


--
-- Name: xref_p18_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p18_deleted$upi" ON rnacen.xref_p18_deleted USING btree (upi);


--
-- Name: xref_p18_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p18_deleted$upi_old" ON rnacen.xref_p18_deleted_old USING btree (upi);


--
-- Name: xref_p18_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p18_not_deleted$ac" ON rnacen.xref_p18_not_deleted USING btree (ac);


--
-- Name: xref_p18_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p18_not_deleted$ac_old" ON rnacen.xref_p18_not_deleted_old USING btree (ac);


--
-- Name: xref_p18_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p18_not_deleted$created" ON rnacen.xref_p18_not_deleted USING btree (created);


--
-- Name: xref_p18_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p18_not_deleted$created_old" ON rnacen.xref_p18_not_deleted_old USING btree (created);


--
-- Name: xref_p18_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p18_not_deleted$dbid" ON rnacen.xref_p18_not_deleted USING btree (dbid);


--
-- Name: xref_p18_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p18_not_deleted$dbid_old" ON rnacen.xref_p18_not_deleted_old USING btree (dbid);


--
-- Name: xref_p18_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p18_not_deleted$id" ON rnacen.xref_p18_not_deleted USING btree (id);


--
-- Name: xref_p18_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p18_not_deleted$id_old" ON rnacen.xref_p18_not_deleted_old USING btree (id);


--
-- Name: xref_p18_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p18_not_deleted$last" ON rnacen.xref_p18_not_deleted USING btree (last);


--
-- Name: xref_p18_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p18_not_deleted$last_old" ON rnacen.xref_p18_not_deleted_old USING btree (last);


--
-- Name: xref_p18_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p18_not_deleted$taxid" ON rnacen.xref_p18_not_deleted USING btree (taxid);


--
-- Name: xref_p18_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p18_not_deleted$taxid_old" ON rnacen.xref_p18_not_deleted_old USING btree (taxid);


--
-- Name: xref_p18_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p18_not_deleted$upi" ON rnacen.xref_p18_not_deleted USING btree (upi);


--
-- Name: xref_p18_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p18_not_deleted$upi_old" ON rnacen.xref_p18_not_deleted_old USING btree (upi);


--
-- Name: xref_p19_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p19_deleted$ac" ON rnacen.xref_p19_deleted USING btree (ac);


--
-- Name: xref_p19_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p19_deleted$created" ON rnacen.xref_p19_deleted USING btree (created);


--
-- Name: xref_p19_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p19_deleted$dbid" ON rnacen.xref_p19_deleted USING btree (dbid);


--
-- Name: xref_p19_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p19_deleted$id" ON rnacen.xref_p19_deleted USING btree (id);


--
-- Name: xref_p19_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p19_deleted$last" ON rnacen.xref_p19_deleted USING btree (last);


--
-- Name: xref_p19_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p19_deleted$taxid" ON rnacen.xref_p19_deleted USING btree (taxid);


--
-- Name: xref_p19_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p19_deleted$upi" ON rnacen.xref_p19_deleted USING btree (upi);


--
-- Name: xref_p19_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p19_not_deleted$ac" ON rnacen.xref_p19_not_deleted USING btree (ac);


--
-- Name: xref_p19_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p19_not_deleted$created" ON rnacen.xref_p19_not_deleted USING btree (created);


--
-- Name: xref_p19_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p19_not_deleted$dbid" ON rnacen.xref_p19_not_deleted USING btree (dbid);


--
-- Name: xref_p19_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p19_not_deleted$id" ON rnacen.xref_p19_not_deleted USING btree (id);


--
-- Name: xref_p19_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p19_not_deleted$last" ON rnacen.xref_p19_not_deleted USING btree (last);


--
-- Name: xref_p19_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p19_not_deleted$taxid" ON rnacen.xref_p19_not_deleted USING btree (taxid);


--
-- Name: xref_p19_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p19_not_deleted$upi" ON rnacen.xref_p19_not_deleted USING btree (upi);


--
-- Name: xref_p1_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p1_deleted$ac" ON rnacen.xref_p1_deleted USING btree (ac);


--
-- Name: xref_p1_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p1_deleted$ac_old" ON rnacen.xref_p1_deleted_old USING btree (ac);


--
-- Name: xref_p1_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p1_deleted$created" ON rnacen.xref_p1_deleted USING btree (created);


--
-- Name: xref_p1_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p1_deleted$created_old" ON rnacen.xref_p1_deleted_old USING btree (created);


--
-- Name: xref_p1_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p1_deleted$dbid" ON rnacen.xref_p1_deleted USING btree (dbid);


--
-- Name: xref_p1_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p1_deleted$dbid_old" ON rnacen.xref_p1_deleted_old USING btree (dbid);


--
-- Name: xref_p1_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p1_deleted$id" ON rnacen.xref_p1_deleted USING btree (id);


--
-- Name: xref_p1_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p1_deleted$id_old" ON rnacen.xref_p1_deleted_old USING btree (id);


--
-- Name: xref_p1_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p1_deleted$last" ON rnacen.xref_p1_deleted USING btree (last);


--
-- Name: xref_p1_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p1_deleted$last_old" ON rnacen.xref_p1_deleted_old USING btree (last);


--
-- Name: xref_p1_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p1_deleted$taxid" ON rnacen.xref_p1_deleted USING btree (taxid);


--
-- Name: xref_p1_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p1_deleted$taxid_old" ON rnacen.xref_p1_deleted_old USING btree (taxid);


--
-- Name: xref_p1_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p1_deleted$upi" ON rnacen.xref_p1_deleted USING btree (upi);


--
-- Name: xref_p1_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p1_deleted$upi_old" ON rnacen.xref_p1_deleted_old USING btree (upi);


--
-- Name: xref_p1_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p1_not_deleted$ac" ON rnacen.xref_p1_not_deleted USING btree (ac);


--
-- Name: xref_p1_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p1_not_deleted$ac_old" ON rnacen.xref_p1_not_deleted_old USING btree (ac);


--
-- Name: xref_p1_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p1_not_deleted$created" ON rnacen.xref_p1_not_deleted USING btree (created);


--
-- Name: xref_p1_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p1_not_deleted$created_old" ON rnacen.xref_p1_not_deleted_old USING btree (created);


--
-- Name: xref_p1_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p1_not_deleted$dbid" ON rnacen.xref_p1_not_deleted USING btree (dbid);


--
-- Name: xref_p1_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p1_not_deleted$dbid_old" ON rnacen.xref_p1_not_deleted_old USING btree (dbid);


--
-- Name: xref_p1_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p1_not_deleted$id" ON rnacen.xref_p1_not_deleted USING btree (id);


--
-- Name: xref_p1_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p1_not_deleted$id_old" ON rnacen.xref_p1_not_deleted_old USING btree (id);


--
-- Name: xref_p1_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p1_not_deleted$last" ON rnacen.xref_p1_not_deleted USING btree (last);


--
-- Name: xref_p1_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p1_not_deleted$last_old" ON rnacen.xref_p1_not_deleted_old USING btree (last);


--
-- Name: xref_p1_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p1_not_deleted$taxid" ON rnacen.xref_p1_not_deleted USING btree (taxid);


--
-- Name: xref_p1_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p1_not_deleted$taxid_old" ON rnacen.xref_p1_not_deleted_old USING btree (taxid);


--
-- Name: xref_p1_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p1_not_deleted$upi" ON rnacen.xref_p1_not_deleted USING btree (upi);


--
-- Name: xref_p1_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p1_not_deleted$upi_old" ON rnacen.xref_p1_not_deleted_old USING btree (upi);


--
-- Name: xref_p20_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p20_deleted$ac" ON rnacen.xref_p20_deleted USING btree (ac);


--
-- Name: xref_p20_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p20_deleted$ac_old" ON rnacen.xref_p20_deleted_old USING btree (ac);


--
-- Name: xref_p20_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p20_deleted$created" ON rnacen.xref_p20_deleted USING btree (created);


--
-- Name: xref_p20_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p20_deleted$created_old" ON rnacen.xref_p20_deleted_old USING btree (created);


--
-- Name: xref_p20_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p20_deleted$dbid" ON rnacen.xref_p20_deleted USING btree (dbid);


--
-- Name: xref_p20_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p20_deleted$dbid_old" ON rnacen.xref_p20_deleted_old USING btree (dbid);


--
-- Name: xref_p20_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p20_deleted$id" ON rnacen.xref_p20_deleted USING btree (id);


--
-- Name: xref_p20_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p20_deleted$id_old" ON rnacen.xref_p20_deleted_old USING btree (id);


--
-- Name: xref_p20_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p20_deleted$last" ON rnacen.xref_p20_deleted USING btree (last);


--
-- Name: xref_p20_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p20_deleted$last_old" ON rnacen.xref_p20_deleted_old USING btree (last);


--
-- Name: xref_p20_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p20_deleted$taxid" ON rnacen.xref_p20_deleted USING btree (taxid);


--
-- Name: xref_p20_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p20_deleted$taxid_old" ON rnacen.xref_p20_deleted_old USING btree (taxid);


--
-- Name: xref_p20_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p20_deleted$upi" ON rnacen.xref_p20_deleted USING btree (upi);


--
-- Name: xref_p20_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p20_deleted$upi_old" ON rnacen.xref_p20_deleted_old USING btree (upi);


--
-- Name: xref_p20_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p20_not_deleted$ac" ON rnacen.xref_p20_not_deleted USING btree (ac);


--
-- Name: xref_p20_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p20_not_deleted$ac_old" ON rnacen.xref_p20_not_deleted_old USING btree (ac);


--
-- Name: xref_p20_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p20_not_deleted$created" ON rnacen.xref_p20_not_deleted USING btree (created);


--
-- Name: xref_p20_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p20_not_deleted$created_old" ON rnacen.xref_p20_not_deleted_old USING btree (created);


--
-- Name: xref_p20_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p20_not_deleted$dbid" ON rnacen.xref_p20_not_deleted USING btree (dbid);


--
-- Name: xref_p20_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p20_not_deleted$dbid_old" ON rnacen.xref_p20_not_deleted_old USING btree (dbid);


--
-- Name: xref_p20_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p20_not_deleted$id" ON rnacen.xref_p20_not_deleted USING btree (id);


--
-- Name: xref_p20_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p20_not_deleted$id_old" ON rnacen.xref_p20_not_deleted_old USING btree (id);


--
-- Name: xref_p20_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p20_not_deleted$last" ON rnacen.xref_p20_not_deleted USING btree (last);


--
-- Name: xref_p20_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p20_not_deleted$last_old" ON rnacen.xref_p20_not_deleted_old USING btree (last);


--
-- Name: xref_p20_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p20_not_deleted$taxid" ON rnacen.xref_p20_not_deleted USING btree (taxid);


--
-- Name: xref_p20_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p20_not_deleted$taxid_old" ON rnacen.xref_p20_not_deleted_old USING btree (taxid);


--
-- Name: xref_p20_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p20_not_deleted$upi" ON rnacen.xref_p20_not_deleted USING btree (upi);


--
-- Name: xref_p20_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p20_not_deleted$upi_old" ON rnacen.xref_p20_not_deleted_old USING btree (upi);


--
-- Name: xref_p21_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p21_deleted$ac" ON rnacen.xref_p21_deleted USING btree (ac);


--
-- Name: xref_p21_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p21_deleted$created" ON rnacen.xref_p21_deleted USING btree (created);


--
-- Name: xref_p21_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p21_deleted$dbid" ON rnacen.xref_p21_deleted USING btree (dbid);


--
-- Name: xref_p21_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p21_deleted$last" ON rnacen.xref_p21_deleted USING btree (last);


--
-- Name: xref_p21_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p21_deleted$taxid" ON rnacen.xref_p21_deleted USING btree (taxid);


--
-- Name: xref_p21_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p21_deleted$upi" ON rnacen.xref_p21_deleted USING btree (upi);


--
-- Name: xref_p21_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p21_not_deleted$ac" ON rnacen.xref_p21_not_deleted USING btree (ac);


--
-- Name: xref_p21_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p21_not_deleted$created" ON rnacen.xref_p21_not_deleted USING btree (created);


--
-- Name: xref_p21_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p21_not_deleted$dbid" ON rnacen.xref_p21_not_deleted USING btree (dbid);


--
-- Name: xref_p21_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p21_not_deleted$last" ON rnacen.xref_p21_not_deleted USING btree (last);


--
-- Name: xref_p21_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p21_not_deleted$taxid" ON rnacen.xref_p21_not_deleted USING btree (taxid);


--
-- Name: xref_p21_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p21_not_deleted$upi" ON rnacen.xref_p21_not_deleted USING btree (upi);


--
-- Name: xref_p22_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p22_deleted$ac" ON rnacen.xref_p22_deleted USING btree (ac);


--
-- Name: xref_p22_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p22_deleted$created" ON rnacen.xref_p22_deleted USING btree (created);


--
-- Name: xref_p22_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p22_deleted$dbid" ON rnacen.xref_p22_deleted USING btree (dbid);


--
-- Name: xref_p22_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p22_deleted$id" ON rnacen.xref_p22_deleted USING btree (id);


--
-- Name: xref_p22_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p22_deleted$last" ON rnacen.xref_p22_deleted USING btree (last);


--
-- Name: xref_p22_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p22_deleted$taxid" ON rnacen.xref_p22_deleted USING btree (taxid);


--
-- Name: xref_p22_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p22_deleted$upi" ON rnacen.xref_p22_deleted USING btree (upi);


--
-- Name: xref_p22_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p22_not_deleted$ac" ON rnacen.xref_p22_not_deleted USING btree (ac);


--
-- Name: xref_p22_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p22_not_deleted$created" ON rnacen.xref_p22_not_deleted USING btree (created);


--
-- Name: xref_p22_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p22_not_deleted$dbid" ON rnacen.xref_p22_not_deleted USING btree (dbid);


--
-- Name: xref_p22_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p22_not_deleted$id" ON rnacen.xref_p22_not_deleted USING btree (id);


--
-- Name: xref_p22_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p22_not_deleted$last" ON rnacen.xref_p22_not_deleted USING btree (last);


--
-- Name: xref_p22_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p22_not_deleted$taxid" ON rnacen.xref_p22_not_deleted USING btree (taxid);


--
-- Name: xref_p22_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p22_not_deleted$upi" ON rnacen.xref_p22_not_deleted USING btree (upi);


--
-- Name: xref_p23_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p23_deleted$ac" ON rnacen.xref_p23_deleted USING btree (ac);


--
-- Name: xref_p23_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p23_deleted$ac_old" ON rnacen.xref_p23_deleted_old USING btree (ac);


--
-- Name: xref_p23_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p23_deleted$created" ON rnacen.xref_p23_deleted USING btree (created);


--
-- Name: xref_p23_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p23_deleted$created_old" ON rnacen.xref_p23_deleted_old USING btree (created);


--
-- Name: xref_p23_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p23_deleted$dbid" ON rnacen.xref_p23_deleted USING btree (dbid);


--
-- Name: xref_p23_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p23_deleted$dbid_old" ON rnacen.xref_p23_deleted_old USING btree (dbid);


--
-- Name: xref_p23_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p23_deleted$id" ON rnacen.xref_p23_deleted USING btree (id);


--
-- Name: xref_p23_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p23_deleted$id_old" ON rnacen.xref_p23_deleted_old USING btree (id);


--
-- Name: xref_p23_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p23_deleted$last" ON rnacen.xref_p23_deleted USING btree (last);


--
-- Name: xref_p23_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p23_deleted$last_old" ON rnacen.xref_p23_deleted_old USING btree (last);


--
-- Name: xref_p23_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p23_deleted$taxid" ON rnacen.xref_p23_deleted USING btree (taxid);


--
-- Name: xref_p23_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p23_deleted$taxid_old" ON rnacen.xref_p23_deleted_old USING btree (taxid);


--
-- Name: xref_p23_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p23_deleted$upi" ON rnacen.xref_p23_deleted USING btree (upi);


--
-- Name: xref_p23_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p23_deleted$upi_old" ON rnacen.xref_p23_deleted_old USING btree (upi);


--
-- Name: xref_p23_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p23_not_deleted$ac" ON rnacen.xref_p23_not_deleted USING btree (ac);


--
-- Name: xref_p23_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p23_not_deleted$ac_old" ON rnacen.xref_p23_not_deleted_old USING btree (ac);


--
-- Name: xref_p23_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p23_not_deleted$created" ON rnacen.xref_p23_not_deleted USING btree (created);


--
-- Name: xref_p23_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p23_not_deleted$created_old" ON rnacen.xref_p23_not_deleted_old USING btree (created);


--
-- Name: xref_p23_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p23_not_deleted$dbid" ON rnacen.xref_p23_not_deleted USING btree (dbid);


--
-- Name: xref_p23_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p23_not_deleted$dbid_old" ON rnacen.xref_p23_not_deleted_old USING btree (dbid);


--
-- Name: xref_p23_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p23_not_deleted$id" ON rnacen.xref_p23_not_deleted USING btree (id);


--
-- Name: xref_p23_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p23_not_deleted$id_old" ON rnacen.xref_p23_not_deleted_old USING btree (id);


--
-- Name: xref_p23_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p23_not_deleted$last" ON rnacen.xref_p23_not_deleted USING btree (last);


--
-- Name: xref_p23_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p23_not_deleted$last_old" ON rnacen.xref_p23_not_deleted_old USING btree (last);


--
-- Name: xref_p23_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p23_not_deleted$taxid" ON rnacen.xref_p23_not_deleted USING btree (taxid);


--
-- Name: xref_p23_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p23_not_deleted$taxid_old" ON rnacen.xref_p23_not_deleted_old USING btree (taxid);


--
-- Name: xref_p23_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p23_not_deleted$upi" ON rnacen.xref_p23_not_deleted USING btree (upi);


--
-- Name: xref_p23_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p23_not_deleted$upi_old" ON rnacen.xref_p23_not_deleted_old USING btree (upi);


--
-- Name: xref_p24_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p24_deleted$ac" ON rnacen.xref_p24_deleted USING btree (ac);


--
-- Name: xref_p24_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p24_deleted$ac_old" ON rnacen.xref_p24_deleted_old USING btree (ac);


--
-- Name: xref_p24_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p24_deleted$created" ON rnacen.xref_p24_deleted USING btree (created);


--
-- Name: xref_p24_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p24_deleted$created_old" ON rnacen.xref_p24_deleted_old USING btree (created);


--
-- Name: xref_p24_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p24_deleted$dbid" ON rnacen.xref_p24_deleted USING btree (dbid);


--
-- Name: xref_p24_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p24_deleted$dbid_old" ON rnacen.xref_p24_deleted_old USING btree (dbid);


--
-- Name: xref_p24_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p24_deleted$id" ON rnacen.xref_p24_deleted USING btree (id);


--
-- Name: xref_p24_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p24_deleted$id_old" ON rnacen.xref_p24_deleted_old USING btree (id);


--
-- Name: xref_p24_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p24_deleted$last" ON rnacen.xref_p24_deleted USING btree (last);


--
-- Name: xref_p24_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p24_deleted$last_old" ON rnacen.xref_p24_deleted_old USING btree (last);


--
-- Name: xref_p24_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p24_deleted$taxid" ON rnacen.xref_p24_deleted USING btree (taxid);


--
-- Name: xref_p24_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p24_deleted$taxid_old" ON rnacen.xref_p24_deleted_old USING btree (taxid);


--
-- Name: xref_p24_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p24_deleted$upi" ON rnacen.xref_p24_deleted USING btree (upi);


--
-- Name: xref_p24_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p24_deleted$upi_old" ON rnacen.xref_p24_deleted_old USING btree (upi);


--
-- Name: xref_p24_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p24_not_deleted$ac" ON rnacen.xref_p24_not_deleted USING btree (ac);


--
-- Name: xref_p24_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p24_not_deleted$ac_old" ON rnacen.xref_p24_not_deleted_old USING btree (ac);


--
-- Name: xref_p24_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p24_not_deleted$created" ON rnacen.xref_p24_not_deleted USING btree (created);


--
-- Name: xref_p24_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p24_not_deleted$created_old" ON rnacen.xref_p24_not_deleted_old USING btree (created);


--
-- Name: xref_p24_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p24_not_deleted$dbid" ON rnacen.xref_p24_not_deleted USING btree (dbid);


--
-- Name: xref_p24_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p24_not_deleted$dbid_old" ON rnacen.xref_p24_not_deleted_old USING btree (dbid);


--
-- Name: xref_p24_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p24_not_deleted$id" ON rnacen.xref_p24_not_deleted USING btree (id);


--
-- Name: xref_p24_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p24_not_deleted$id_old" ON rnacen.xref_p24_not_deleted_old USING btree (id);


--
-- Name: xref_p24_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p24_not_deleted$last" ON rnacen.xref_p24_not_deleted USING btree (last);


--
-- Name: xref_p24_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p24_not_deleted$last_old" ON rnacen.xref_p24_not_deleted_old USING btree (last);


--
-- Name: xref_p24_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p24_not_deleted$taxid" ON rnacen.xref_p24_not_deleted USING btree (taxid);


--
-- Name: xref_p24_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p24_not_deleted$taxid_old" ON rnacen.xref_p24_not_deleted_old USING btree (taxid);


--
-- Name: xref_p24_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p24_not_deleted$upi" ON rnacen.xref_p24_not_deleted USING btree (upi);


--
-- Name: xref_p24_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p24_not_deleted$upi_old" ON rnacen.xref_p24_not_deleted_old USING btree (upi);


--
-- Name: xref_p25_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p25_deleted$ac" ON rnacen.xref_p25_deleted USING btree (ac);


--
-- Name: xref_p25_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p25_deleted$ac_old" ON rnacen.xref_p25_deleted_old USING btree (ac);


--
-- Name: xref_p25_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p25_deleted$created" ON rnacen.xref_p25_deleted USING btree (created);


--
-- Name: xref_p25_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p25_deleted$created_old" ON rnacen.xref_p25_deleted_old USING btree (created);


--
-- Name: xref_p25_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p25_deleted$dbid" ON rnacen.xref_p25_deleted USING btree (dbid);


--
-- Name: xref_p25_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p25_deleted$dbid_old" ON rnacen.xref_p25_deleted_old USING btree (dbid);


--
-- Name: xref_p25_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p25_deleted$id" ON rnacen.xref_p25_deleted USING btree (id);


--
-- Name: xref_p25_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p25_deleted$id_old" ON rnacen.xref_p25_deleted_old USING btree (id);


--
-- Name: xref_p25_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p25_deleted$last" ON rnacen.xref_p25_deleted USING btree (last);


--
-- Name: xref_p25_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p25_deleted$last_old" ON rnacen.xref_p25_deleted_old USING btree (last);


--
-- Name: xref_p25_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p25_deleted$taxid" ON rnacen.xref_p25_deleted USING btree (taxid);


--
-- Name: xref_p25_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p25_deleted$taxid_old" ON rnacen.xref_p25_deleted_old USING btree (taxid);


--
-- Name: xref_p25_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p25_deleted$upi" ON rnacen.xref_p25_deleted USING btree (upi);


--
-- Name: xref_p25_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p25_deleted$upi_old" ON rnacen.xref_p25_deleted_old USING btree (upi);


--
-- Name: xref_p25_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p25_not_deleted$ac" ON rnacen.xref_p25_not_deleted USING btree (ac);


--
-- Name: xref_p25_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p25_not_deleted$ac_old" ON rnacen.xref_p25_not_deleted_old USING btree (ac);


--
-- Name: xref_p25_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p25_not_deleted$created" ON rnacen.xref_p25_not_deleted USING btree (created);


--
-- Name: xref_p25_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p25_not_deleted$created_old" ON rnacen.xref_p25_not_deleted_old USING btree (created);


--
-- Name: xref_p25_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p25_not_deleted$dbid" ON rnacen.xref_p25_not_deleted USING btree (dbid);


--
-- Name: xref_p25_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p25_not_deleted$dbid_old" ON rnacen.xref_p25_not_deleted_old USING btree (dbid);


--
-- Name: xref_p25_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p25_not_deleted$id" ON rnacen.xref_p25_not_deleted USING btree (id);


--
-- Name: xref_p25_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p25_not_deleted$id_old" ON rnacen.xref_p25_not_deleted_old USING btree (id);


--
-- Name: xref_p25_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p25_not_deleted$last" ON rnacen.xref_p25_not_deleted USING btree (last);


--
-- Name: xref_p25_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p25_not_deleted$last_old" ON rnacen.xref_p25_not_deleted_old USING btree (last);


--
-- Name: xref_p25_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p25_not_deleted$taxid" ON rnacen.xref_p25_not_deleted USING btree (taxid);


--
-- Name: xref_p25_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p25_not_deleted$taxid_old" ON rnacen.xref_p25_not_deleted_old USING btree (taxid);


--
-- Name: xref_p25_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p25_not_deleted$upi" ON rnacen.xref_p25_not_deleted USING btree (upi);


--
-- Name: xref_p25_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p25_not_deleted$upi_old" ON rnacen.xref_p25_not_deleted_old USING btree (upi);


--
-- Name: xref_p26_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p26_deleted$ac" ON rnacen.xref_p26_deleted USING btree (ac);


--
-- Name: xref_p26_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p26_deleted$ac_old" ON rnacen.xref_p26_deleted_old USING btree (ac);


--
-- Name: xref_p26_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p26_deleted$created" ON rnacen.xref_p26_deleted USING btree (created);


--
-- Name: xref_p26_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p26_deleted$created_old" ON rnacen.xref_p26_deleted_old USING btree (created);


--
-- Name: xref_p26_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p26_deleted$dbid" ON rnacen.xref_p26_deleted USING btree (dbid);


--
-- Name: xref_p26_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p26_deleted$dbid_old" ON rnacen.xref_p26_deleted_old USING btree (dbid);


--
-- Name: xref_p26_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p26_deleted$id" ON rnacen.xref_p26_deleted USING btree (id);


--
-- Name: xref_p26_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p26_deleted$id_old" ON rnacen.xref_p26_deleted_old USING btree (id);


--
-- Name: xref_p26_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p26_deleted$last" ON rnacen.xref_p26_deleted USING btree (last);


--
-- Name: xref_p26_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p26_deleted$last_old" ON rnacen.xref_p26_deleted_old USING btree (last);


--
-- Name: xref_p26_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p26_deleted$taxid" ON rnacen.xref_p26_deleted USING btree (taxid);


--
-- Name: xref_p26_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p26_deleted$taxid_old" ON rnacen.xref_p26_deleted_old USING btree (taxid);


--
-- Name: xref_p26_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p26_deleted$upi" ON rnacen.xref_p26_deleted USING btree (upi);


--
-- Name: xref_p26_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p26_deleted$upi_old" ON rnacen.xref_p26_deleted_old USING btree (upi);


--
-- Name: xref_p26_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p26_not_deleted$ac" ON rnacen.xref_p26_not_deleted USING btree (ac);


--
-- Name: xref_p26_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p26_not_deleted$ac_old" ON rnacen.xref_p26_not_deleted_old USING btree (ac);


--
-- Name: xref_p26_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p26_not_deleted$created" ON rnacen.xref_p26_not_deleted USING btree (created);


--
-- Name: xref_p26_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p26_not_deleted$created_old" ON rnacen.xref_p26_not_deleted_old USING btree (created);


--
-- Name: xref_p26_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p26_not_deleted$dbid" ON rnacen.xref_p26_not_deleted USING btree (dbid);


--
-- Name: xref_p26_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p26_not_deleted$dbid_old" ON rnacen.xref_p26_not_deleted_old USING btree (dbid);


--
-- Name: xref_p26_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p26_not_deleted$id" ON rnacen.xref_p26_not_deleted USING btree (id);


--
-- Name: xref_p26_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p26_not_deleted$id_old" ON rnacen.xref_p26_not_deleted_old USING btree (id);


--
-- Name: xref_p26_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p26_not_deleted$last" ON rnacen.xref_p26_not_deleted USING btree (last);


--
-- Name: xref_p26_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p26_not_deleted$last_old" ON rnacen.xref_p26_not_deleted_old USING btree (last);


--
-- Name: xref_p26_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p26_not_deleted$taxid" ON rnacen.xref_p26_not_deleted USING btree (taxid);


--
-- Name: xref_p26_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p26_not_deleted$taxid_old" ON rnacen.xref_p26_not_deleted_old USING btree (taxid);


--
-- Name: xref_p26_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p26_not_deleted$upi" ON rnacen.xref_p26_not_deleted USING btree (upi);


--
-- Name: xref_p26_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p26_not_deleted$upi_old" ON rnacen.xref_p26_not_deleted_old USING btree (upi);


--
-- Name: xref_p27_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p27_deleted$ac" ON rnacen.xref_p27_deleted USING btree (ac);


--
-- Name: xref_p27_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p27_deleted$created" ON rnacen.xref_p27_deleted USING btree (created);


--
-- Name: xref_p27_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p27_deleted$dbid" ON rnacen.xref_p27_deleted USING btree (dbid);


--
-- Name: xref_p27_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p27_deleted$id" ON rnacen.xref_p27_deleted USING btree (id);


--
-- Name: xref_p27_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p27_deleted$last" ON rnacen.xref_p27_deleted USING btree (last);


--
-- Name: xref_p27_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p27_deleted$taxid" ON rnacen.xref_p27_deleted USING btree (taxid);


--
-- Name: xref_p27_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p27_deleted$upi" ON rnacen.xref_p27_deleted USING btree (upi);


--
-- Name: xref_p27_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p27_not_deleted$ac" ON rnacen.xref_p27_not_deleted USING btree (ac);


--
-- Name: xref_p27_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p27_not_deleted$created" ON rnacen.xref_p27_not_deleted USING btree (created);


--
-- Name: xref_p27_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p27_not_deleted$dbid" ON rnacen.xref_p27_not_deleted USING btree (dbid);


--
-- Name: xref_p27_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p27_not_deleted$id" ON rnacen.xref_p27_not_deleted USING btree (id);


--
-- Name: xref_p27_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p27_not_deleted$last" ON rnacen.xref_p27_not_deleted USING btree (last);


--
-- Name: xref_p27_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p27_not_deleted$taxid" ON rnacen.xref_p27_not_deleted USING btree (taxid);


--
-- Name: xref_p27_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p27_not_deleted$upi" ON rnacen.xref_p27_not_deleted USING btree (upi);


--
-- Name: xref_p28_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p28_deleted$ac" ON rnacen.xref_p28_deleted USING btree (ac);


--
-- Name: xref_p28_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p28_deleted$created" ON rnacen.xref_p28_deleted USING btree (created);


--
-- Name: xref_p28_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p28_deleted$dbid" ON rnacen.xref_p28_deleted USING btree (dbid);


--
-- Name: xref_p28_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p28_deleted$id" ON rnacen.xref_p28_deleted USING btree (id);


--
-- Name: xref_p28_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p28_deleted$last" ON rnacen.xref_p28_deleted USING btree (last);


--
-- Name: xref_p28_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p28_deleted$taxid" ON rnacen.xref_p28_deleted USING btree (taxid);


--
-- Name: xref_p28_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p28_deleted$upi" ON rnacen.xref_p28_deleted USING btree (upi);


--
-- Name: xref_p28_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p28_not_deleted$ac" ON rnacen.xref_p28_not_deleted USING btree (ac);


--
-- Name: xref_p28_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p28_not_deleted$created" ON rnacen.xref_p28_not_deleted USING btree (created);


--
-- Name: xref_p28_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p28_not_deleted$dbid" ON rnacen.xref_p28_not_deleted USING btree (dbid);


--
-- Name: xref_p28_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p28_not_deleted$id" ON rnacen.xref_p28_not_deleted USING btree (id);


--
-- Name: xref_p28_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p28_not_deleted$last" ON rnacen.xref_p28_not_deleted USING btree (last);


--
-- Name: xref_p28_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p28_not_deleted$taxid" ON rnacen.xref_p28_not_deleted USING btree (taxid);


--
-- Name: xref_p28_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p28_not_deleted$upi" ON rnacen.xref_p28_not_deleted USING btree (upi);


--
-- Name: xref_p29_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p29_deleted$ac" ON rnacen.xref_p29_deleted USING btree (ac);


--
-- Name: xref_p29_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p29_deleted$created" ON rnacen.xref_p29_deleted USING btree (created);


--
-- Name: xref_p29_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p29_deleted$dbid" ON rnacen.xref_p29_deleted USING btree (dbid);


--
-- Name: xref_p29_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p29_deleted$id" ON rnacen.xref_p29_deleted USING btree (id);


--
-- Name: xref_p29_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p29_deleted$last" ON rnacen.xref_p29_deleted USING btree (last);


--
-- Name: xref_p29_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p29_deleted$taxid" ON rnacen.xref_p29_deleted USING btree (taxid);


--
-- Name: xref_p29_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p29_deleted$upi" ON rnacen.xref_p29_deleted USING btree (upi);


--
-- Name: xref_p29_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p29_not_deleted$ac" ON rnacen.xref_p29_not_deleted USING btree (ac);


--
-- Name: xref_p29_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p29_not_deleted$created" ON rnacen.xref_p29_not_deleted USING btree (created);


--
-- Name: xref_p29_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p29_not_deleted$dbid" ON rnacen.xref_p29_not_deleted USING btree (dbid);


--
-- Name: xref_p29_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p29_not_deleted$id" ON rnacen.xref_p29_not_deleted USING btree (id);


--
-- Name: xref_p29_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p29_not_deleted$last" ON rnacen.xref_p29_not_deleted USING btree (last);


--
-- Name: xref_p29_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p29_not_deleted$taxid" ON rnacen.xref_p29_not_deleted USING btree (taxid);


--
-- Name: xref_p29_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p29_not_deleted$upi" ON rnacen.xref_p29_not_deleted USING btree (upi);


--
-- Name: xref_p2_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p2_deleted$ac" ON rnacen.xref_p2_deleted USING btree (ac);


--
-- Name: xref_p2_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p2_deleted$ac_old" ON rnacen.xref_p2_deleted_old USING btree (ac);


--
-- Name: xref_p2_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p2_deleted$created" ON rnacen.xref_p2_deleted USING btree (created);


--
-- Name: xref_p2_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p2_deleted$created_old" ON rnacen.xref_p2_deleted_old USING btree (created);


--
-- Name: xref_p2_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p2_deleted$dbid" ON rnacen.xref_p2_deleted USING btree (dbid);


--
-- Name: xref_p2_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p2_deleted$dbid_old" ON rnacen.xref_p2_deleted_old USING btree (dbid);


--
-- Name: xref_p2_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p2_deleted$id" ON rnacen.xref_p2_deleted USING btree (id);


--
-- Name: xref_p2_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p2_deleted$id_old" ON rnacen.xref_p2_deleted_old USING btree (id);


--
-- Name: xref_p2_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p2_deleted$last" ON rnacen.xref_p2_deleted USING btree (last);


--
-- Name: xref_p2_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p2_deleted$last_old" ON rnacen.xref_p2_deleted_old USING btree (last);


--
-- Name: xref_p2_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p2_deleted$taxid" ON rnacen.xref_p2_deleted USING btree (taxid);


--
-- Name: xref_p2_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p2_deleted$taxid_old" ON rnacen.xref_p2_deleted_old USING btree (taxid);


--
-- Name: xref_p2_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p2_deleted$upi" ON rnacen.xref_p2_deleted USING btree (upi);


--
-- Name: xref_p2_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p2_deleted$upi_old" ON rnacen.xref_p2_deleted_old USING btree (upi);


--
-- Name: xref_p2_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p2_not_deleted$ac" ON rnacen.xref_p2_not_deleted USING btree (ac);


--
-- Name: xref_p2_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p2_not_deleted$ac_old" ON rnacen.xref_p2_not_deleted_old USING btree (ac);


--
-- Name: xref_p2_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p2_not_deleted$created" ON rnacen.xref_p2_not_deleted USING btree (created);


--
-- Name: xref_p2_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p2_not_deleted$created_old" ON rnacen.xref_p2_not_deleted_old USING btree (created);


--
-- Name: xref_p2_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p2_not_deleted$dbid" ON rnacen.xref_p2_not_deleted USING btree (dbid);


--
-- Name: xref_p2_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p2_not_deleted$dbid_old" ON rnacen.xref_p2_not_deleted_old USING btree (dbid);


--
-- Name: xref_p2_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p2_not_deleted$id" ON rnacen.xref_p2_not_deleted USING btree (id);


--
-- Name: xref_p2_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p2_not_deleted$id_old" ON rnacen.xref_p2_not_deleted_old USING btree (id);


--
-- Name: xref_p2_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p2_not_deleted$last" ON rnacen.xref_p2_not_deleted USING btree (last);


--
-- Name: xref_p2_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p2_not_deleted$last_old" ON rnacen.xref_p2_not_deleted_old USING btree (last);


--
-- Name: xref_p2_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p2_not_deleted$taxid" ON rnacen.xref_p2_not_deleted USING btree (taxid);


--
-- Name: xref_p2_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p2_not_deleted$taxid_old" ON rnacen.xref_p2_not_deleted_old USING btree (taxid);


--
-- Name: xref_p2_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p2_not_deleted$upi" ON rnacen.xref_p2_not_deleted USING btree (upi);


--
-- Name: xref_p2_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p2_not_deleted$upi_old" ON rnacen.xref_p2_not_deleted_old USING btree (upi);


--
-- Name: xref_p30_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p30_deleted$ac" ON rnacen.xref_p30_deleted USING btree (ac);


--
-- Name: xref_p30_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p30_deleted$ac_old" ON rnacen.xref_p30_deleted_old USING btree (ac);


--
-- Name: xref_p30_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p30_deleted$created" ON rnacen.xref_p30_deleted USING btree (created);


--
-- Name: xref_p30_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p30_deleted$created_old" ON rnacen.xref_p30_deleted_old USING btree (created);


--
-- Name: xref_p30_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p30_deleted$dbid" ON rnacen.xref_p30_deleted USING btree (dbid);


--
-- Name: xref_p30_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p30_deleted$dbid_old" ON rnacen.xref_p30_deleted_old USING btree (dbid);


--
-- Name: xref_p30_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p30_deleted$id" ON rnacen.xref_p30_deleted USING btree (id);


--
-- Name: xref_p30_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p30_deleted$id_old" ON rnacen.xref_p30_deleted_old USING btree (id);


--
-- Name: xref_p30_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p30_deleted$last" ON rnacen.xref_p30_deleted USING btree (last);


--
-- Name: xref_p30_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p30_deleted$last_old" ON rnacen.xref_p30_deleted_old USING btree (last);


--
-- Name: xref_p30_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p30_deleted$taxid" ON rnacen.xref_p30_deleted USING btree (taxid);


--
-- Name: xref_p30_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p30_deleted$taxid_old" ON rnacen.xref_p30_deleted_old USING btree (taxid);


--
-- Name: xref_p30_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p30_deleted$upi" ON rnacen.xref_p30_deleted USING btree (upi);


--
-- Name: xref_p30_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p30_deleted$upi_old" ON rnacen.xref_p30_deleted_old USING btree (upi);


--
-- Name: xref_p30_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p30_not_deleted$ac" ON rnacen.xref_p30_not_deleted USING btree (ac);


--
-- Name: xref_p30_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p30_not_deleted$ac_old" ON rnacen.xref_p30_not_deleted_old USING btree (ac);


--
-- Name: xref_p30_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p30_not_deleted$created" ON rnacen.xref_p30_not_deleted USING btree (created);


--
-- Name: xref_p30_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p30_not_deleted$created_old" ON rnacen.xref_p30_not_deleted_old USING btree (created);


--
-- Name: xref_p30_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p30_not_deleted$dbid" ON rnacen.xref_p30_not_deleted USING btree (dbid);


--
-- Name: xref_p30_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p30_not_deleted$dbid_old" ON rnacen.xref_p30_not_deleted_old USING btree (dbid);


--
-- Name: xref_p30_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p30_not_deleted$id" ON rnacen.xref_p30_not_deleted USING btree (id);


--
-- Name: xref_p30_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p30_not_deleted$id_old" ON rnacen.xref_p30_not_deleted_old USING btree (id);


--
-- Name: xref_p30_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p30_not_deleted$last" ON rnacen.xref_p30_not_deleted USING btree (last);


--
-- Name: xref_p30_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p30_not_deleted$last_old" ON rnacen.xref_p30_not_deleted_old USING btree (last);


--
-- Name: xref_p30_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p30_not_deleted$taxid" ON rnacen.xref_p30_not_deleted USING btree (taxid);


--
-- Name: xref_p30_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p30_not_deleted$taxid_old" ON rnacen.xref_p30_not_deleted_old USING btree (taxid);


--
-- Name: xref_p30_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p30_not_deleted$upi" ON rnacen.xref_p30_not_deleted USING btree (upi);


--
-- Name: xref_p30_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p30_not_deleted$upi_old" ON rnacen.xref_p30_not_deleted_old USING btree (upi);


--
-- Name: xref_p31_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p31_deleted$ac" ON rnacen.xref_p31_deleted USING btree (ac);


--
-- Name: xref_p31_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p31_deleted$ac_old" ON rnacen.xref_p31_deleted_old USING btree (ac);


--
-- Name: xref_p31_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p31_deleted$created" ON rnacen.xref_p31_deleted USING btree (created);


--
-- Name: xref_p31_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p31_deleted$created_old" ON rnacen.xref_p31_deleted_old USING btree (created);


--
-- Name: xref_p31_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p31_deleted$dbid" ON rnacen.xref_p31_deleted USING btree (dbid);


--
-- Name: xref_p31_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p31_deleted$dbid_old" ON rnacen.xref_p31_deleted_old USING btree (dbid);


--
-- Name: xref_p31_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p31_deleted$id" ON rnacen.xref_p31_deleted USING btree (id);


--
-- Name: xref_p31_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p31_deleted$id_old" ON rnacen.xref_p31_deleted_old USING btree (id);


--
-- Name: xref_p31_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p31_deleted$last" ON rnacen.xref_p31_deleted USING btree (last);


--
-- Name: xref_p31_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p31_deleted$last_old" ON rnacen.xref_p31_deleted_old USING btree (last);


--
-- Name: xref_p31_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p31_deleted$taxid" ON rnacen.xref_p31_deleted USING btree (taxid);


--
-- Name: xref_p31_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p31_deleted$taxid_old" ON rnacen.xref_p31_deleted_old USING btree (taxid);


--
-- Name: xref_p31_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p31_deleted$upi" ON rnacen.xref_p31_deleted USING btree (upi);


--
-- Name: xref_p31_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p31_deleted$upi_old" ON rnacen.xref_p31_deleted_old USING btree (upi);


--
-- Name: xref_p31_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p31_not_deleted$ac" ON rnacen.xref_p31_not_deleted USING btree (ac);


--
-- Name: xref_p31_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p31_not_deleted$ac_old" ON rnacen.xref_p31_not_deleted_old USING btree (ac);


--
-- Name: xref_p31_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p31_not_deleted$created" ON rnacen.xref_p31_not_deleted USING btree (created);


--
-- Name: xref_p31_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p31_not_deleted$created_old" ON rnacen.xref_p31_not_deleted_old USING btree (created);


--
-- Name: xref_p31_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p31_not_deleted$dbid" ON rnacen.xref_p31_not_deleted USING btree (dbid);


--
-- Name: xref_p31_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p31_not_deleted$dbid_old" ON rnacen.xref_p31_not_deleted_old USING btree (dbid);


--
-- Name: xref_p31_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p31_not_deleted$id" ON rnacen.xref_p31_not_deleted USING btree (id);


--
-- Name: xref_p31_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p31_not_deleted$id_old" ON rnacen.xref_p31_not_deleted_old USING btree (id);


--
-- Name: xref_p31_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p31_not_deleted$last" ON rnacen.xref_p31_not_deleted USING btree (last);


--
-- Name: xref_p31_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p31_not_deleted$last_old" ON rnacen.xref_p31_not_deleted_old USING btree (last);


--
-- Name: xref_p31_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p31_not_deleted$taxid" ON rnacen.xref_p31_not_deleted USING btree (taxid);


--
-- Name: xref_p31_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p31_not_deleted$taxid_old" ON rnacen.xref_p31_not_deleted_old USING btree (taxid);


--
-- Name: xref_p31_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p31_not_deleted$upi" ON rnacen.xref_p31_not_deleted USING btree (upi);


--
-- Name: xref_p31_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p31_not_deleted$upi_old" ON rnacen.xref_p31_not_deleted_old USING btree (upi);


--
-- Name: xref_p32_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p32_deleted$ac" ON rnacen.xref_p32_deleted USING btree (ac);


--
-- Name: xref_p32_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p32_deleted$created" ON rnacen.xref_p32_deleted USING btree (created);


--
-- Name: xref_p32_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p32_deleted$dbid" ON rnacen.xref_p32_deleted USING btree (dbid);


--
-- Name: xref_p32_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p32_deleted$id" ON rnacen.xref_p32_deleted USING btree (id);


--
-- Name: xref_p32_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p32_deleted$last" ON rnacen.xref_p32_deleted USING btree (last);


--
-- Name: xref_p32_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p32_deleted$taxid" ON rnacen.xref_p32_deleted USING btree (taxid);


--
-- Name: xref_p32_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p32_deleted$upi" ON rnacen.xref_p32_deleted USING btree (upi);


--
-- Name: xref_p32_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p32_not_deleted$ac" ON rnacen.xref_p32_not_deleted USING btree (ac);


--
-- Name: xref_p32_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p32_not_deleted$created" ON rnacen.xref_p32_not_deleted USING btree (created);


--
-- Name: xref_p32_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p32_not_deleted$dbid" ON rnacen.xref_p32_not_deleted USING btree (dbid);


--
-- Name: xref_p32_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p32_not_deleted$id" ON rnacen.xref_p32_not_deleted USING btree (id);


--
-- Name: xref_p32_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p32_not_deleted$last" ON rnacen.xref_p32_not_deleted USING btree (last);


--
-- Name: xref_p32_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p32_not_deleted$taxid" ON rnacen.xref_p32_not_deleted USING btree (taxid);


--
-- Name: xref_p32_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p32_not_deleted$upi" ON rnacen.xref_p32_not_deleted USING btree (upi);


--
-- Name: xref_p33_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p33_deleted$ac" ON rnacen.xref_p33_deleted USING btree (ac);


--
-- Name: xref_p33_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p33_deleted$ac_old" ON rnacen.xref_p33_deleted_old USING btree (ac);


--
-- Name: xref_p33_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p33_deleted$created" ON rnacen.xref_p33_deleted USING btree (created);


--
-- Name: xref_p33_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p33_deleted$created_old" ON rnacen.xref_p33_deleted_old USING btree (created);


--
-- Name: xref_p33_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p33_deleted$dbid" ON rnacen.xref_p33_deleted USING btree (dbid);


--
-- Name: xref_p33_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p33_deleted$dbid_old" ON rnacen.xref_p33_deleted_old USING btree (dbid);


--
-- Name: xref_p33_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p33_deleted$id" ON rnacen.xref_p33_deleted USING btree (id);


--
-- Name: xref_p33_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p33_deleted$id_old" ON rnacen.xref_p33_deleted_old USING btree (id);


--
-- Name: xref_p33_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p33_deleted$last" ON rnacen.xref_p33_deleted USING btree (last);


--
-- Name: xref_p33_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p33_deleted$last_old" ON rnacen.xref_p33_deleted_old USING btree (last);


--
-- Name: xref_p33_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p33_deleted$taxid" ON rnacen.xref_p33_deleted USING btree (taxid);


--
-- Name: xref_p33_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p33_deleted$taxid_old" ON rnacen.xref_p33_deleted_old USING btree (taxid);


--
-- Name: xref_p33_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p33_deleted$upi" ON rnacen.xref_p33_deleted USING btree (upi);


--
-- Name: xref_p33_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p33_deleted$upi_old" ON rnacen.xref_p33_deleted_old USING btree (upi);


--
-- Name: xref_p33_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p33_not_deleted$ac" ON rnacen.xref_p33_not_deleted USING btree (ac);


--
-- Name: xref_p33_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p33_not_deleted$ac_old" ON rnacen.xref_p33_not_deleted_old USING btree (ac);


--
-- Name: xref_p33_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p33_not_deleted$created" ON rnacen.xref_p33_not_deleted USING btree (created);


--
-- Name: xref_p33_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p33_not_deleted$created_old" ON rnacen.xref_p33_not_deleted_old USING btree (created);


--
-- Name: xref_p33_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p33_not_deleted$dbid" ON rnacen.xref_p33_not_deleted USING btree (dbid);


--
-- Name: xref_p33_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p33_not_deleted$dbid_old" ON rnacen.xref_p33_not_deleted_old USING btree (dbid);


--
-- Name: xref_p33_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p33_not_deleted$id" ON rnacen.xref_p33_not_deleted USING btree (id);


--
-- Name: xref_p33_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p33_not_deleted$id_old" ON rnacen.xref_p33_not_deleted_old USING btree (id);


--
-- Name: xref_p33_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p33_not_deleted$last" ON rnacen.xref_p33_not_deleted USING btree (last);


--
-- Name: xref_p33_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p33_not_deleted$last_old" ON rnacen.xref_p33_not_deleted_old USING btree (last);


--
-- Name: xref_p33_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p33_not_deleted$taxid" ON rnacen.xref_p33_not_deleted USING btree (taxid);


--
-- Name: xref_p33_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p33_not_deleted$taxid_old" ON rnacen.xref_p33_not_deleted_old USING btree (taxid);


--
-- Name: xref_p33_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p33_not_deleted$upi" ON rnacen.xref_p33_not_deleted USING btree (upi);


--
-- Name: xref_p33_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p33_not_deleted$upi_old" ON rnacen.xref_p33_not_deleted_old USING btree (upi);


--
-- Name: xref_p34_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p34_deleted$ac" ON rnacen.xref_p34_deleted USING btree (ac);


--
-- Name: xref_p34_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p34_deleted$ac_old" ON rnacen.xref_p34_deleted_old USING btree (ac);


--
-- Name: xref_p34_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p34_deleted$created" ON rnacen.xref_p34_deleted USING btree (created);


--
-- Name: xref_p34_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p34_deleted$created_old" ON rnacen.xref_p34_deleted_old USING btree (created);


--
-- Name: xref_p34_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p34_deleted$dbid" ON rnacen.xref_p34_deleted USING btree (dbid);


--
-- Name: xref_p34_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p34_deleted$dbid_old" ON rnacen.xref_p34_deleted_old USING btree (dbid);


--
-- Name: xref_p34_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p34_deleted$id" ON rnacen.xref_p34_deleted USING btree (id);


--
-- Name: xref_p34_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p34_deleted$id_old" ON rnacen.xref_p34_deleted_old USING btree (id);


--
-- Name: xref_p34_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p34_deleted$last" ON rnacen.xref_p34_deleted USING btree (last);


--
-- Name: xref_p34_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p34_deleted$last_old" ON rnacen.xref_p34_deleted_old USING btree (last);


--
-- Name: xref_p34_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p34_deleted$taxid" ON rnacen.xref_p34_deleted USING btree (taxid);


--
-- Name: xref_p34_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p34_deleted$taxid_old" ON rnacen.xref_p34_deleted_old USING btree (taxid);


--
-- Name: xref_p34_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p34_deleted$upi" ON rnacen.xref_p34_deleted USING btree (upi);


--
-- Name: xref_p34_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p34_deleted$upi_old" ON rnacen.xref_p34_deleted_old USING btree (upi);


--
-- Name: xref_p34_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p34_not_deleted$ac" ON rnacen.xref_p34_not_deleted USING btree (ac);


--
-- Name: xref_p34_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p34_not_deleted$ac_old" ON rnacen.xref_p34_not_deleted_old USING btree (ac);


--
-- Name: xref_p34_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p34_not_deleted$created" ON rnacen.xref_p34_not_deleted USING btree (created);


--
-- Name: xref_p34_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p34_not_deleted$created_old" ON rnacen.xref_p34_not_deleted_old USING btree (created);


--
-- Name: xref_p34_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p34_not_deleted$dbid" ON rnacen.xref_p34_not_deleted USING btree (dbid);


--
-- Name: xref_p34_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p34_not_deleted$dbid_old" ON rnacen.xref_p34_not_deleted_old USING btree (dbid);


--
-- Name: xref_p34_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p34_not_deleted$id" ON rnacen.xref_p34_not_deleted USING btree (id);


--
-- Name: xref_p34_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p34_not_deleted$id_old" ON rnacen.xref_p34_not_deleted_old USING btree (id);


--
-- Name: xref_p34_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p34_not_deleted$last" ON rnacen.xref_p34_not_deleted USING btree (last);


--
-- Name: xref_p34_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p34_not_deleted$last_old" ON rnacen.xref_p34_not_deleted_old USING btree (last);


--
-- Name: xref_p34_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p34_not_deleted$taxid" ON rnacen.xref_p34_not_deleted USING btree (taxid);


--
-- Name: xref_p34_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p34_not_deleted$taxid_old" ON rnacen.xref_p34_not_deleted_old USING btree (taxid);


--
-- Name: xref_p34_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p34_not_deleted$upi" ON rnacen.xref_p34_not_deleted USING btree (upi);


--
-- Name: xref_p34_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p34_not_deleted$upi_old" ON rnacen.xref_p34_not_deleted_old USING btree (upi);


--
-- Name: xref_p35_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p35_deleted$ac" ON rnacen.xref_p35_deleted USING btree (ac);


--
-- Name: xref_p35_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p35_deleted$ac_old" ON rnacen.xref_p35_deleted_old USING btree (ac);


--
-- Name: xref_p35_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p35_deleted$created" ON rnacen.xref_p35_deleted USING btree (created);


--
-- Name: xref_p35_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p35_deleted$created_old" ON rnacen.xref_p35_deleted_old USING btree (created);


--
-- Name: xref_p35_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p35_deleted$dbid" ON rnacen.xref_p35_deleted USING btree (dbid);


--
-- Name: xref_p35_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p35_deleted$dbid_old" ON rnacen.xref_p35_deleted_old USING btree (dbid);


--
-- Name: xref_p35_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p35_deleted$id" ON rnacen.xref_p35_deleted USING btree (id);


--
-- Name: xref_p35_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p35_deleted$id_old" ON rnacen.xref_p35_deleted_old USING btree (id);


--
-- Name: xref_p35_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p35_deleted$last" ON rnacen.xref_p35_deleted USING btree (last);


--
-- Name: xref_p35_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p35_deleted$last_old" ON rnacen.xref_p35_deleted_old USING btree (last);


--
-- Name: xref_p35_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p35_deleted$taxid" ON rnacen.xref_p35_deleted USING btree (taxid);


--
-- Name: xref_p35_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p35_deleted$taxid_old" ON rnacen.xref_p35_deleted_old USING btree (taxid);


--
-- Name: xref_p35_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p35_deleted$upi" ON rnacen.xref_p35_deleted USING btree (upi);


--
-- Name: xref_p35_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p35_deleted$upi_old" ON rnacen.xref_p35_deleted_old USING btree (upi);


--
-- Name: xref_p35_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p35_not_deleted$ac" ON rnacen.xref_p35_not_deleted USING btree (ac);


--
-- Name: xref_p35_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p35_not_deleted$ac_old" ON rnacen.xref_p35_not_deleted_old USING btree (ac);


--
-- Name: xref_p35_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p35_not_deleted$created" ON rnacen.xref_p35_not_deleted USING btree (created);


--
-- Name: xref_p35_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p35_not_deleted$created_old" ON rnacen.xref_p35_not_deleted_old USING btree (created);


--
-- Name: xref_p35_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p35_not_deleted$dbid" ON rnacen.xref_p35_not_deleted USING btree (dbid);


--
-- Name: xref_p35_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p35_not_deleted$dbid_old" ON rnacen.xref_p35_not_deleted_old USING btree (dbid);


--
-- Name: xref_p35_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p35_not_deleted$id" ON rnacen.xref_p35_not_deleted USING btree (id);


--
-- Name: xref_p35_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p35_not_deleted$id_old" ON rnacen.xref_p35_not_deleted_old USING btree (id);


--
-- Name: xref_p35_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p35_not_deleted$last" ON rnacen.xref_p35_not_deleted USING btree (last);


--
-- Name: xref_p35_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p35_not_deleted$last_old" ON rnacen.xref_p35_not_deleted_old USING btree (last);


--
-- Name: xref_p35_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p35_not_deleted$taxid" ON rnacen.xref_p35_not_deleted USING btree (taxid);


--
-- Name: xref_p35_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p35_not_deleted$taxid_old" ON rnacen.xref_p35_not_deleted_old USING btree (taxid);


--
-- Name: xref_p35_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p35_not_deleted$upi" ON rnacen.xref_p35_not_deleted USING btree (upi);


--
-- Name: xref_p35_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p35_not_deleted$upi_old" ON rnacen.xref_p35_not_deleted_old USING btree (upi);


--
-- Name: xref_p36_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p36_deleted$ac" ON rnacen.xref_p36_deleted USING btree (ac);


--
-- Name: xref_p36_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p36_deleted$ac_old" ON rnacen.xref_p36_deleted_old USING btree (ac);


--
-- Name: xref_p36_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p36_deleted$created" ON rnacen.xref_p36_deleted USING btree (created);


--
-- Name: xref_p36_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p36_deleted$created_old" ON rnacen.xref_p36_deleted_old USING btree (created);


--
-- Name: xref_p36_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p36_deleted$dbid" ON rnacen.xref_p36_deleted USING btree (dbid);


--
-- Name: xref_p36_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p36_deleted$dbid_old" ON rnacen.xref_p36_deleted_old USING btree (dbid);


--
-- Name: xref_p36_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p36_deleted$id" ON rnacen.xref_p36_deleted USING btree (id);


--
-- Name: xref_p36_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p36_deleted$id_old" ON rnacen.xref_p36_deleted_old USING btree (id);


--
-- Name: xref_p36_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p36_deleted$last" ON rnacen.xref_p36_deleted USING btree (last);


--
-- Name: xref_p36_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p36_deleted$last_old" ON rnacen.xref_p36_deleted_old USING btree (last);


--
-- Name: xref_p36_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p36_deleted$taxid" ON rnacen.xref_p36_deleted USING btree (taxid);


--
-- Name: xref_p36_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p36_deleted$taxid_old" ON rnacen.xref_p36_deleted_old USING btree (taxid);


--
-- Name: xref_p36_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p36_deleted$upi" ON rnacen.xref_p36_deleted USING btree (upi);


--
-- Name: xref_p36_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p36_deleted$upi_old" ON rnacen.xref_p36_deleted_old USING btree (upi);


--
-- Name: xref_p36_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p36_not_deleted$ac" ON rnacen.xref_p36_not_deleted USING btree (ac);


--
-- Name: xref_p36_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p36_not_deleted$ac_old" ON rnacen.xref_p36_not_deleted_old USING btree (ac);


--
-- Name: xref_p36_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p36_not_deleted$created" ON rnacen.xref_p36_not_deleted USING btree (created);


--
-- Name: xref_p36_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p36_not_deleted$created_old" ON rnacen.xref_p36_not_deleted_old USING btree (created);


--
-- Name: xref_p36_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p36_not_deleted$dbid" ON rnacen.xref_p36_not_deleted USING btree (dbid);


--
-- Name: xref_p36_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p36_not_deleted$dbid_old" ON rnacen.xref_p36_not_deleted_old USING btree (dbid);


--
-- Name: xref_p36_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p36_not_deleted$id" ON rnacen.xref_p36_not_deleted USING btree (id);


--
-- Name: xref_p36_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p36_not_deleted$id_old" ON rnacen.xref_p36_not_deleted_old USING btree (id);


--
-- Name: xref_p36_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p36_not_deleted$last" ON rnacen.xref_p36_not_deleted USING btree (last);


--
-- Name: xref_p36_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p36_not_deleted$last_old" ON rnacen.xref_p36_not_deleted_old USING btree (last);


--
-- Name: xref_p36_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p36_not_deleted$taxid" ON rnacen.xref_p36_not_deleted USING btree (taxid);


--
-- Name: xref_p36_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p36_not_deleted$taxid_old" ON rnacen.xref_p36_not_deleted_old USING btree (taxid);


--
-- Name: xref_p36_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p36_not_deleted$upi" ON rnacen.xref_p36_not_deleted USING btree (upi);


--
-- Name: xref_p36_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p36_not_deleted$upi_old" ON rnacen.xref_p36_not_deleted_old USING btree (upi);


--
-- Name: xref_p37_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p37_deleted$ac" ON rnacen.xref_p37_deleted USING btree (ac);


--
-- Name: xref_p37_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p37_deleted$ac_old" ON rnacen.xref_p37_deleted_old USING btree (ac);


--
-- Name: xref_p37_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p37_deleted$created" ON rnacen.xref_p37_deleted USING btree (created);


--
-- Name: xref_p37_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p37_deleted$created_old" ON rnacen.xref_p37_deleted_old USING btree (created);


--
-- Name: xref_p37_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p37_deleted$dbid" ON rnacen.xref_p37_deleted USING btree (dbid);


--
-- Name: xref_p37_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p37_deleted$dbid_old" ON rnacen.xref_p37_deleted_old USING btree (dbid);


--
-- Name: xref_p37_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p37_deleted$id" ON rnacen.xref_p37_deleted USING btree (id);


--
-- Name: xref_p37_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p37_deleted$id_old" ON rnacen.xref_p37_deleted_old USING btree (id);


--
-- Name: xref_p37_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p37_deleted$last" ON rnacen.xref_p37_deleted USING btree (last);


--
-- Name: xref_p37_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p37_deleted$last_old" ON rnacen.xref_p37_deleted_old USING btree (last);


--
-- Name: xref_p37_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p37_deleted$taxid" ON rnacen.xref_p37_deleted USING btree (taxid);


--
-- Name: xref_p37_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p37_deleted$taxid_old" ON rnacen.xref_p37_deleted_old USING btree (taxid);


--
-- Name: xref_p37_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p37_deleted$upi" ON rnacen.xref_p37_deleted USING btree (upi);


--
-- Name: xref_p37_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p37_deleted$upi_old" ON rnacen.xref_p37_deleted_old USING btree (upi);


--
-- Name: xref_p37_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p37_not_deleted$ac" ON rnacen.xref_p37_not_deleted USING btree (ac);


--
-- Name: xref_p37_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p37_not_deleted$ac_old" ON rnacen.xref_p37_not_deleted_old USING btree (ac);


--
-- Name: xref_p37_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p37_not_deleted$created" ON rnacen.xref_p37_not_deleted USING btree (created);


--
-- Name: xref_p37_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p37_not_deleted$created_old" ON rnacen.xref_p37_not_deleted_old USING btree (created);


--
-- Name: xref_p37_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p37_not_deleted$dbid" ON rnacen.xref_p37_not_deleted USING btree (dbid);


--
-- Name: xref_p37_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p37_not_deleted$dbid_old" ON rnacen.xref_p37_not_deleted_old USING btree (dbid);


--
-- Name: xref_p37_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p37_not_deleted$id" ON rnacen.xref_p37_not_deleted USING btree (id);


--
-- Name: xref_p37_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p37_not_deleted$id_old" ON rnacen.xref_p37_not_deleted_old USING btree (id);


--
-- Name: xref_p37_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p37_not_deleted$last" ON rnacen.xref_p37_not_deleted USING btree (last);


--
-- Name: xref_p37_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p37_not_deleted$last_old" ON rnacen.xref_p37_not_deleted_old USING btree (last);


--
-- Name: xref_p37_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p37_not_deleted$taxid" ON rnacen.xref_p37_not_deleted USING btree (taxid);


--
-- Name: xref_p37_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p37_not_deleted$taxid_old" ON rnacen.xref_p37_not_deleted_old USING btree (taxid);


--
-- Name: xref_p37_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p37_not_deleted$upi" ON rnacen.xref_p37_not_deleted USING btree (upi);


--
-- Name: xref_p37_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p37_not_deleted$upi_old" ON rnacen.xref_p37_not_deleted_old USING btree (upi);


--
-- Name: xref_p38_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p38_deleted$ac" ON rnacen.xref_p38_deleted USING btree (ac);


--
-- Name: xref_p38_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p38_deleted$ac_old" ON rnacen.xref_p38_deleted_old USING btree (ac);


--
-- Name: xref_p38_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p38_deleted$created" ON rnacen.xref_p38_deleted USING btree (created);


--
-- Name: xref_p38_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p38_deleted$created_old" ON rnacen.xref_p38_deleted_old USING btree (created);


--
-- Name: xref_p38_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p38_deleted$dbid" ON rnacen.xref_p38_deleted USING btree (dbid);


--
-- Name: xref_p38_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p38_deleted$dbid_old" ON rnacen.xref_p38_deleted_old USING btree (dbid);


--
-- Name: xref_p38_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p38_deleted$id" ON rnacen.xref_p38_deleted USING btree (id);


--
-- Name: xref_p38_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p38_deleted$id_old" ON rnacen.xref_p38_deleted_old USING btree (id);


--
-- Name: xref_p38_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p38_deleted$last" ON rnacen.xref_p38_deleted USING btree (last);


--
-- Name: xref_p38_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p38_deleted$last_old" ON rnacen.xref_p38_deleted_old USING btree (last);


--
-- Name: xref_p38_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p38_deleted$taxid" ON rnacen.xref_p38_deleted USING btree (taxid);


--
-- Name: xref_p38_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p38_deleted$taxid_old" ON rnacen.xref_p38_deleted_old USING btree (taxid);


--
-- Name: xref_p38_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p38_deleted$upi" ON rnacen.xref_p38_deleted USING btree (upi);


--
-- Name: xref_p38_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p38_deleted$upi_old" ON rnacen.xref_p38_deleted_old USING btree (upi);


--
-- Name: xref_p38_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p38_not_deleted$ac" ON rnacen.xref_p38_not_deleted USING btree (ac);


--
-- Name: xref_p38_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p38_not_deleted$ac_old" ON rnacen.xref_p38_not_deleted_old USING btree (ac);


--
-- Name: xref_p38_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p38_not_deleted$created" ON rnacen.xref_p38_not_deleted USING btree (created);


--
-- Name: xref_p38_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p38_not_deleted$created_old" ON rnacen.xref_p38_not_deleted_old USING btree (created);


--
-- Name: xref_p38_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p38_not_deleted$dbid" ON rnacen.xref_p38_not_deleted USING btree (dbid);


--
-- Name: xref_p38_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p38_not_deleted$dbid_old" ON rnacen.xref_p38_not_deleted_old USING btree (dbid);


--
-- Name: xref_p38_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p38_not_deleted$id" ON rnacen.xref_p38_not_deleted USING btree (id);


--
-- Name: xref_p38_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p38_not_deleted$id_old" ON rnacen.xref_p38_not_deleted_old USING btree (id);


--
-- Name: xref_p38_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p38_not_deleted$last" ON rnacen.xref_p38_not_deleted USING btree (last);


--
-- Name: xref_p38_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p38_not_deleted$last_old" ON rnacen.xref_p38_not_deleted_old USING btree (last);


--
-- Name: xref_p38_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p38_not_deleted$taxid" ON rnacen.xref_p38_not_deleted USING btree (taxid);


--
-- Name: xref_p38_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p38_not_deleted$taxid_old" ON rnacen.xref_p38_not_deleted_old USING btree (taxid);


--
-- Name: xref_p38_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p38_not_deleted$upi" ON rnacen.xref_p38_not_deleted USING btree (upi);


--
-- Name: xref_p38_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p38_not_deleted$upi_old" ON rnacen.xref_p38_not_deleted_old USING btree (upi);


--
-- Name: xref_p39_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p39_deleted$ac" ON rnacen.xref_p39_deleted USING btree (ac);


--
-- Name: xref_p39_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p39_deleted$ac_old" ON rnacen.xref_p39_deleted_old USING btree (ac);


--
-- Name: xref_p39_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p39_deleted$created" ON rnacen.xref_p39_deleted USING btree (created);


--
-- Name: xref_p39_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p39_deleted$created_old" ON rnacen.xref_p39_deleted_old USING btree (created);


--
-- Name: xref_p39_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p39_deleted$dbid" ON rnacen.xref_p39_deleted USING btree (dbid);


--
-- Name: xref_p39_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p39_deleted$dbid_old" ON rnacen.xref_p39_deleted_old USING btree (dbid);


--
-- Name: xref_p39_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p39_deleted$id" ON rnacen.xref_p39_deleted USING btree (id);


--
-- Name: xref_p39_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p39_deleted$id_old" ON rnacen.xref_p39_deleted_old USING btree (id);


--
-- Name: xref_p39_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p39_deleted$last" ON rnacen.xref_p39_deleted USING btree (last);


--
-- Name: xref_p39_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p39_deleted$last_old" ON rnacen.xref_p39_deleted_old USING btree (last);


--
-- Name: xref_p39_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p39_deleted$taxid" ON rnacen.xref_p39_deleted USING btree (taxid);


--
-- Name: xref_p39_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p39_deleted$taxid_old" ON rnacen.xref_p39_deleted_old USING btree (taxid);


--
-- Name: xref_p39_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p39_deleted$upi" ON rnacen.xref_p39_deleted USING btree (upi);


--
-- Name: xref_p39_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p39_deleted$upi_old" ON rnacen.xref_p39_deleted_old USING btree (upi);


--
-- Name: xref_p39_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p39_not_deleted$ac" ON rnacen.xref_p39_not_deleted USING btree (ac);


--
-- Name: xref_p39_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p39_not_deleted$ac_old" ON rnacen.xref_p39_not_deleted_old USING btree (ac);


--
-- Name: xref_p39_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p39_not_deleted$created" ON rnacen.xref_p39_not_deleted USING btree (created);


--
-- Name: xref_p39_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p39_not_deleted$created_old" ON rnacen.xref_p39_not_deleted_old USING btree (created);


--
-- Name: xref_p39_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p39_not_deleted$dbid" ON rnacen.xref_p39_not_deleted USING btree (dbid);


--
-- Name: xref_p39_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p39_not_deleted$dbid_old" ON rnacen.xref_p39_not_deleted_old USING btree (dbid);


--
-- Name: xref_p39_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p39_not_deleted$id" ON rnacen.xref_p39_not_deleted USING btree (id);


--
-- Name: xref_p39_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p39_not_deleted$id_old" ON rnacen.xref_p39_not_deleted_old USING btree (id);


--
-- Name: xref_p39_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p39_not_deleted$last" ON rnacen.xref_p39_not_deleted USING btree (last);


--
-- Name: xref_p39_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p39_not_deleted$last_old" ON rnacen.xref_p39_not_deleted_old USING btree (last);


--
-- Name: xref_p39_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p39_not_deleted$taxid" ON rnacen.xref_p39_not_deleted USING btree (taxid);


--
-- Name: xref_p39_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p39_not_deleted$taxid_old" ON rnacen.xref_p39_not_deleted_old USING btree (taxid);


--
-- Name: xref_p39_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p39_not_deleted$upi" ON rnacen.xref_p39_not_deleted USING btree (upi);


--
-- Name: xref_p39_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p39_not_deleted$upi_old" ON rnacen.xref_p39_not_deleted_old USING btree (upi);


--
-- Name: xref_p3_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p3_deleted$ac" ON rnacen.xref_p3_deleted USING btree (ac);


--
-- Name: xref_p3_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p3_deleted$ac_old" ON rnacen.xref_p3_deleted_old USING btree (ac);


--
-- Name: xref_p3_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p3_deleted$created" ON rnacen.xref_p3_deleted USING btree (created);


--
-- Name: xref_p3_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p3_deleted$created_old" ON rnacen.xref_p3_deleted_old USING btree (created);


--
-- Name: xref_p3_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p3_deleted$dbid" ON rnacen.xref_p3_deleted USING btree (dbid);


--
-- Name: xref_p3_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p3_deleted$dbid_old" ON rnacen.xref_p3_deleted_old USING btree (dbid);


--
-- Name: xref_p3_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p3_deleted$id" ON rnacen.xref_p3_deleted USING btree (id);


--
-- Name: xref_p3_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p3_deleted$id_old" ON rnacen.xref_p3_deleted_old USING btree (id);


--
-- Name: xref_p3_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p3_deleted$last" ON rnacen.xref_p3_deleted USING btree (last);


--
-- Name: xref_p3_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p3_deleted$last_old" ON rnacen.xref_p3_deleted_old USING btree (last);


--
-- Name: xref_p3_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p3_deleted$taxid" ON rnacen.xref_p3_deleted USING btree (taxid);


--
-- Name: xref_p3_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p3_deleted$taxid_old" ON rnacen.xref_p3_deleted_old USING btree (taxid);


--
-- Name: xref_p3_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p3_deleted$upi" ON rnacen.xref_p3_deleted USING btree (upi);


--
-- Name: xref_p3_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p3_deleted$upi_old" ON rnacen.xref_p3_deleted_old USING btree (upi);


--
-- Name: xref_p3_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p3_not_deleted$ac" ON rnacen.xref_p3_not_deleted USING btree (ac);


--
-- Name: xref_p3_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p3_not_deleted$ac_old" ON rnacen.xref_p3_not_deleted_old USING btree (ac);


--
-- Name: xref_p3_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p3_not_deleted$created" ON rnacen.xref_p3_not_deleted USING btree (created);


--
-- Name: xref_p3_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p3_not_deleted$created_old" ON rnacen.xref_p3_not_deleted_old USING btree (created);


--
-- Name: xref_p3_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p3_not_deleted$dbid" ON rnacen.xref_p3_not_deleted USING btree (dbid);


--
-- Name: xref_p3_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p3_not_deleted$dbid_old" ON rnacen.xref_p3_not_deleted_old USING btree (dbid);


--
-- Name: xref_p3_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p3_not_deleted$id" ON rnacen.xref_p3_not_deleted USING btree (id);


--
-- Name: xref_p3_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p3_not_deleted$id_old" ON rnacen.xref_p3_not_deleted_old USING btree (id);


--
-- Name: xref_p3_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p3_not_deleted$last" ON rnacen.xref_p3_not_deleted USING btree (last);


--
-- Name: xref_p3_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p3_not_deleted$last_old" ON rnacen.xref_p3_not_deleted_old USING btree (last);


--
-- Name: xref_p3_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p3_not_deleted$taxid" ON rnacen.xref_p3_not_deleted USING btree (taxid);


--
-- Name: xref_p3_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p3_not_deleted$taxid_old" ON rnacen.xref_p3_not_deleted_old USING btree (taxid);


--
-- Name: xref_p3_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p3_not_deleted$upi" ON rnacen.xref_p3_not_deleted USING btree (upi);


--
-- Name: xref_p3_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p3_not_deleted$upi_old" ON rnacen.xref_p3_not_deleted_old USING btree (upi);


--
-- Name: xref_p40_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p40_deleted$ac" ON rnacen.xref_p40_deleted USING btree (ac);


--
-- Name: xref_p40_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p40_deleted$ac_old" ON rnacen.xref_p40_deleted_old USING btree (ac);


--
-- Name: xref_p40_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p40_deleted$created" ON rnacen.xref_p40_deleted USING btree (created);


--
-- Name: xref_p40_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p40_deleted$created_old" ON rnacen.xref_p40_deleted_old USING btree (created);


--
-- Name: xref_p40_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p40_deleted$dbid" ON rnacen.xref_p40_deleted USING btree (dbid);


--
-- Name: xref_p40_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p40_deleted$dbid_old" ON rnacen.xref_p40_deleted_old USING btree (dbid);


--
-- Name: xref_p40_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p40_deleted$id" ON rnacen.xref_p40_deleted USING btree (id);


--
-- Name: xref_p40_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p40_deleted$id_old" ON rnacen.xref_p40_deleted_old USING btree (id);


--
-- Name: xref_p40_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p40_deleted$last" ON rnacen.xref_p40_deleted USING btree (last);


--
-- Name: xref_p40_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p40_deleted$last_old" ON rnacen.xref_p40_deleted_old USING btree (last);


--
-- Name: xref_p40_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p40_deleted$taxid" ON rnacen.xref_p40_deleted USING btree (taxid);


--
-- Name: xref_p40_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p40_deleted$taxid_old" ON rnacen.xref_p40_deleted_old USING btree (taxid);


--
-- Name: xref_p40_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p40_deleted$upi" ON rnacen.xref_p40_deleted USING btree (upi);


--
-- Name: xref_p40_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p40_deleted$upi_old" ON rnacen.xref_p40_deleted_old USING btree (upi);


--
-- Name: xref_p40_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p40_not_deleted$ac" ON rnacen.xref_p40_not_deleted USING btree (ac);


--
-- Name: xref_p40_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p40_not_deleted$ac_old" ON rnacen.xref_p40_not_deleted_old USING btree (ac);


--
-- Name: xref_p40_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p40_not_deleted$created" ON rnacen.xref_p40_not_deleted USING btree (created);


--
-- Name: xref_p40_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p40_not_deleted$created_old" ON rnacen.xref_p40_not_deleted_old USING btree (created);


--
-- Name: xref_p40_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p40_not_deleted$dbid" ON rnacen.xref_p40_not_deleted USING btree (dbid);


--
-- Name: xref_p40_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p40_not_deleted$dbid_old" ON rnacen.xref_p40_not_deleted_old USING btree (dbid);


--
-- Name: xref_p40_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p40_not_deleted$id" ON rnacen.xref_p40_not_deleted USING btree (id);


--
-- Name: xref_p40_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p40_not_deleted$id_old" ON rnacen.xref_p40_not_deleted_old USING btree (id);


--
-- Name: xref_p40_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p40_not_deleted$last" ON rnacen.xref_p40_not_deleted USING btree (last);


--
-- Name: xref_p40_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p40_not_deleted$last_old" ON rnacen.xref_p40_not_deleted_old USING btree (last);


--
-- Name: xref_p40_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p40_not_deleted$taxid" ON rnacen.xref_p40_not_deleted USING btree (taxid);


--
-- Name: xref_p40_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p40_not_deleted$taxid_old" ON rnacen.xref_p40_not_deleted_old USING btree (taxid);


--
-- Name: xref_p40_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p40_not_deleted$upi" ON rnacen.xref_p40_not_deleted USING btree (upi);


--
-- Name: xref_p40_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p40_not_deleted$upi_old" ON rnacen.xref_p40_not_deleted_old USING btree (upi);


--
-- Name: xref_p41_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p41_deleted$ac" ON rnacen.xref_p41_deleted USING btree (ac);


--
-- Name: xref_p41_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p41_deleted$ac_old" ON rnacen.xref_p41_deleted_old USING btree (ac);


--
-- Name: xref_p41_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p41_deleted$created" ON rnacen.xref_p41_deleted USING btree (created);


--
-- Name: xref_p41_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p41_deleted$created_old" ON rnacen.xref_p41_deleted_old USING btree (created);


--
-- Name: xref_p41_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p41_deleted$dbid" ON rnacen.xref_p41_deleted USING btree (dbid);


--
-- Name: xref_p41_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p41_deleted$dbid_old" ON rnacen.xref_p41_deleted_old USING btree (dbid);


--
-- Name: xref_p41_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p41_deleted$id" ON rnacen.xref_p41_deleted USING btree (id);


--
-- Name: xref_p41_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p41_deleted$id_old" ON rnacen.xref_p41_deleted_old USING btree (id);


--
-- Name: xref_p41_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p41_deleted$last" ON rnacen.xref_p41_deleted USING btree (last);


--
-- Name: xref_p41_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p41_deleted$last_old" ON rnacen.xref_p41_deleted_old USING btree (last);


--
-- Name: xref_p41_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p41_deleted$taxid" ON rnacen.xref_p41_deleted USING btree (taxid);


--
-- Name: xref_p41_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p41_deleted$taxid_old" ON rnacen.xref_p41_deleted_old USING btree (taxid);


--
-- Name: xref_p41_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p41_deleted$upi" ON rnacen.xref_p41_deleted USING btree (upi);


--
-- Name: xref_p41_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p41_deleted$upi_old" ON rnacen.xref_p41_deleted_old USING btree (upi);


--
-- Name: xref_p41_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p41_not_deleted$ac" ON rnacen.xref_p41_not_deleted USING btree (ac);


--
-- Name: xref_p41_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p41_not_deleted$ac_old" ON rnacen.xref_p41_not_deleted_old USING btree (ac);


--
-- Name: xref_p41_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p41_not_deleted$created" ON rnacen.xref_p41_not_deleted USING btree (created);


--
-- Name: xref_p41_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p41_not_deleted$created_old" ON rnacen.xref_p41_not_deleted_old USING btree (created);


--
-- Name: xref_p41_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p41_not_deleted$dbid" ON rnacen.xref_p41_not_deleted USING btree (dbid);


--
-- Name: xref_p41_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p41_not_deleted$dbid_old" ON rnacen.xref_p41_not_deleted_old USING btree (dbid);


--
-- Name: xref_p41_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p41_not_deleted$id" ON rnacen.xref_p41_not_deleted USING btree (id);


--
-- Name: xref_p41_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p41_not_deleted$id_old" ON rnacen.xref_p41_not_deleted_old USING btree (id);


--
-- Name: xref_p41_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p41_not_deleted$last" ON rnacen.xref_p41_not_deleted USING btree (last);


--
-- Name: xref_p41_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p41_not_deleted$last_old" ON rnacen.xref_p41_not_deleted_old USING btree (last);


--
-- Name: xref_p41_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p41_not_deleted$taxid" ON rnacen.xref_p41_not_deleted USING btree (taxid);


--
-- Name: xref_p41_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p41_not_deleted$taxid_old" ON rnacen.xref_p41_not_deleted_old USING btree (taxid);


--
-- Name: xref_p41_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p41_not_deleted$upi" ON rnacen.xref_p41_not_deleted USING btree (upi);


--
-- Name: xref_p41_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p41_not_deleted$upi_old" ON rnacen.xref_p41_not_deleted_old USING btree (upi);


--
-- Name: xref_p42_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p42_deleted$ac" ON rnacen.xref_p42_deleted USING btree (ac);


--
-- Name: xref_p42_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p42_deleted$ac_old" ON rnacen.xref_p42_deleted_old USING btree (ac);


--
-- Name: xref_p42_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p42_deleted$created" ON rnacen.xref_p42_deleted USING btree (created);


--
-- Name: xref_p42_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p42_deleted$created_old" ON rnacen.xref_p42_deleted_old USING btree (created);


--
-- Name: xref_p42_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p42_deleted$dbid" ON rnacen.xref_p42_deleted USING btree (dbid);


--
-- Name: xref_p42_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p42_deleted$dbid_old" ON rnacen.xref_p42_deleted_old USING btree (dbid);


--
-- Name: xref_p42_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p42_deleted$id" ON rnacen.xref_p42_deleted USING btree (id);


--
-- Name: xref_p42_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p42_deleted$id_old" ON rnacen.xref_p42_deleted_old USING btree (id);


--
-- Name: xref_p42_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p42_deleted$last" ON rnacen.xref_p42_deleted USING btree (last);


--
-- Name: xref_p42_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p42_deleted$last_old" ON rnacen.xref_p42_deleted_old USING btree (last);


--
-- Name: xref_p42_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p42_deleted$taxid" ON rnacen.xref_p42_deleted USING btree (taxid);


--
-- Name: xref_p42_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p42_deleted$taxid_old" ON rnacen.xref_p42_deleted_old USING btree (taxid);


--
-- Name: xref_p42_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p42_deleted$upi" ON rnacen.xref_p42_deleted USING btree (upi);


--
-- Name: xref_p42_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p42_deleted$upi_old" ON rnacen.xref_p42_deleted_old USING btree (upi);


--
-- Name: xref_p42_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p42_not_deleted$ac" ON rnacen.xref_p42_not_deleted USING btree (ac);


--
-- Name: xref_p42_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p42_not_deleted$ac_old" ON rnacen.xref_p42_not_deleted_old USING btree (ac);


--
-- Name: xref_p42_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p42_not_deleted$created" ON rnacen.xref_p42_not_deleted USING btree (created);


--
-- Name: xref_p42_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p42_not_deleted$created_old" ON rnacen.xref_p42_not_deleted_old USING btree (created);


--
-- Name: xref_p42_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p42_not_deleted$dbid" ON rnacen.xref_p42_not_deleted USING btree (dbid);


--
-- Name: xref_p42_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p42_not_deleted$dbid_old" ON rnacen.xref_p42_not_deleted_old USING btree (dbid);


--
-- Name: xref_p42_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p42_not_deleted$id" ON rnacen.xref_p42_not_deleted USING btree (id);


--
-- Name: xref_p42_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p42_not_deleted$id_old" ON rnacen.xref_p42_not_deleted_old USING btree (id);


--
-- Name: xref_p42_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p42_not_deleted$last" ON rnacen.xref_p42_not_deleted USING btree (last);


--
-- Name: xref_p42_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p42_not_deleted$last_old" ON rnacen.xref_p42_not_deleted_old USING btree (last);


--
-- Name: xref_p42_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p42_not_deleted$taxid" ON rnacen.xref_p42_not_deleted USING btree (taxid);


--
-- Name: xref_p42_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p42_not_deleted$taxid_old" ON rnacen.xref_p42_not_deleted_old USING btree (taxid);


--
-- Name: xref_p42_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p42_not_deleted$upi" ON rnacen.xref_p42_not_deleted USING btree (upi);


--
-- Name: xref_p42_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p42_not_deleted$upi_old" ON rnacen.xref_p42_not_deleted_old USING btree (upi);


--
-- Name: xref_p43_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p43_deleted$ac" ON rnacen.xref_p43_deleted USING btree (ac);


--
-- Name: xref_p43_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p43_deleted$ac_old" ON rnacen.xref_p43_deleted_old USING btree (ac);


--
-- Name: xref_p43_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p43_deleted$created" ON rnacen.xref_p43_deleted USING btree (created);


--
-- Name: xref_p43_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p43_deleted$created_old" ON rnacen.xref_p43_deleted_old USING btree (created);


--
-- Name: xref_p43_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p43_deleted$dbid" ON rnacen.xref_p43_deleted USING btree (dbid);


--
-- Name: xref_p43_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p43_deleted$dbid_old" ON rnacen.xref_p43_deleted_old USING btree (dbid);


--
-- Name: xref_p43_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p43_deleted$id" ON rnacen.xref_p43_deleted USING btree (id);


--
-- Name: xref_p43_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p43_deleted$id_old" ON rnacen.xref_p43_deleted_old USING btree (id);


--
-- Name: xref_p43_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p43_deleted$last" ON rnacen.xref_p43_deleted USING btree (last);


--
-- Name: xref_p43_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p43_deleted$last_old" ON rnacen.xref_p43_deleted_old USING btree (last);


--
-- Name: xref_p43_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p43_deleted$taxid" ON rnacen.xref_p43_deleted USING btree (taxid);


--
-- Name: xref_p43_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p43_deleted$taxid_old" ON rnacen.xref_p43_deleted_old USING btree (taxid);


--
-- Name: xref_p43_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p43_deleted$upi" ON rnacen.xref_p43_deleted USING btree (upi);


--
-- Name: xref_p43_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p43_deleted$upi_old" ON rnacen.xref_p43_deleted_old USING btree (upi);


--
-- Name: xref_p43_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p43_not_deleted$ac" ON rnacen.xref_p43_not_deleted USING btree (ac);


--
-- Name: xref_p43_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p43_not_deleted$ac_old" ON rnacen.xref_p43_not_deleted_old USING btree (ac);


--
-- Name: xref_p43_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p43_not_deleted$created" ON rnacen.xref_p43_not_deleted USING btree (created);


--
-- Name: xref_p43_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p43_not_deleted$created_old" ON rnacen.xref_p43_not_deleted_old USING btree (created);


--
-- Name: xref_p43_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p43_not_deleted$dbid" ON rnacen.xref_p43_not_deleted USING btree (dbid);


--
-- Name: xref_p43_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p43_not_deleted$dbid_old" ON rnacen.xref_p43_not_deleted_old USING btree (dbid);


--
-- Name: xref_p43_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p43_not_deleted$id" ON rnacen.xref_p43_not_deleted USING btree (id);


--
-- Name: xref_p43_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p43_not_deleted$id_old" ON rnacen.xref_p43_not_deleted_old USING btree (id);


--
-- Name: xref_p43_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p43_not_deleted$last" ON rnacen.xref_p43_not_deleted USING btree (last);


--
-- Name: xref_p43_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p43_not_deleted$last_old" ON rnacen.xref_p43_not_deleted_old USING btree (last);


--
-- Name: xref_p43_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p43_not_deleted$taxid" ON rnacen.xref_p43_not_deleted USING btree (taxid);


--
-- Name: xref_p43_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p43_not_deleted$taxid_old" ON rnacen.xref_p43_not_deleted_old USING btree (taxid);


--
-- Name: xref_p43_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p43_not_deleted$upi" ON rnacen.xref_p43_not_deleted USING btree (upi);


--
-- Name: xref_p43_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p43_not_deleted$upi_old" ON rnacen.xref_p43_not_deleted_old USING btree (upi);


--
-- Name: xref_p44_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p44_deleted$ac" ON rnacen.xref_p44_deleted USING btree (ac);


--
-- Name: xref_p44_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p44_deleted$ac_old" ON rnacen.xref_p44_deleted_old USING btree (ac);


--
-- Name: xref_p44_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p44_deleted$created" ON rnacen.xref_p44_deleted USING btree (created);


--
-- Name: xref_p44_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p44_deleted$created_old" ON rnacen.xref_p44_deleted_old USING btree (created);


--
-- Name: xref_p44_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p44_deleted$dbid" ON rnacen.xref_p44_deleted USING btree (dbid);


--
-- Name: xref_p44_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p44_deleted$dbid_old" ON rnacen.xref_p44_deleted_old USING btree (dbid);


--
-- Name: xref_p44_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p44_deleted$id" ON rnacen.xref_p44_deleted USING btree (id);


--
-- Name: xref_p44_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p44_deleted$id_old" ON rnacen.xref_p44_deleted_old USING btree (id);


--
-- Name: xref_p44_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p44_deleted$last" ON rnacen.xref_p44_deleted USING btree (last);


--
-- Name: xref_p44_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p44_deleted$last_old" ON rnacen.xref_p44_deleted_old USING btree (last);


--
-- Name: xref_p44_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p44_deleted$taxid" ON rnacen.xref_p44_deleted USING btree (taxid);


--
-- Name: xref_p44_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p44_deleted$taxid_old" ON rnacen.xref_p44_deleted_old USING btree (taxid);


--
-- Name: xref_p44_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p44_deleted$upi" ON rnacen.xref_p44_deleted USING btree (upi);


--
-- Name: xref_p44_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p44_deleted$upi_old" ON rnacen.xref_p44_deleted_old USING btree (upi);


--
-- Name: xref_p44_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p44_not_deleted$ac" ON rnacen.xref_p44_not_deleted USING btree (ac);


--
-- Name: xref_p44_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p44_not_deleted$ac_old" ON rnacen.xref_p44_not_deleted_old USING btree (ac);


--
-- Name: xref_p44_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p44_not_deleted$created" ON rnacen.xref_p44_not_deleted USING btree (created);


--
-- Name: xref_p44_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p44_not_deleted$created_old" ON rnacen.xref_p44_not_deleted_old USING btree (created);


--
-- Name: xref_p44_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p44_not_deleted$dbid" ON rnacen.xref_p44_not_deleted USING btree (dbid);


--
-- Name: xref_p44_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p44_not_deleted$dbid_old" ON rnacen.xref_p44_not_deleted_old USING btree (dbid);


--
-- Name: xref_p44_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p44_not_deleted$id" ON rnacen.xref_p44_not_deleted USING btree (id);


--
-- Name: xref_p44_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p44_not_deleted$id_old" ON rnacen.xref_p44_not_deleted_old USING btree (id);


--
-- Name: xref_p44_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p44_not_deleted$last" ON rnacen.xref_p44_not_deleted USING btree (last);


--
-- Name: xref_p44_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p44_not_deleted$last_old" ON rnacen.xref_p44_not_deleted_old USING btree (last);


--
-- Name: xref_p44_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p44_not_deleted$taxid" ON rnacen.xref_p44_not_deleted USING btree (taxid);


--
-- Name: xref_p44_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p44_not_deleted$taxid_old" ON rnacen.xref_p44_not_deleted_old USING btree (taxid);


--
-- Name: xref_p44_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p44_not_deleted$upi" ON rnacen.xref_p44_not_deleted USING btree (upi);


--
-- Name: xref_p44_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p44_not_deleted$upi_old" ON rnacen.xref_p44_not_deleted_old USING btree (upi);


--
-- Name: xref_p45_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p45_deleted$ac" ON rnacen.xref_p45_deleted USING btree (ac);


--
-- Name: xref_p45_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p45_deleted$ac_old" ON rnacen.xref_p45_deleted_old USING btree (ac);


--
-- Name: xref_p45_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p45_deleted$created" ON rnacen.xref_p45_deleted USING btree (created);


--
-- Name: xref_p45_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p45_deleted$created_old" ON rnacen.xref_p45_deleted_old USING btree (created);


--
-- Name: xref_p45_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p45_deleted$dbid" ON rnacen.xref_p45_deleted USING btree (dbid);


--
-- Name: xref_p45_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p45_deleted$dbid_old" ON rnacen.xref_p45_deleted_old USING btree (dbid);


--
-- Name: xref_p45_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p45_deleted$id" ON rnacen.xref_p45_deleted USING btree (id);


--
-- Name: xref_p45_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p45_deleted$id_old" ON rnacen.xref_p45_deleted_old USING btree (id);


--
-- Name: xref_p45_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p45_deleted$last" ON rnacen.xref_p45_deleted USING btree (last);


--
-- Name: xref_p45_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p45_deleted$last_old" ON rnacen.xref_p45_deleted_old USING btree (last);


--
-- Name: xref_p45_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p45_deleted$taxid" ON rnacen.xref_p45_deleted USING btree (taxid);


--
-- Name: xref_p45_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p45_deleted$taxid_old" ON rnacen.xref_p45_deleted_old USING btree (taxid);


--
-- Name: xref_p45_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p45_deleted$upi" ON rnacen.xref_p45_deleted USING btree (upi);


--
-- Name: xref_p45_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p45_deleted$upi_old" ON rnacen.xref_p45_deleted_old USING btree (upi);


--
-- Name: xref_p45_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p45_not_deleted$ac" ON rnacen.xref_p45_not_deleted USING btree (ac);


--
-- Name: xref_p45_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p45_not_deleted$ac_old" ON rnacen.xref_p45_not_deleted_old USING btree (ac);


--
-- Name: xref_p45_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p45_not_deleted$created" ON rnacen.xref_p45_not_deleted USING btree (created);


--
-- Name: xref_p45_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p45_not_deleted$created_old" ON rnacen.xref_p45_not_deleted_old USING btree (created);


--
-- Name: xref_p45_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p45_not_deleted$dbid" ON rnacen.xref_p45_not_deleted USING btree (dbid);


--
-- Name: xref_p45_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p45_not_deleted$dbid_old" ON rnacen.xref_p45_not_deleted_old USING btree (dbid);


--
-- Name: xref_p45_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p45_not_deleted$id" ON rnacen.xref_p45_not_deleted USING btree (id);


--
-- Name: xref_p45_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p45_not_deleted$id_old" ON rnacen.xref_p45_not_deleted_old USING btree (id);


--
-- Name: xref_p45_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p45_not_deleted$last" ON rnacen.xref_p45_not_deleted USING btree (last);


--
-- Name: xref_p45_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p45_not_deleted$last_old" ON rnacen.xref_p45_not_deleted_old USING btree (last);


--
-- Name: xref_p45_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p45_not_deleted$taxid" ON rnacen.xref_p45_not_deleted USING btree (taxid);


--
-- Name: xref_p45_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p45_not_deleted$taxid_old" ON rnacen.xref_p45_not_deleted_old USING btree (taxid);


--
-- Name: xref_p45_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p45_not_deleted$upi" ON rnacen.xref_p45_not_deleted USING btree (upi);


--
-- Name: xref_p45_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p45_not_deleted$upi_old" ON rnacen.xref_p45_not_deleted_old USING btree (upi);


--
-- Name: xref_p46_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p46_deleted$ac" ON rnacen.xref_p46_deleted USING btree (ac);


--
-- Name: xref_p46_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p46_deleted$ac_old" ON rnacen.xref_p46_deleted_old USING btree (ac);


--
-- Name: xref_p46_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p46_deleted$created" ON rnacen.xref_p46_deleted USING btree (created);


--
-- Name: xref_p46_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p46_deleted$created_old" ON rnacen.xref_p46_deleted_old USING btree (created);


--
-- Name: xref_p46_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p46_deleted$dbid" ON rnacen.xref_p46_deleted USING btree (dbid);


--
-- Name: xref_p46_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p46_deleted$dbid_old" ON rnacen.xref_p46_deleted_old USING btree (dbid);


--
-- Name: xref_p46_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p46_deleted$id" ON rnacen.xref_p46_deleted USING btree (id);


--
-- Name: xref_p46_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p46_deleted$id_old" ON rnacen.xref_p46_deleted_old USING btree (id);


--
-- Name: xref_p46_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p46_deleted$last" ON rnacen.xref_p46_deleted USING btree (last);


--
-- Name: xref_p46_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p46_deleted$last_old" ON rnacen.xref_p46_deleted_old USING btree (last);


--
-- Name: xref_p46_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p46_deleted$taxid" ON rnacen.xref_p46_deleted USING btree (taxid);


--
-- Name: xref_p46_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p46_deleted$taxid_old" ON rnacen.xref_p46_deleted_old USING btree (taxid);


--
-- Name: xref_p46_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p46_deleted$upi" ON rnacen.xref_p46_deleted USING btree (upi);


--
-- Name: xref_p46_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p46_deleted$upi_old" ON rnacen.xref_p46_deleted_old USING btree (upi);


--
-- Name: xref_p46_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p46_not_deleted$ac" ON rnacen.xref_p46_not_deleted USING btree (ac);


--
-- Name: xref_p46_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p46_not_deleted$ac_old" ON rnacen.xref_p46_not_deleted_old USING btree (ac);


--
-- Name: xref_p46_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p46_not_deleted$created" ON rnacen.xref_p46_not_deleted USING btree (created);


--
-- Name: xref_p46_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p46_not_deleted$created_old" ON rnacen.xref_p46_not_deleted_old USING btree (created);


--
-- Name: xref_p46_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p46_not_deleted$dbid" ON rnacen.xref_p46_not_deleted USING btree (dbid);


--
-- Name: xref_p46_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p46_not_deleted$dbid_old" ON rnacen.xref_p46_not_deleted_old USING btree (dbid);


--
-- Name: xref_p46_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p46_not_deleted$id" ON rnacen.xref_p46_not_deleted USING btree (id);


--
-- Name: xref_p46_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p46_not_deleted$id_old" ON rnacen.xref_p46_not_deleted_old USING btree (id);


--
-- Name: xref_p46_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p46_not_deleted$last" ON rnacen.xref_p46_not_deleted USING btree (last);


--
-- Name: xref_p46_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p46_not_deleted$last_old" ON rnacen.xref_p46_not_deleted_old USING btree (last);


--
-- Name: xref_p46_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p46_not_deleted$taxid" ON rnacen.xref_p46_not_deleted USING btree (taxid);


--
-- Name: xref_p46_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p46_not_deleted$taxid_old" ON rnacen.xref_p46_not_deleted_old USING btree (taxid);


--
-- Name: xref_p46_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p46_not_deleted$upi" ON rnacen.xref_p46_not_deleted USING btree (upi);


--
-- Name: xref_p46_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p46_not_deleted$upi_old" ON rnacen.xref_p46_not_deleted_old USING btree (upi);


--
-- Name: xref_p47_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p47_deleted$ac" ON rnacen.xref_p47_deleted USING btree (ac);


--
-- Name: xref_p47_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p47_deleted$ac_old" ON rnacen.xref_p47_deleted_old USING btree (ac);


--
-- Name: xref_p47_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p47_deleted$created" ON rnacen.xref_p47_deleted USING btree (created);


--
-- Name: xref_p47_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p47_deleted$created_old" ON rnacen.xref_p47_deleted_old USING btree (created);


--
-- Name: xref_p47_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p47_deleted$dbid" ON rnacen.xref_p47_deleted USING btree (dbid);


--
-- Name: xref_p47_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p47_deleted$dbid_old" ON rnacen.xref_p47_deleted_old USING btree (dbid);


--
-- Name: xref_p47_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p47_deleted$id" ON rnacen.xref_p47_deleted USING btree (id);


--
-- Name: xref_p47_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p47_deleted$id_old" ON rnacen.xref_p47_deleted_old USING btree (id);


--
-- Name: xref_p47_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p47_deleted$last" ON rnacen.xref_p47_deleted USING btree (last);


--
-- Name: xref_p47_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p47_deleted$last_old" ON rnacen.xref_p47_deleted_old USING btree (last);


--
-- Name: xref_p47_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p47_deleted$taxid" ON rnacen.xref_p47_deleted USING btree (taxid);


--
-- Name: xref_p47_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p47_deleted$taxid_old" ON rnacen.xref_p47_deleted_old USING btree (taxid);


--
-- Name: xref_p47_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p47_deleted$upi" ON rnacen.xref_p47_deleted USING btree (upi);


--
-- Name: xref_p47_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p47_deleted$upi_old" ON rnacen.xref_p47_deleted_old USING btree (upi);


--
-- Name: xref_p47_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p47_not_deleted$ac" ON rnacen.xref_p47_not_deleted USING btree (ac);


--
-- Name: xref_p47_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p47_not_deleted$ac_old" ON rnacen.xref_p47_not_deleted_old USING btree (ac);


--
-- Name: xref_p47_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p47_not_deleted$created" ON rnacen.xref_p47_not_deleted USING btree (created);


--
-- Name: xref_p47_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p47_not_deleted$created_old" ON rnacen.xref_p47_not_deleted_old USING btree (created);


--
-- Name: xref_p47_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p47_not_deleted$dbid" ON rnacen.xref_p47_not_deleted USING btree (dbid);


--
-- Name: xref_p47_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p47_not_deleted$dbid_old" ON rnacen.xref_p47_not_deleted_old USING btree (dbid);


--
-- Name: xref_p47_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p47_not_deleted$id" ON rnacen.xref_p47_not_deleted USING btree (id);


--
-- Name: xref_p47_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p47_not_deleted$id_old" ON rnacen.xref_p47_not_deleted_old USING btree (id);


--
-- Name: xref_p47_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p47_not_deleted$last" ON rnacen.xref_p47_not_deleted USING btree (last);


--
-- Name: xref_p47_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p47_not_deleted$last_old" ON rnacen.xref_p47_not_deleted_old USING btree (last);


--
-- Name: xref_p47_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p47_not_deleted$taxid" ON rnacen.xref_p47_not_deleted USING btree (taxid);


--
-- Name: xref_p47_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p47_not_deleted$taxid_old" ON rnacen.xref_p47_not_deleted_old USING btree (taxid);


--
-- Name: xref_p47_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p47_not_deleted$upi" ON rnacen.xref_p47_not_deleted USING btree (upi);


--
-- Name: xref_p47_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p47_not_deleted$upi_old" ON rnacen.xref_p47_not_deleted_old USING btree (upi);


--
-- Name: xref_p48_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p48_deleted$ac" ON rnacen.xref_p48_deleted USING btree (ac);


--
-- Name: xref_p48_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p48_deleted$ac_old" ON rnacen.xref_p48_deleted_old USING btree (ac);


--
-- Name: xref_p48_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p48_deleted$created" ON rnacen.xref_p48_deleted USING btree (created);


--
-- Name: xref_p48_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p48_deleted$created_old" ON rnacen.xref_p48_deleted_old USING btree (created);


--
-- Name: xref_p48_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p48_deleted$dbid" ON rnacen.xref_p48_deleted USING btree (dbid);


--
-- Name: xref_p48_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p48_deleted$dbid_old" ON rnacen.xref_p48_deleted_old USING btree (dbid);


--
-- Name: xref_p48_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p48_deleted$id" ON rnacen.xref_p48_deleted USING btree (id);


--
-- Name: xref_p48_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p48_deleted$id_old" ON rnacen.xref_p48_deleted_old USING btree (id);


--
-- Name: xref_p48_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p48_deleted$last" ON rnacen.xref_p48_deleted USING btree (last);


--
-- Name: xref_p48_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p48_deleted$last_old" ON rnacen.xref_p48_deleted_old USING btree (last);


--
-- Name: xref_p48_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p48_deleted$taxid" ON rnacen.xref_p48_deleted USING btree (taxid);


--
-- Name: xref_p48_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p48_deleted$taxid_old" ON rnacen.xref_p48_deleted_old USING btree (taxid);


--
-- Name: xref_p48_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p48_deleted$upi" ON rnacen.xref_p48_deleted USING btree (upi);


--
-- Name: xref_p48_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p48_deleted$upi_old" ON rnacen.xref_p48_deleted_old USING btree (upi);


--
-- Name: xref_p48_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p48_not_deleted$ac" ON rnacen.xref_p48_not_deleted USING btree (ac);


--
-- Name: xref_p48_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p48_not_deleted$ac_old" ON rnacen.xref_p48_not_deleted_old USING btree (ac);


--
-- Name: xref_p48_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p48_not_deleted$created" ON rnacen.xref_p48_not_deleted USING btree (created);


--
-- Name: xref_p48_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p48_not_deleted$created_old" ON rnacen.xref_p48_not_deleted_old USING btree (created);


--
-- Name: xref_p48_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p48_not_deleted$dbid" ON rnacen.xref_p48_not_deleted USING btree (dbid);


--
-- Name: xref_p48_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p48_not_deleted$dbid_old" ON rnacen.xref_p48_not_deleted_old USING btree (dbid);


--
-- Name: xref_p48_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p48_not_deleted$id" ON rnacen.xref_p48_not_deleted USING btree (id);


--
-- Name: xref_p48_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p48_not_deleted$id_old" ON rnacen.xref_p48_not_deleted_old USING btree (id);


--
-- Name: xref_p48_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p48_not_deleted$last" ON rnacen.xref_p48_not_deleted USING btree (last);


--
-- Name: xref_p48_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p48_not_deleted$last_old" ON rnacen.xref_p48_not_deleted_old USING btree (last);


--
-- Name: xref_p48_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p48_not_deleted$taxid" ON rnacen.xref_p48_not_deleted USING btree (taxid);


--
-- Name: xref_p48_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p48_not_deleted$taxid_old" ON rnacen.xref_p48_not_deleted_old USING btree (taxid);


--
-- Name: xref_p48_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p48_not_deleted$upi" ON rnacen.xref_p48_not_deleted USING btree (upi);


--
-- Name: xref_p48_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p48_not_deleted$upi_old" ON rnacen.xref_p48_not_deleted_old USING btree (upi);


--
-- Name: xref_p49_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p49_deleted$ac" ON rnacen.xref_p49_deleted USING btree (ac);


--
-- Name: xref_p49_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p49_deleted$ac_old" ON rnacen.xref_p49_deleted_old USING btree (ac);


--
-- Name: xref_p49_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p49_deleted$created" ON rnacen.xref_p49_deleted USING btree (created);


--
-- Name: xref_p49_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p49_deleted$created_old" ON rnacen.xref_p49_deleted_old USING btree (created);


--
-- Name: xref_p49_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p49_deleted$dbid" ON rnacen.xref_p49_deleted USING btree (dbid);


--
-- Name: xref_p49_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p49_deleted$dbid_old" ON rnacen.xref_p49_deleted_old USING btree (dbid);


--
-- Name: xref_p49_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p49_deleted$id" ON rnacen.xref_p49_deleted USING btree (id);


--
-- Name: xref_p49_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p49_deleted$id_old" ON rnacen.xref_p49_deleted_old USING btree (id);


--
-- Name: xref_p49_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p49_deleted$last" ON rnacen.xref_p49_deleted USING btree (last);


--
-- Name: xref_p49_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p49_deleted$last_old" ON rnacen.xref_p49_deleted_old USING btree (last);


--
-- Name: xref_p49_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p49_deleted$taxid" ON rnacen.xref_p49_deleted USING btree (taxid);


--
-- Name: xref_p49_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p49_deleted$taxid_old" ON rnacen.xref_p49_deleted_old USING btree (taxid);


--
-- Name: xref_p49_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p49_deleted$upi" ON rnacen.xref_p49_deleted USING btree (upi);


--
-- Name: xref_p49_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p49_deleted$upi_old" ON rnacen.xref_p49_deleted_old USING btree (upi);


--
-- Name: xref_p49_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p49_not_deleted$ac" ON rnacen.xref_p49_not_deleted USING btree (ac);


--
-- Name: xref_p49_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p49_not_deleted$ac_old" ON rnacen.xref_p49_not_deleted_old USING btree (ac);


--
-- Name: xref_p49_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p49_not_deleted$created" ON rnacen.xref_p49_not_deleted USING btree (created);


--
-- Name: xref_p49_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p49_not_deleted$created_old" ON rnacen.xref_p49_not_deleted_old USING btree (created);


--
-- Name: xref_p49_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p49_not_deleted$dbid" ON rnacen.xref_p49_not_deleted USING btree (dbid);


--
-- Name: xref_p49_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p49_not_deleted$dbid_old" ON rnacen.xref_p49_not_deleted_old USING btree (dbid);


--
-- Name: xref_p49_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p49_not_deleted$id" ON rnacen.xref_p49_not_deleted USING btree (id);


--
-- Name: xref_p49_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p49_not_deleted$id_old" ON rnacen.xref_p49_not_deleted_old USING btree (id);


--
-- Name: xref_p49_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p49_not_deleted$last" ON rnacen.xref_p49_not_deleted USING btree (last);


--
-- Name: xref_p49_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p49_not_deleted$last_old" ON rnacen.xref_p49_not_deleted_old USING btree (last);


--
-- Name: xref_p49_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p49_not_deleted$taxid" ON rnacen.xref_p49_not_deleted USING btree (taxid);


--
-- Name: xref_p49_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p49_not_deleted$taxid_old" ON rnacen.xref_p49_not_deleted_old USING btree (taxid);


--
-- Name: xref_p49_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p49_not_deleted$upi" ON rnacen.xref_p49_not_deleted USING btree (upi);


--
-- Name: xref_p49_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p49_not_deleted$upi_old" ON rnacen.xref_p49_not_deleted_old USING btree (upi);


--
-- Name: xref_p4_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p4_deleted$ac" ON rnacen.xref_p4_deleted USING btree (ac);


--
-- Name: xref_p4_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p4_deleted$ac_old" ON rnacen.xref_p4_deleted_old USING btree (ac);


--
-- Name: xref_p4_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p4_deleted$created" ON rnacen.xref_p4_deleted USING btree (created);


--
-- Name: xref_p4_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p4_deleted$created_old" ON rnacen.xref_p4_deleted_old USING btree (created);


--
-- Name: xref_p4_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p4_deleted$dbid" ON rnacen.xref_p4_deleted USING btree (dbid);


--
-- Name: xref_p4_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p4_deleted$dbid_old" ON rnacen.xref_p4_deleted_old USING btree (dbid);


--
-- Name: xref_p4_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p4_deleted$id" ON rnacen.xref_p4_deleted USING btree (id);


--
-- Name: xref_p4_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p4_deleted$id_old" ON rnacen.xref_p4_deleted_old USING btree (id);


--
-- Name: xref_p4_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p4_deleted$last" ON rnacen.xref_p4_deleted USING btree (last);


--
-- Name: xref_p4_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p4_deleted$last_old" ON rnacen.xref_p4_deleted_old USING btree (last);


--
-- Name: xref_p4_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p4_deleted$taxid" ON rnacen.xref_p4_deleted USING btree (taxid);


--
-- Name: xref_p4_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p4_deleted$taxid_old" ON rnacen.xref_p4_deleted_old USING btree (taxid);


--
-- Name: xref_p4_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p4_deleted$upi" ON rnacen.xref_p4_deleted USING btree (upi);


--
-- Name: xref_p4_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p4_deleted$upi_old" ON rnacen.xref_p4_deleted_old USING btree (upi);


--
-- Name: xref_p4_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p4_not_deleted$ac" ON rnacen.xref_p4_not_deleted USING btree (ac);


--
-- Name: xref_p4_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p4_not_deleted$ac_old" ON rnacen.xref_p4_not_deleted_old USING btree (ac);


--
-- Name: xref_p4_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p4_not_deleted$created" ON rnacen.xref_p4_not_deleted USING btree (created);


--
-- Name: xref_p4_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p4_not_deleted$created_old" ON rnacen.xref_p4_not_deleted_old USING btree (created);


--
-- Name: xref_p4_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p4_not_deleted$dbid" ON rnacen.xref_p4_not_deleted USING btree (dbid);


--
-- Name: xref_p4_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p4_not_deleted$dbid_old" ON rnacen.xref_p4_not_deleted_old USING btree (dbid);


--
-- Name: xref_p4_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p4_not_deleted$id" ON rnacen.xref_p4_not_deleted USING btree (id);


--
-- Name: xref_p4_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p4_not_deleted$id_old" ON rnacen.xref_p4_not_deleted_old USING btree (id);


--
-- Name: xref_p4_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p4_not_deleted$last" ON rnacen.xref_p4_not_deleted USING btree (last);


--
-- Name: xref_p4_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p4_not_deleted$last_old" ON rnacen.xref_p4_not_deleted_old USING btree (last);


--
-- Name: xref_p4_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p4_not_deleted$taxid" ON rnacen.xref_p4_not_deleted USING btree (taxid);


--
-- Name: xref_p4_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p4_not_deleted$taxid_old" ON rnacen.xref_p4_not_deleted_old USING btree (taxid);


--
-- Name: xref_p4_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p4_not_deleted$upi" ON rnacen.xref_p4_not_deleted USING btree (upi);


--
-- Name: xref_p4_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p4_not_deleted$upi_old" ON rnacen.xref_p4_not_deleted_old USING btree (upi);


--
-- Name: xref_p50_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p50_deleted$ac" ON rnacen.xref_p50_deleted USING btree (ac);


--
-- Name: xref_p50_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p50_deleted$ac_old" ON rnacen.xref_p50_deleted_old USING btree (ac);


--
-- Name: xref_p50_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p50_deleted$created" ON rnacen.xref_p50_deleted USING btree (created);


--
-- Name: xref_p50_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p50_deleted$created_old" ON rnacen.xref_p50_deleted_old USING btree (created);


--
-- Name: xref_p50_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p50_deleted$dbid" ON rnacen.xref_p50_deleted USING btree (dbid);


--
-- Name: xref_p50_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p50_deleted$dbid_old" ON rnacen.xref_p50_deleted_old USING btree (dbid);


--
-- Name: xref_p50_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p50_deleted$id" ON rnacen.xref_p50_deleted USING btree (id);


--
-- Name: xref_p50_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p50_deleted$id_old" ON rnacen.xref_p50_deleted_old USING btree (id);


--
-- Name: xref_p50_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p50_deleted$last" ON rnacen.xref_p50_deleted USING btree (last);


--
-- Name: xref_p50_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p50_deleted$last_old" ON rnacen.xref_p50_deleted_old USING btree (last);


--
-- Name: xref_p50_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p50_deleted$taxid" ON rnacen.xref_p50_deleted USING btree (taxid);


--
-- Name: xref_p50_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p50_deleted$taxid_old" ON rnacen.xref_p50_deleted_old USING btree (taxid);


--
-- Name: xref_p50_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p50_deleted$upi" ON rnacen.xref_p50_deleted USING btree (upi);


--
-- Name: xref_p50_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p50_deleted$upi_old" ON rnacen.xref_p50_deleted_old USING btree (upi);


--
-- Name: xref_p50_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p50_not_deleted$ac" ON rnacen.xref_p50_not_deleted USING btree (ac);


--
-- Name: xref_p50_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p50_not_deleted$ac_old" ON rnacen.xref_p50_not_deleted_old USING btree (ac);


--
-- Name: xref_p50_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p50_not_deleted$created" ON rnacen.xref_p50_not_deleted USING btree (created);


--
-- Name: xref_p50_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p50_not_deleted$created_old" ON rnacen.xref_p50_not_deleted_old USING btree (created);


--
-- Name: xref_p50_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p50_not_deleted$dbid" ON rnacen.xref_p50_not_deleted USING btree (dbid);


--
-- Name: xref_p50_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p50_not_deleted$dbid_old" ON rnacen.xref_p50_not_deleted_old USING btree (dbid);


--
-- Name: xref_p50_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p50_not_deleted$id" ON rnacen.xref_p50_not_deleted USING btree (id);


--
-- Name: xref_p50_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p50_not_deleted$id_old" ON rnacen.xref_p50_not_deleted_old USING btree (id);


--
-- Name: xref_p50_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p50_not_deleted$last" ON rnacen.xref_p50_not_deleted USING btree (last);


--
-- Name: xref_p50_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p50_not_deleted$last_old" ON rnacen.xref_p50_not_deleted_old USING btree (last);


--
-- Name: xref_p50_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p50_not_deleted$taxid" ON rnacen.xref_p50_not_deleted USING btree (taxid);


--
-- Name: xref_p50_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p50_not_deleted$taxid_old" ON rnacen.xref_p50_not_deleted_old USING btree (taxid);


--
-- Name: xref_p50_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p50_not_deleted$upi" ON rnacen.xref_p50_not_deleted USING btree (upi);


--
-- Name: xref_p50_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p50_not_deleted$upi_old" ON rnacen.xref_p50_not_deleted_old USING btree (upi);


--
-- Name: xref_p51_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p51_deleted$ac" ON rnacen.xref_p51_deleted USING btree (ac);


--
-- Name: xref_p51_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p51_deleted$ac_old" ON rnacen.xref_p51_deleted_old USING btree (ac);


--
-- Name: xref_p51_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p51_deleted$created" ON rnacen.xref_p51_deleted USING btree (created);


--
-- Name: xref_p51_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p51_deleted$created_old" ON rnacen.xref_p51_deleted_old USING btree (created);


--
-- Name: xref_p51_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p51_deleted$dbid" ON rnacen.xref_p51_deleted USING btree (dbid);


--
-- Name: xref_p51_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p51_deleted$dbid_old" ON rnacen.xref_p51_deleted_old USING btree (dbid);


--
-- Name: xref_p51_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p51_deleted$id" ON rnacen.xref_p51_deleted USING btree (id);


--
-- Name: xref_p51_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p51_deleted$id_old" ON rnacen.xref_p51_deleted_old USING btree (id);


--
-- Name: xref_p51_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p51_deleted$last" ON rnacen.xref_p51_deleted USING btree (last);


--
-- Name: xref_p51_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p51_deleted$last_old" ON rnacen.xref_p51_deleted_old USING btree (last);


--
-- Name: xref_p51_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p51_deleted$taxid" ON rnacen.xref_p51_deleted USING btree (taxid);


--
-- Name: xref_p51_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p51_deleted$taxid_old" ON rnacen.xref_p51_deleted_old USING btree (taxid);


--
-- Name: xref_p51_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p51_deleted$upi" ON rnacen.xref_p51_deleted USING btree (upi);


--
-- Name: xref_p51_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p51_deleted$upi_old" ON rnacen.xref_p51_deleted_old USING btree (upi);


--
-- Name: xref_p51_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p51_not_deleted$ac" ON rnacen.xref_p51_not_deleted USING btree (ac);


--
-- Name: xref_p51_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p51_not_deleted$ac_old" ON rnacen.xref_p51_not_deleted_old USING btree (ac);


--
-- Name: xref_p51_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p51_not_deleted$created" ON rnacen.xref_p51_not_deleted USING btree (created);


--
-- Name: xref_p51_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p51_not_deleted$created_old" ON rnacen.xref_p51_not_deleted_old USING btree (created);


--
-- Name: xref_p51_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p51_not_deleted$dbid" ON rnacen.xref_p51_not_deleted USING btree (dbid);


--
-- Name: xref_p51_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p51_not_deleted$dbid_old" ON rnacen.xref_p51_not_deleted_old USING btree (dbid);


--
-- Name: xref_p51_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p51_not_deleted$id" ON rnacen.xref_p51_not_deleted USING btree (id);


--
-- Name: xref_p51_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p51_not_deleted$id_old" ON rnacen.xref_p51_not_deleted_old USING btree (id);


--
-- Name: xref_p51_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p51_not_deleted$last" ON rnacen.xref_p51_not_deleted USING btree (last);


--
-- Name: xref_p51_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p51_not_deleted$last_old" ON rnacen.xref_p51_not_deleted_old USING btree (last);


--
-- Name: xref_p51_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p51_not_deleted$taxid" ON rnacen.xref_p51_not_deleted USING btree (taxid);


--
-- Name: xref_p51_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p51_not_deleted$taxid_old" ON rnacen.xref_p51_not_deleted_old USING btree (taxid);


--
-- Name: xref_p51_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p51_not_deleted$upi" ON rnacen.xref_p51_not_deleted USING btree (upi);


--
-- Name: xref_p51_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p51_not_deleted$upi_old" ON rnacen.xref_p51_not_deleted_old USING btree (upi);


--
-- Name: xref_p52_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p52_deleted$ac" ON rnacen.xref_p52_deleted USING btree (ac);


--
-- Name: xref_p52_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p52_deleted$ac_old" ON rnacen.xref_p52_deleted_old USING btree (ac);


--
-- Name: xref_p52_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p52_deleted$created" ON rnacen.xref_p52_deleted USING btree (created);


--
-- Name: xref_p52_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p52_deleted$created_old" ON rnacen.xref_p52_deleted_old USING btree (created);


--
-- Name: xref_p52_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p52_deleted$dbid" ON rnacen.xref_p52_deleted USING btree (dbid);


--
-- Name: xref_p52_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p52_deleted$dbid_old" ON rnacen.xref_p52_deleted_old USING btree (dbid);


--
-- Name: xref_p52_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p52_deleted$id" ON rnacen.xref_p52_deleted USING btree (id);


--
-- Name: xref_p52_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p52_deleted$id_old" ON rnacen.xref_p52_deleted_old USING btree (id);


--
-- Name: xref_p52_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p52_deleted$last" ON rnacen.xref_p52_deleted USING btree (last);


--
-- Name: xref_p52_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p52_deleted$last_old" ON rnacen.xref_p52_deleted_old USING btree (last);


--
-- Name: xref_p52_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p52_deleted$taxid" ON rnacen.xref_p52_deleted USING btree (taxid);


--
-- Name: xref_p52_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p52_deleted$taxid_old" ON rnacen.xref_p52_deleted_old USING btree (taxid);


--
-- Name: xref_p52_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p52_deleted$upi" ON rnacen.xref_p52_deleted USING btree (upi);


--
-- Name: xref_p52_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p52_deleted$upi_old" ON rnacen.xref_p52_deleted_old USING btree (upi);


--
-- Name: xref_p52_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p52_not_deleted$ac" ON rnacen.xref_p52_not_deleted USING btree (ac);


--
-- Name: xref_p52_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p52_not_deleted$ac_old" ON rnacen.xref_p52_not_deleted_old USING btree (ac);


--
-- Name: xref_p52_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p52_not_deleted$created" ON rnacen.xref_p52_not_deleted USING btree (created);


--
-- Name: xref_p52_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p52_not_deleted$created_old" ON rnacen.xref_p52_not_deleted_old USING btree (created);


--
-- Name: xref_p52_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p52_not_deleted$dbid" ON rnacen.xref_p52_not_deleted USING btree (dbid);


--
-- Name: xref_p52_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p52_not_deleted$dbid_old" ON rnacen.xref_p52_not_deleted_old USING btree (dbid);


--
-- Name: xref_p52_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p52_not_deleted$id" ON rnacen.xref_p52_not_deleted USING btree (id);


--
-- Name: xref_p52_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p52_not_deleted$id_old" ON rnacen.xref_p52_not_deleted_old USING btree (id);


--
-- Name: xref_p52_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p52_not_deleted$last" ON rnacen.xref_p52_not_deleted USING btree (last);


--
-- Name: xref_p52_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p52_not_deleted$last_old" ON rnacen.xref_p52_not_deleted_old USING btree (last);


--
-- Name: xref_p52_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p52_not_deleted$taxid" ON rnacen.xref_p52_not_deleted USING btree (taxid);


--
-- Name: xref_p52_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p52_not_deleted$taxid_old" ON rnacen.xref_p52_not_deleted_old USING btree (taxid);


--
-- Name: xref_p52_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p52_not_deleted$upi" ON rnacen.xref_p52_not_deleted USING btree (upi);


--
-- Name: xref_p52_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p52_not_deleted$upi_old" ON rnacen.xref_p52_not_deleted_old USING btree (upi);


--
-- Name: xref_p53_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p53_deleted$ac" ON rnacen.xref_p53_deleted USING btree (ac);


--
-- Name: xref_p53_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p53_deleted$ac_old" ON rnacen.xref_p53_deleted_old USING btree (ac);


--
-- Name: xref_p53_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p53_deleted$created" ON rnacen.xref_p53_deleted USING btree (created);


--
-- Name: xref_p53_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p53_deleted$created_old" ON rnacen.xref_p53_deleted_old USING btree (created);


--
-- Name: xref_p53_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p53_deleted$dbid" ON rnacen.xref_p53_deleted USING btree (dbid);


--
-- Name: xref_p53_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p53_deleted$dbid_old" ON rnacen.xref_p53_deleted_old USING btree (dbid);


--
-- Name: xref_p53_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p53_deleted$id" ON rnacen.xref_p53_deleted USING btree (id);


--
-- Name: xref_p53_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p53_deleted$id_old" ON rnacen.xref_p53_deleted_old USING btree (id);


--
-- Name: xref_p53_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p53_deleted$last" ON rnacen.xref_p53_deleted USING btree (last);


--
-- Name: xref_p53_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p53_deleted$last_old" ON rnacen.xref_p53_deleted_old USING btree (last);


--
-- Name: xref_p53_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p53_deleted$taxid" ON rnacen.xref_p53_deleted USING btree (taxid);


--
-- Name: xref_p53_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p53_deleted$taxid_old" ON rnacen.xref_p53_deleted_old USING btree (taxid);


--
-- Name: xref_p53_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p53_deleted$upi" ON rnacen.xref_p53_deleted USING btree (upi);


--
-- Name: xref_p53_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p53_deleted$upi_old" ON rnacen.xref_p53_deleted_old USING btree (upi);


--
-- Name: xref_p53_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p53_not_deleted$ac" ON rnacen.xref_p53_not_deleted USING btree (ac);


--
-- Name: xref_p53_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p53_not_deleted$ac_old" ON rnacen.xref_p53_not_deleted_old USING btree (ac);


--
-- Name: xref_p53_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p53_not_deleted$created" ON rnacen.xref_p53_not_deleted USING btree (created);


--
-- Name: xref_p53_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p53_not_deleted$created_old" ON rnacen.xref_p53_not_deleted_old USING btree (created);


--
-- Name: xref_p53_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p53_not_deleted$dbid" ON rnacen.xref_p53_not_deleted USING btree (dbid);


--
-- Name: xref_p53_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p53_not_deleted$dbid_old" ON rnacen.xref_p53_not_deleted_old USING btree (dbid);


--
-- Name: xref_p53_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p53_not_deleted$id" ON rnacen.xref_p53_not_deleted USING btree (id);


--
-- Name: xref_p53_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p53_not_deleted$id_old" ON rnacen.xref_p53_not_deleted_old USING btree (id);


--
-- Name: xref_p53_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p53_not_deleted$last" ON rnacen.xref_p53_not_deleted USING btree (last);


--
-- Name: xref_p53_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p53_not_deleted$last_old" ON rnacen.xref_p53_not_deleted_old USING btree (last);


--
-- Name: xref_p53_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p53_not_deleted$taxid" ON rnacen.xref_p53_not_deleted USING btree (taxid);


--
-- Name: xref_p53_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p53_not_deleted$taxid_old" ON rnacen.xref_p53_not_deleted_old USING btree (taxid);


--
-- Name: xref_p53_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p53_not_deleted$upi" ON rnacen.xref_p53_not_deleted USING btree (upi);


--
-- Name: xref_p53_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p53_not_deleted$upi_old" ON rnacen.xref_p53_not_deleted_old USING btree (upi);


--
-- Name: xref_p54_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p54_deleted$ac" ON rnacen.xref_p54_deleted USING btree (ac);


--
-- Name: xref_p54_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p54_deleted$created" ON rnacen.xref_p54_deleted USING btree (created);


--
-- Name: xref_p54_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p54_deleted$dbid" ON rnacen.xref_p54_deleted USING btree (dbid);


--
-- Name: xref_p54_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p54_deleted$id" ON rnacen.xref_p54_deleted USING btree (id);


--
-- Name: xref_p54_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p54_deleted$last" ON rnacen.xref_p54_deleted USING btree (last);


--
-- Name: xref_p54_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p54_deleted$taxid" ON rnacen.xref_p54_deleted USING btree (taxid);


--
-- Name: xref_p54_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p54_deleted$upi" ON rnacen.xref_p54_deleted USING btree (upi);


--
-- Name: xref_p54_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p54_not_deleted$ac" ON rnacen.xref_p54_not_deleted USING btree (ac);


--
-- Name: xref_p54_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p54_not_deleted$created" ON rnacen.xref_p54_not_deleted USING btree (created);


--
-- Name: xref_p54_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p54_not_deleted$dbid" ON rnacen.xref_p54_not_deleted USING btree (dbid);


--
-- Name: xref_p54_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p54_not_deleted$id" ON rnacen.xref_p54_not_deleted USING btree (id);


--
-- Name: xref_p54_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p54_not_deleted$last" ON rnacen.xref_p54_not_deleted USING btree (last);


--
-- Name: xref_p54_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p54_not_deleted$taxid" ON rnacen.xref_p54_not_deleted USING btree (taxid);


--
-- Name: xref_p54_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p54_not_deleted$upi" ON rnacen.xref_p54_not_deleted USING btree (upi);


--
-- Name: xref_p55_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p55_deleted$ac" ON rnacen.xref_p55_deleted USING btree (ac);


--
-- Name: xref_p55_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p55_deleted$ac_old" ON rnacen.xref_p55_deleted_old USING btree (ac);


--
-- Name: xref_p55_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p55_deleted$created" ON rnacen.xref_p55_deleted USING btree (created);


--
-- Name: xref_p55_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p55_deleted$created_old" ON rnacen.xref_p55_deleted_old USING btree (created);


--
-- Name: xref_p55_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p55_deleted$dbid" ON rnacen.xref_p55_deleted USING btree (dbid);


--
-- Name: xref_p55_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p55_deleted$dbid_old" ON rnacen.xref_p55_deleted_old USING btree (dbid);


--
-- Name: xref_p55_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p55_deleted$id" ON rnacen.xref_p55_deleted USING btree (id);


--
-- Name: xref_p55_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p55_deleted$id_old" ON rnacen.xref_p55_deleted_old USING btree (id);


--
-- Name: xref_p55_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p55_deleted$last" ON rnacen.xref_p55_deleted USING btree (last);


--
-- Name: xref_p55_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p55_deleted$last_old" ON rnacen.xref_p55_deleted_old USING btree (last);


--
-- Name: xref_p55_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p55_deleted$taxid" ON rnacen.xref_p55_deleted USING btree (taxid);


--
-- Name: xref_p55_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p55_deleted$taxid_old" ON rnacen.xref_p55_deleted_old USING btree (taxid);


--
-- Name: xref_p55_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p55_deleted$upi" ON rnacen.xref_p55_deleted USING btree (upi);


--
-- Name: xref_p55_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p55_deleted$upi_old" ON rnacen.xref_p55_deleted_old USING btree (upi);


--
-- Name: xref_p55_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p55_not_deleted$ac" ON rnacen.xref_p55_not_deleted USING btree (ac);


--
-- Name: xref_p55_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p55_not_deleted$ac_old" ON rnacen.xref_p55_not_deleted_old USING btree (ac);


--
-- Name: xref_p55_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p55_not_deleted$created" ON rnacen.xref_p55_not_deleted USING btree (created);


--
-- Name: xref_p55_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p55_not_deleted$created_old" ON rnacen.xref_p55_not_deleted_old USING btree (created);


--
-- Name: xref_p55_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p55_not_deleted$dbid" ON rnacen.xref_p55_not_deleted USING btree (dbid);


--
-- Name: xref_p55_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p55_not_deleted$dbid_old" ON rnacen.xref_p55_not_deleted_old USING btree (dbid);


--
-- Name: xref_p55_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p55_not_deleted$id" ON rnacen.xref_p55_not_deleted USING btree (id);


--
-- Name: xref_p55_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p55_not_deleted$id_old" ON rnacen.xref_p55_not_deleted_old USING btree (id);


--
-- Name: xref_p55_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p55_not_deleted$last" ON rnacen.xref_p55_not_deleted USING btree (last);


--
-- Name: xref_p55_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p55_not_deleted$last_old" ON rnacen.xref_p55_not_deleted_old USING btree (last);


--
-- Name: xref_p55_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p55_not_deleted$taxid" ON rnacen.xref_p55_not_deleted USING btree (taxid);


--
-- Name: xref_p55_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p55_not_deleted$taxid_old" ON rnacen.xref_p55_not_deleted_old USING btree (taxid);


--
-- Name: xref_p55_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p55_not_deleted$upi" ON rnacen.xref_p55_not_deleted USING btree (upi);


--
-- Name: xref_p55_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p55_not_deleted$upi_old" ON rnacen.xref_p55_not_deleted_old USING btree (upi);


--
-- Name: xref_p5_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p5_deleted$ac" ON rnacen.xref_p5_deleted USING btree (ac);


--
-- Name: xref_p5_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p5_deleted$created" ON rnacen.xref_p5_deleted USING btree (created);


--
-- Name: xref_p5_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p5_deleted$dbid" ON rnacen.xref_p5_deleted USING btree (dbid);


--
-- Name: xref_p5_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p5_deleted$id" ON rnacen.xref_p5_deleted USING btree (id);


--
-- Name: xref_p5_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p5_deleted$last" ON rnacen.xref_p5_deleted USING btree (last);


--
-- Name: xref_p5_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p5_deleted$taxid" ON rnacen.xref_p5_deleted USING btree (taxid);


--
-- Name: xref_p5_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p5_deleted$upi" ON rnacen.xref_p5_deleted USING btree (upi);


--
-- Name: xref_p5_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p5_not_deleted$ac" ON rnacen.xref_p5_not_deleted USING btree (ac);


--
-- Name: xref_p5_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p5_not_deleted$created" ON rnacen.xref_p5_not_deleted USING btree (created);


--
-- Name: xref_p5_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p5_not_deleted$dbid" ON rnacen.xref_p5_not_deleted USING btree (dbid);


--
-- Name: xref_p5_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p5_not_deleted$id" ON rnacen.xref_p5_not_deleted USING btree (id);


--
-- Name: xref_p5_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p5_not_deleted$last" ON rnacen.xref_p5_not_deleted USING btree (last);


--
-- Name: xref_p5_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p5_not_deleted$taxid" ON rnacen.xref_p5_not_deleted USING btree (taxid);


--
-- Name: xref_p5_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p5_not_deleted$upi" ON rnacen.xref_p5_not_deleted USING btree (upi);


--
-- Name: xref_p6_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p6_deleted$ac" ON rnacen.xref_p6_deleted USING btree (ac);


--
-- Name: xref_p6_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p6_deleted$ac_old" ON rnacen.xref_p6_deleted_old USING btree (ac);


--
-- Name: xref_p6_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p6_deleted$created" ON rnacen.xref_p6_deleted USING btree (created);


--
-- Name: xref_p6_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p6_deleted$created_old" ON rnacen.xref_p6_deleted_old USING btree (created);


--
-- Name: xref_p6_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p6_deleted$dbid" ON rnacen.xref_p6_deleted USING btree (dbid);


--
-- Name: xref_p6_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p6_deleted$dbid_old" ON rnacen.xref_p6_deleted_old USING btree (dbid);


--
-- Name: xref_p6_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p6_deleted$id" ON rnacen.xref_p6_deleted USING btree (id);


--
-- Name: xref_p6_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p6_deleted$id_old" ON rnacen.xref_p6_deleted_old USING btree (id);


--
-- Name: xref_p6_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p6_deleted$last" ON rnacen.xref_p6_deleted USING btree (last);


--
-- Name: xref_p6_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p6_deleted$last_old" ON rnacen.xref_p6_deleted_old USING btree (last);


--
-- Name: xref_p6_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p6_deleted$taxid" ON rnacen.xref_p6_deleted USING btree (taxid);


--
-- Name: xref_p6_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p6_deleted$taxid_old" ON rnacen.xref_p6_deleted_old USING btree (taxid);


--
-- Name: xref_p6_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p6_deleted$upi" ON rnacen.xref_p6_deleted USING btree (upi);


--
-- Name: xref_p6_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p6_deleted$upi_old" ON rnacen.xref_p6_deleted_old USING btree (upi);


--
-- Name: xref_p6_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p6_not_deleted$ac" ON rnacen.xref_p6_not_deleted USING btree (ac);


--
-- Name: xref_p6_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p6_not_deleted$ac_old" ON rnacen.xref_p6_not_deleted_old USING btree (ac);


--
-- Name: xref_p6_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p6_not_deleted$created" ON rnacen.xref_p6_not_deleted USING btree (created);


--
-- Name: xref_p6_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p6_not_deleted$created_old" ON rnacen.xref_p6_not_deleted_old USING btree (created);


--
-- Name: xref_p6_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p6_not_deleted$dbid" ON rnacen.xref_p6_not_deleted USING btree (dbid);


--
-- Name: xref_p6_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p6_not_deleted$dbid_old" ON rnacen.xref_p6_not_deleted_old USING btree (dbid);


--
-- Name: xref_p6_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p6_not_deleted$id" ON rnacen.xref_p6_not_deleted USING btree (id);


--
-- Name: xref_p6_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p6_not_deleted$id_old" ON rnacen.xref_p6_not_deleted_old USING btree (id);


--
-- Name: xref_p6_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p6_not_deleted$last" ON rnacen.xref_p6_not_deleted USING btree (last);


--
-- Name: xref_p6_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p6_not_deleted$last_old" ON rnacen.xref_p6_not_deleted_old USING btree (last);


--
-- Name: xref_p6_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p6_not_deleted$taxid" ON rnacen.xref_p6_not_deleted USING btree (taxid);


--
-- Name: xref_p6_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p6_not_deleted$taxid_old" ON rnacen.xref_p6_not_deleted_old USING btree (taxid);


--
-- Name: xref_p6_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p6_not_deleted$upi" ON rnacen.xref_p6_not_deleted USING btree (upi);


--
-- Name: xref_p6_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p6_not_deleted$upi_old" ON rnacen.xref_p6_not_deleted_old USING btree (upi);


--
-- Name: xref_p7_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p7_deleted$ac" ON rnacen.xref_p7_deleted USING btree (ac);


--
-- Name: xref_p7_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p7_deleted$ac_old" ON rnacen.xref_p7_deleted_old USING btree (ac);


--
-- Name: xref_p7_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p7_deleted$created" ON rnacen.xref_p7_deleted USING btree (created);


--
-- Name: xref_p7_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p7_deleted$created_old" ON rnacen.xref_p7_deleted_old USING btree (created);


--
-- Name: xref_p7_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p7_deleted$dbid" ON rnacen.xref_p7_deleted USING btree (dbid);


--
-- Name: xref_p7_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p7_deleted$dbid_old" ON rnacen.xref_p7_deleted_old USING btree (dbid);


--
-- Name: xref_p7_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p7_deleted$id" ON rnacen.xref_p7_deleted USING btree (id);


--
-- Name: xref_p7_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p7_deleted$id_old" ON rnacen.xref_p7_deleted_old USING btree (id);


--
-- Name: xref_p7_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p7_deleted$last" ON rnacen.xref_p7_deleted USING btree (last);


--
-- Name: xref_p7_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p7_deleted$last_old" ON rnacen.xref_p7_deleted_old USING btree (last);


--
-- Name: xref_p7_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p7_deleted$taxid" ON rnacen.xref_p7_deleted USING btree (taxid);


--
-- Name: xref_p7_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p7_deleted$taxid_old" ON rnacen.xref_p7_deleted_old USING btree (taxid);


--
-- Name: xref_p7_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p7_deleted$upi" ON rnacen.xref_p7_deleted USING btree (upi);


--
-- Name: xref_p7_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p7_deleted$upi_old" ON rnacen.xref_p7_deleted_old USING btree (upi);


--
-- Name: xref_p7_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p7_not_deleted$ac" ON rnacen.xref_p7_not_deleted USING btree (ac);


--
-- Name: xref_p7_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p7_not_deleted$ac_old" ON rnacen.xref_p7_not_deleted_old USING btree (ac);


--
-- Name: xref_p7_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p7_not_deleted$created" ON rnacen.xref_p7_not_deleted USING btree (created);


--
-- Name: xref_p7_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p7_not_deleted$created_old" ON rnacen.xref_p7_not_deleted_old USING btree (created);


--
-- Name: xref_p7_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p7_not_deleted$dbid" ON rnacen.xref_p7_not_deleted USING btree (dbid);


--
-- Name: xref_p7_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p7_not_deleted$dbid_old" ON rnacen.xref_p7_not_deleted_old USING btree (dbid);


--
-- Name: xref_p7_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p7_not_deleted$id" ON rnacen.xref_p7_not_deleted USING btree (id);


--
-- Name: xref_p7_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p7_not_deleted$id_old" ON rnacen.xref_p7_not_deleted_old USING btree (id);


--
-- Name: xref_p7_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p7_not_deleted$last" ON rnacen.xref_p7_not_deleted USING btree (last);


--
-- Name: xref_p7_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p7_not_deleted$last_old" ON rnacen.xref_p7_not_deleted_old USING btree (last);


--
-- Name: xref_p7_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p7_not_deleted$taxid" ON rnacen.xref_p7_not_deleted USING btree (taxid);


--
-- Name: xref_p7_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p7_not_deleted$taxid_old" ON rnacen.xref_p7_not_deleted_old USING btree (taxid);


--
-- Name: xref_p7_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p7_not_deleted$upi" ON rnacen.xref_p7_not_deleted USING btree (upi);


--
-- Name: xref_p7_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p7_not_deleted$upi_old" ON rnacen.xref_p7_not_deleted_old USING btree (upi);


--
-- Name: xref_p8_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p8_deleted$ac" ON rnacen.xref_p8_deleted USING btree (ac);


--
-- Name: xref_p8_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p8_deleted$ac_old" ON rnacen.xref_p8_deleted_old USING btree (ac);


--
-- Name: xref_p8_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p8_deleted$created" ON rnacen.xref_p8_deleted USING btree (created);


--
-- Name: xref_p8_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p8_deleted$created_old" ON rnacen.xref_p8_deleted_old USING btree (created);


--
-- Name: xref_p8_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p8_deleted$dbid" ON rnacen.xref_p8_deleted USING btree (dbid);


--
-- Name: xref_p8_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p8_deleted$dbid_old" ON rnacen.xref_p8_deleted_old USING btree (dbid);


--
-- Name: xref_p8_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p8_deleted$id" ON rnacen.xref_p8_deleted USING btree (id);


--
-- Name: xref_p8_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p8_deleted$id_old" ON rnacen.xref_p8_deleted_old USING btree (id);


--
-- Name: xref_p8_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p8_deleted$last" ON rnacen.xref_p8_deleted USING btree (last);


--
-- Name: xref_p8_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p8_deleted$last_old" ON rnacen.xref_p8_deleted_old USING btree (last);


--
-- Name: xref_p8_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p8_deleted$taxid" ON rnacen.xref_p8_deleted USING btree (taxid);


--
-- Name: xref_p8_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p8_deleted$taxid_old" ON rnacen.xref_p8_deleted_old USING btree (taxid);


--
-- Name: xref_p8_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p8_deleted$upi" ON rnacen.xref_p8_deleted USING btree (upi);


--
-- Name: xref_p8_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p8_deleted$upi_old" ON rnacen.xref_p8_deleted_old USING btree (upi);


--
-- Name: xref_p8_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p8_not_deleted$ac" ON rnacen.xref_p8_not_deleted USING btree (ac);


--
-- Name: xref_p8_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p8_not_deleted$ac_old" ON rnacen.xref_p8_not_deleted_old USING btree (ac);


--
-- Name: xref_p8_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p8_not_deleted$created" ON rnacen.xref_p8_not_deleted USING btree (created);


--
-- Name: xref_p8_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p8_not_deleted$created_old" ON rnacen.xref_p8_not_deleted_old USING btree (created);


--
-- Name: xref_p8_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p8_not_deleted$dbid" ON rnacen.xref_p8_not_deleted USING btree (dbid);


--
-- Name: xref_p8_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p8_not_deleted$dbid_old" ON rnacen.xref_p8_not_deleted_old USING btree (dbid);


--
-- Name: xref_p8_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p8_not_deleted$id" ON rnacen.xref_p8_not_deleted USING btree (id);


--
-- Name: xref_p8_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p8_not_deleted$id_old" ON rnacen.xref_p8_not_deleted_old USING btree (id);


--
-- Name: xref_p8_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p8_not_deleted$last" ON rnacen.xref_p8_not_deleted USING btree (last);


--
-- Name: xref_p8_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p8_not_deleted$last_old" ON rnacen.xref_p8_not_deleted_old USING btree (last);


--
-- Name: xref_p8_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p8_not_deleted$taxid" ON rnacen.xref_p8_not_deleted USING btree (taxid);


--
-- Name: xref_p8_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p8_not_deleted$taxid_old" ON rnacen.xref_p8_not_deleted_old USING btree (taxid);


--
-- Name: xref_p8_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p8_not_deleted$upi" ON rnacen.xref_p8_not_deleted USING btree (upi);


--
-- Name: xref_p8_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p8_not_deleted$upi_old" ON rnacen.xref_p8_not_deleted_old USING btree (upi);


--
-- Name: xref_p9_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p9_deleted$ac" ON rnacen.xref_p9_deleted USING btree (ac);


--
-- Name: xref_p9_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p9_deleted$ac_old" ON rnacen.xref_p9_deleted_old USING btree (ac);


--
-- Name: xref_p9_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p9_deleted$created" ON rnacen.xref_p9_deleted USING btree (created);


--
-- Name: xref_p9_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p9_deleted$created_old" ON rnacen.xref_p9_deleted_old USING btree (created);


--
-- Name: xref_p9_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p9_deleted$dbid" ON rnacen.xref_p9_deleted USING btree (dbid);


--
-- Name: xref_p9_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p9_deleted$dbid_old" ON rnacen.xref_p9_deleted_old USING btree (dbid);


--
-- Name: xref_p9_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p9_deleted$id" ON rnacen.xref_p9_deleted USING btree (id);


--
-- Name: xref_p9_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p9_deleted$id_old" ON rnacen.xref_p9_deleted_old USING btree (id);


--
-- Name: xref_p9_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p9_deleted$last" ON rnacen.xref_p9_deleted USING btree (last);


--
-- Name: xref_p9_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p9_deleted$last_old" ON rnacen.xref_p9_deleted_old USING btree (last);


--
-- Name: xref_p9_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p9_deleted$taxid" ON rnacen.xref_p9_deleted USING btree (taxid);


--
-- Name: xref_p9_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p9_deleted$taxid_old" ON rnacen.xref_p9_deleted_old USING btree (taxid);


--
-- Name: xref_p9_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p9_deleted$upi" ON rnacen.xref_p9_deleted USING btree (upi);


--
-- Name: xref_p9_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p9_deleted$upi_old" ON rnacen.xref_p9_deleted_old USING btree (upi);


--
-- Name: xref_p9_not_deleted$ac; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p9_not_deleted$ac" ON rnacen.xref_p9_not_deleted USING btree (ac);


--
-- Name: xref_p9_not_deleted$ac_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p9_not_deleted$ac_old" ON rnacen.xref_p9_not_deleted_old USING btree (ac);


--
-- Name: xref_p9_not_deleted$created; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p9_not_deleted$created" ON rnacen.xref_p9_not_deleted USING btree (created);


--
-- Name: xref_p9_not_deleted$created_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p9_not_deleted$created_old" ON rnacen.xref_p9_not_deleted_old USING btree (created);


--
-- Name: xref_p9_not_deleted$dbid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p9_not_deleted$dbid" ON rnacen.xref_p9_not_deleted USING btree (dbid);


--
-- Name: xref_p9_not_deleted$dbid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p9_not_deleted$dbid_old" ON rnacen.xref_p9_not_deleted_old USING btree (dbid);


--
-- Name: xref_p9_not_deleted$id; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p9_not_deleted$id" ON rnacen.xref_p9_not_deleted USING btree (id);


--
-- Name: xref_p9_not_deleted$id_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE UNIQUE INDEX "xref_p9_not_deleted$id_old" ON rnacen.xref_p9_not_deleted_old USING btree (id);


--
-- Name: xref_p9_not_deleted$last; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p9_not_deleted$last" ON rnacen.xref_p9_not_deleted USING btree (last);


--
-- Name: xref_p9_not_deleted$last_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p9_not_deleted$last_old" ON rnacen.xref_p9_not_deleted_old USING btree (last);


--
-- Name: xref_p9_not_deleted$taxid; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p9_not_deleted$taxid" ON rnacen.xref_p9_not_deleted USING btree (taxid);


--
-- Name: xref_p9_not_deleted$taxid_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p9_not_deleted$taxid_old" ON rnacen.xref_p9_not_deleted_old USING btree (taxid);


--
-- Name: xref_p9_not_deleted$upi; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p9_not_deleted$upi" ON rnacen.xref_p9_not_deleted USING btree (upi);


--
-- Name: xref_p9_not_deleted$upi_old; Type: INDEX; Schema: rnacen; Owner: rnacen
--

CREATE INDEX "xref_p9_not_deleted$upi_old" ON rnacen.xref_p9_not_deleted_old USING btree (upi);


--
-- Name: rna rna_audit; Type: TRIGGER; Schema: rnacen; Owner: rnacen
--

CREATE TRIGGER rna_audit BEFORE UPDATE ON rnacen.rna FOR EACH ROW EXECUTE PROCEDURE rnacen.trigger_fct_rna_audit();

ALTER TABLE rnacen.rna DISABLE TRIGGER rna_audit;


--
-- Name: rnc_database rnc_database_audit; Type: TRIGGER; Schema: rnacen; Owner: rnacen
--

CREATE TRIGGER rnc_database_audit BEFORE UPDATE ON rnacen.rnc_database FOR EACH ROW EXECUTE PROCEDURE rnacen.trigger_fct_rnc_database_audit();

ALTER TABLE rnacen.rnc_database DISABLE TRIGGER rnc_database_audit;


--
-- Name: rnc_modifications rnc_modifications_tr; Type: TRIGGER; Schema: rnacen; Owner: rnacen
--

CREATE TRIGGER rnc_modifications_tr BEFORE INSERT ON rnacen.rnc_modifications FOR EACH ROW WHEN ((new.id IS NULL)) EXECUTE PROCEDURE rnacen.trigger_fct_rnc_modifications_tr();

ALTER TABLE rnacen.rnc_modifications DISABLE TRIGGER rnc_modifications_tr;


--
-- Name: rnc_release rnc_release_audit; Type: TRIGGER; Schema: rnacen; Owner: rnacen
--

CREATE TRIGGER rnc_release_audit BEFORE UPDATE ON rnacen.rnc_release FOR EACH ROW EXECUTE PROCEDURE rnacen.trigger_fct_rnc_release_audit();

ALTER TABLE rnacen.rnc_release DISABLE TRIGGER rnc_release_audit;


--
-- Name: xref xref_pk_update; Type: TRIGGER; Schema: rnacen; Owner: rnacen
--

CREATE TRIGGER xref_pk_update BEFORE INSERT ON rnacen.xref FOR EACH ROW EXECUTE PROCEDURE rnacen.trigger_fct_xref_pk_update();

ALTER TABLE rnacen.xref DISABLE TRIGGER xref_pk_update;


--
-- Name: xref xref_trigger_insert; Type: TRIGGER; Schema: rnacen; Owner: rnacen
--

CREATE TRIGGER xref_trigger_insert BEFORE INSERT ON rnacen.xref FOR EACH ROW EXECUTE PROCEDURE rnacen.xref_insert_trigger();

ALTER TABLE rnacen.xref DISABLE TRIGGER xref_trigger_insert;


--
-- Name: auth_permission auth_content_type_id_508cf46651277a81_fk_django_content_type_id; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.auth_permission
    ADD CONSTRAINT auth_content_type_id_508cf46651277a81_fk_django_content_type_id FOREIGN KEY (content_type_id) REFERENCES rnacen.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissio_group_id_689710a9a73b7457_fk_auth_group_id; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_group_id_689710a9a73b7457_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES rnacen.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permission_id_1f49ccbbdc69d2fc_fk_auth_permission_id; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.auth_group_permissions
    ADD CONSTRAINT auth_group_permission_id_1f49ccbbdc69d2fc_fk_auth_permission_id FOREIGN KEY (permission_id) REFERENCES rnacen.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user__permission_id_384b62483d7071f0_fk_auth_permission_id; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.auth_user_user_permissions
    ADD CONSTRAINT auth_user__permission_id_384b62483d7071f0_fk_auth_permission_id FOREIGN KEY (permission_id) REFERENCES rnacen.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_group_id_33ac548dcf5f8e37_fk_auth_group_id; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_33ac548dcf5f8e37_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES rnacen.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_user_id_4b5ed4ffdb8fd9b0_fk_auth_user_id; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_4b5ed4ffdb8fd9b0_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES rnacen.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permiss_user_id_7f0938558328534a_fk_auth_user_id; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permiss_user_id_7f0938558328534a_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES rnacen.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: rnc_reference_map ck_rnc_reference_map__reference_id; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_reference_map
    ADD CONSTRAINT ck_rnc_reference_map__reference_id FOREIGN KEY (reference_id) REFERENCES rnacen.rnc_references(id);


--
-- Name: django_admin_log djan_content_type_id_697914295151027a_fk_django_content_type_id; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.django_admin_log
    ADD CONSTRAINT djan_content_type_id_697914295151027a_fk_django_content_type_id FOREIGN KEY (content_type_id) REFERENCES rnacen.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_52fdd58701c5f563_fk_auth_user_id; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_52fdd58701c5f563_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES rnacen.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ensembl_compara ensembl_compara_urs_taxid_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.ensembl_compara
    ADD CONSTRAINT ensembl_compara_urs_taxid_fkey FOREIGN KEY (urs_taxid) REFERENCES rnacen.rnc_rna_precomputed(id);


--
-- Name: ensembl_coordinate_systems ensembl_coordinate_systems_assembly_id_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.ensembl_coordinate_systems
    ADD CONSTRAINT ensembl_coordinate_systems_assembly_id_fkey FOREIGN KEY (assembly_id) REFERENCES rnacen.ensembl_assembly(assembly_id) ON DELETE CASCADE;


--
-- Name: ensembl_karyotype ensembl_karyotype_ensembl_assembly_assembly_id_fk; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.ensembl_karyotype
    ADD CONSTRAINT ensembl_karyotype_ensembl_assembly_assembly_id_fk FOREIGN KEY (assembly_id) REFERENCES rnacen.ensembl_assembly(assembly_id) ON DELETE CASCADE;


--
-- Name: ensembl_pseudogene_exons ensembl_pseduogene_exons_region_id_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.ensembl_pseudogene_exons
    ADD CONSTRAINT ensembl_pseduogene_exons_region_id_fkey FOREIGN KEY (region_id) REFERENCES rnacen.ensembl_pseudogene_regions(id) ON DELETE CASCADE;


--
-- Name: ensembl_pseudogene_regions ensembl_pseduogene_regions_assembly_id_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.ensembl_pseudogene_regions
    ADD CONSTRAINT ensembl_pseduogene_regions_assembly_id_fkey FOREIGN KEY (assembly_id) REFERENCES rnacen.ensembl_assembly(assembly_id) ON DELETE CASCADE;


--
-- Name: rnc_sequence_features feature_provider_fk; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_sequence_features
    ADD CONSTRAINT feature_provider_fk FOREIGN KEY (feature_provider) REFERENCES rnacen.rnc_sequence_feature_providers(name);


--
-- Name: r2dt_results fk_layout__model_id; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.r2dt_results
    ADD CONSTRAINT fk_layout__model_id FOREIGN KEY (model_id) REFERENCES rnacen.r2dt_models(id);


--
-- Name: r2dt_results fk_layout__urs; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.r2dt_results
    ADD CONSTRAINT fk_layout__urs FOREIGN KEY (urs) REFERENCES rnacen.rna(upi);


--
-- Name: cpat_results fk_rnc_cpat_results__urs_taxid; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.cpat_results
    ADD CONSTRAINT fk_rnc_cpat_results__urs_taxid FOREIGN KEY (urs_taxid) REFERENCES rnacen.rnc_rna_precomputed(id);


--
-- Name: rnc_feedback_target_assemblies fk_rnc_feedback_target_assemblies__assembly_id; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_feedback_target_assemblies
    ADD CONSTRAINT fk_rnc_feedback_target_assemblies__assembly_id FOREIGN KEY (assembly_id) REFERENCES rnacen.ensembl_assembly(assembly_id) ON DELETE CASCADE;


--
-- Name: rnc_feedback_target_assemblies fk_rnc_feedback_target_assemblies__dbid; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_feedback_target_assemblies
    ADD CONSTRAINT fk_rnc_feedback_target_assemblies__dbid FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id) ON DELETE CASCADE;


--
-- Name: rnc_related_sequences fk_rnc_related_sequences__relationship_type; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_related_sequences
    ADD CONSTRAINT fk_rnc_related_sequences__relationship_type FOREIGN KEY (relationship_type) REFERENCES rnacen.rnc_relationship_types(relationship_type);


--
-- Name: rnc_sequence_features fk_rnc_sequence_features__feature_type; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_sequence_features
    ADD CONSTRAINT fk_rnc_sequence_features__feature_type FOREIGN KEY (feature_name) REFERENCES rnacen.rnc_sequence_feature_types(feature_name);


--
-- Name: rnc_sequence_features fk_rnc_sequence_features__taxid; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_sequence_features
    ADD CONSTRAINT fk_rnc_sequence_features__taxid FOREIGN KEY (taxid) REFERENCES rnacen.rnc_taxonomy(id);


--
-- Name: go_term_annotations go_term_annotations_evidence_code_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.go_term_annotations
    ADD CONSTRAINT go_term_annotations_evidence_code_fkey FOREIGN KEY (evidence_code) REFERENCES rnacen.ontology_terms(ontology_term_id);


--
-- Name: go_term_annotations go_term_annotations_ontology_term_id_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.go_term_annotations
    ADD CONSTRAINT go_term_annotations_ontology_term_id_fkey FOREIGN KEY (ontology_term_id) REFERENCES rnacen.ontology_terms(ontology_term_id);


--
-- Name: go_term_publication_map go_term_publication_map_go_term_annotation_id_fkey1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.go_term_publication_map
    ADD CONSTRAINT go_term_publication_map_go_term_annotation_id_fkey1 FOREIGN KEY (go_term_annotation_id) REFERENCES rnacen.go_term_annotations(go_term_annotation_id);


--
-- Name: go_term_publication_map go_term_publication_map_reference_id_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.go_term_publication_map
    ADD CONSTRAINT go_term_publication_map_reference_id_fkey FOREIGN KEY (reference_id) REFERENCES rnacen.rnc_references(id);


--
-- Name: insdc_so_term_mapping insdc_so_term_mapping_so_term_id_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.insdc_so_term_mapping
    ADD CONSTRAINT insdc_so_term_mapping_so_term_id_fkey FOREIGN KEY (so_term_id) REFERENCES rnacen.ontology_terms(ontology_term_id);


--
-- Name: pipeline_tracking_genome_mapping pipeline_tracking_genome_mapping_urs_taxid_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.pipeline_tracking_genome_mapping
    ADD CONSTRAINT pipeline_tracking_genome_mapping_urs_taxid_fkey FOREIGN KEY (urs_taxid) REFERENCES rnacen.rnc_rna_precomputed(id);


--
-- Name: pipeline_tracking_qa_scan pipeline_tracking_scan_urs_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.pipeline_tracking_qa_scan
    ADD CONSTRAINT pipeline_tracking_scan_urs_fkey FOREIGN KEY (urs) REFERENCES rnacen.rna(upi);


--
-- Name: pipeline_tracking_traveler pipeline_tracking_traveler_urs_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.pipeline_tracking_traveler
    ADD CONSTRAINT pipeline_tracking_traveler_urs_fkey FOREIGN KEY (urs) REFERENCES rnacen.rna(upi);


--
-- Name: qa_status qa_status_upi_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.qa_status
    ADD CONSTRAINT qa_status_upi_fkey FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: rfam_go_terms rfa_rfam_model_id_418d94a91e74ecaa_fk_rfam_models_rfam_model_id; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rfam_go_terms
    ADD CONSTRAINT rfa_rfam_model_id_418d94a91e74ecaa_fk_rfam_models_rfam_model_id FOREIGN KEY (rfam_model_id) REFERENCES rnacen.rfam_models(rfam_model_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: rfam_model_hits rfa_rfam_model_id_5088d5c42ad2571a_fk_rfam_models_rfam_model_id; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rfam_model_hits
    ADD CONSTRAINT rfa_rfam_model_id_5088d5c42ad2571a_fk_rfam_models_rfam_model_id FOREIGN KEY (rfam_model_id) REFERENCES rnacen.rfam_models(rfam_model_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: rfam_analyzed_sequences rfam_analyzed_sequences_upi_143bc1f118b7f227_fk_rna_upi; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rfam_analyzed_sequences
    ADD CONSTRAINT rfam_analyzed_sequences_upi_143bc1f118b7f227_fk_rna_upi FOREIGN KEY (upi) REFERENCES rnacen.rna(upi) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: rfam_go_terms rfam_go_terms_ontology_term_id_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rfam_go_terms
    ADD CONSTRAINT rfam_go_terms_ontology_term_id_fkey FOREIGN KEY (ontology_term_id) REFERENCES rnacen.ontology_terms(ontology_term_id);


--
-- Name: rfam_models rfam_m_rfam_clan_id_4497ffd203fbfac6_fk_rfam_clans_rfam_clan_id; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rfam_models
    ADD CONSTRAINT rfam_m_rfam_clan_id_4497ffd203fbfac6_fk_rfam_clans_rfam_clan_id FOREIGN KEY (rfam_clan_id) REFERENCES rnacen.rfam_clans(rfam_clan_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: rfam_model_hits rfam_model_hits_rnc_sequence_features_id_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rfam_model_hits
    ADD CONSTRAINT rfam_model_hits_rnc_sequence_features_id_fkey FOREIGN KEY (rnc_sequence_features_id) REFERENCES rnacen.rnc_sequence_features(rnc_sequence_features_id);


--
-- Name: rfam_model_hits rfam_model_hits_upi_4c2c11c85f9de4b0_fk_rna_upi; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rfam_model_hits
    ADD CONSTRAINT rfam_model_hits_upi_4c2c11c85f9de4b0_fk_rna_upi FOREIGN KEY (upi) REFERENCES rnacen.rna(upi) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: rfam_models rfam_models_so_rna_type_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rfam_models
    ADD CONSTRAINT rfam_models_so_rna_type_fkey FOREIGN KEY (so_rna_type) REFERENCES rnacen.ontology_terms(ontology_term_id);


--
-- Name: rnc_accession_sequence_region rnc_accession_sequence_region_accession_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_accession_sequence_region
    ADD CONSTRAINT rnc_accession_sequence_region_accession_fkey FOREIGN KEY (accession) REFERENCES rnacen.rnc_accessions(accession);


--
-- Name: rnc_accession_sequence_region rnc_accession_sequence_region_region_id_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_accession_sequence_region
    ADD CONSTRAINT rnc_accession_sequence_region_region_id_fkey FOREIGN KEY (region_id) REFERENCES rnacen.rnc_sequence_regions(id);


--
-- Name: rnc_accessions rnc_accessions_rna_type_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_accessions
    ADD CONSTRAINT rnc_accessions_rna_type_fkey FOREIGN KEY (rna_type) REFERENCES rnacen.ontology_terms(ontology_term_id);


--
-- Name: rnc_accession_sequence_feature rnc_accessions_sequence_features_accession_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_accession_sequence_feature
    ADD CONSTRAINT rnc_accessions_sequence_features_accession_fkey FOREIGN KEY (accession) REFERENCES rnacen.rnc_accessions(accession);


--
-- Name: rnc_accession_sequence_feature rnc_accessions_sequence_features_rnc_sequence_feature_id_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_accession_sequence_feature
    ADD CONSTRAINT rnc_accessions_sequence_features_rnc_sequence_feature_id_fkey FOREIGN KEY (rnc_sequence_feature_id) REFERENCES rnacen.rnc_sequence_features(rnc_sequence_features_id);


--
-- Name: rnc_database_references rnc_database_references_dbid_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_database_references
    ADD CONSTRAINT rnc_database_references_dbid_fkey FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: rnc_database_references rnc_database_references_reference_id_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_database_references
    ADD CONSTRAINT rnc_database_references_reference_id_fkey FOREIGN KEY (reference_id) REFERENCES rnacen.rnc_references(id);


--
-- Name: rnc_feedback_overlap rnc_feedback_overlap_assembly_id_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_feedback_overlap
    ADD CONSTRAINT rnc_feedback_overlap_assembly_id_fkey FOREIGN KEY (assembly_id) REFERENCES rnacen.ensembl_assembly(assembly_id) ON DELETE CASCADE;


--
-- Name: rnc_feedback_overlap rnc_feedback_overlap_upi_taxid_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_feedback_overlap
    ADD CONSTRAINT rnc_feedback_overlap_upi_taxid_fkey FOREIGN KEY (upi_taxid) REFERENCES rnacen.rnc_rna_precomputed(id);


--
-- Name: rnc_gene_status rnc_gene_status_assembly_id_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_gene_status
    ADD CONSTRAINT rnc_gene_status_assembly_id_fkey FOREIGN KEY (assembly_id) REFERENCES rnacen.ensembl_assembly(assembly_id) ON DELETE CASCADE;


--
-- Name: rnc_gene_status rnc_gene_status_region_id_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_gene_status
    ADD CONSTRAINT rnc_gene_status_region_id_fkey FOREIGN KEY (region_id) REFERENCES rnacen.rnc_sequence_regions(id) ON DELETE CASCADE;


--
-- Name: rnc_gene_status rnc_gene_status_urs_taxid_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_gene_status
    ADD CONSTRAINT rnc_gene_status_urs_taxid_fkey FOREIGN KEY (urs_taxid) REFERENCES rnacen.rnc_rna_precomputed(id) ON DELETE CASCADE;


--
-- Name: rnc_import_tracker rnc_import_tracker_db_id_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_import_tracker
    ADD CONSTRAINT rnc_import_tracker_db_id_fkey FOREIGN KEY (db_id) REFERENCES rnacen.rnc_database(id);


--
-- Name: rnc_interactions rnc_interactions_urs_taxid_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_interactions
    ADD CONSTRAINT rnc_interactions_urs_taxid_fkey FOREIGN KEY (urs_taxid) REFERENCES rnacen.rnc_rna_precomputed(id);


--
-- Name: rnc_locus rnc_locus_assembly_id_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_locus
    ADD CONSTRAINT rnc_locus_assembly_id_fkey FOREIGN KEY (assembly_id) REFERENCES rnacen.ensembl_assembly(assembly_id) ON DELETE CASCADE;


--
-- Name: rnc_locus_members rnc_locus_members_locus_id_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_locus_members
    ADD CONSTRAINT rnc_locus_members_locus_id_fkey FOREIGN KEY (locus_id) REFERENCES rnacen.rnc_locus(id) ON DELETE CASCADE;


--
-- Name: rnc_locus_members rnc_locus_members_region_id_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_locus_members
    ADD CONSTRAINT rnc_locus_members_region_id_fkey FOREIGN KEY (region_id) REFERENCES rnacen.rnc_sequence_regions(id) ON DELETE CASCADE;


--
-- Name: rnc_locus_members rnc_locus_members_urs_taxid_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_locus_members
    ADD CONSTRAINT rnc_locus_members_urs_taxid_fkey FOREIGN KEY (urs_taxid) REFERENCES rnacen.rnc_rna_precomputed(id) ON DELETE CASCADE;


--
-- Name: rnc_modifications rnc_modifications_rnc_accessions__fk; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_modifications
    ADD CONSTRAINT rnc_modifications_rnc_accessions__fk FOREIGN KEY (accession) REFERENCES rnacen.rnc_accessions(accession);


--
-- Name: rnc_related_sequences rnc_related_sequences_source_accession_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_related_sequences
    ADD CONSTRAINT rnc_related_sequences_source_accession_fkey FOREIGN KEY (source_accession) REFERENCES rnacen.rnc_accessions(accession);


--
-- Name: rnc_related_sequences rnc_related_sequences_source_urs_taxid_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_related_sequences
    ADD CONSTRAINT rnc_related_sequences_source_urs_taxid_fkey FOREIGN KEY (source_urs_taxid) REFERENCES rnacen.rnc_rna_precomputed(id);


--
-- Name: rnc_related_sequences rnc_related_sequences_target_urs_taxid_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_related_sequences
    ADD CONSTRAINT rnc_related_sequences_target_urs_taxid_fkey FOREIGN KEY (target_urs_taxid) REFERENCES rnacen.rnc_rna_precomputed(id);


--
-- Name: rnc_rna_precomputed rnc_rna_precomputed_assigned_so_rna_type_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_rna_precomputed
    ADD CONSTRAINT rnc_rna_precomputed_assigned_so_rna_type_fkey FOREIGN KEY (assigned_so_rna_type) REFERENCES rnacen.ontology_terms(ontology_term_id);


--
-- Name: rnc_rna_precomputed rnc_rna_precomputed_last_release_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_rna_precomputed
    ADD CONSTRAINT rnc_rna_precomputed_last_release_fkey FOREIGN KEY (last_release) REFERENCES rnacen.rnc_release(id);


--
-- Name: rnc_rna_precomputed rnc_rna_precomputed_so_rna_type_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_rna_precomputed
    ADD CONSTRAINT rnc_rna_precomputed_so_rna_type_fkey FOREIGN KEY (so_rna_type) REFERENCES rnacen.ontology_terms(ontology_term_id);


--
-- Name: r2dt_models rnc_secondary_structure_layout_models_so_term_id_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.r2dt_models
    ADD CONSTRAINT rnc_secondary_structure_layout_models_so_term_id_fkey FOREIGN KEY (so_term_id) REFERENCES rnacen.ontology_terms(ontology_term_id);


--
-- Name: r2dt_models rnc_secondary_structure_layout_models_taxid_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.r2dt_models
    ADD CONSTRAINT rnc_secondary_structure_layout_models_taxid_fkey FOREIGN KEY (taxid) REFERENCES rnacen.rnc_taxonomy(id);


--
-- Name: rnc_sequence_exons rnc_sequence_exons_region_id_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_sequence_exons
    ADD CONSTRAINT rnc_sequence_exons_region_id_fkey FOREIGN KEY (region_id) REFERENCES rnacen.rnc_sequence_regions(id) ON DELETE CASCADE;


--
-- Name: rnc_sequence_features rnc_sequence_features_accession_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_sequence_features
    ADD CONSTRAINT rnc_sequence_features_accession_fkey FOREIGN KEY (accession) REFERENCES rnacen.rnc_accessions(accession);


--
-- Name: rnc_sequence_features rnc_sequence_features_upi_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_sequence_features
    ADD CONSTRAINT rnc_sequence_features_upi_fkey FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: rnc_sequence_regions rnc_sequence_regions_assembly_id_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_sequence_regions
    ADD CONSTRAINT rnc_sequence_regions_assembly_id_fkey FOREIGN KEY (assembly_id) REFERENCES rnacen.ensembl_assembly(assembly_id) ON DELETE CASCADE;


--
-- Name: rnc_sequence_regions rnc_sequence_regions_rnc_rna_precomputed__fk; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_sequence_regions
    ADD CONSTRAINT rnc_sequence_regions_rnc_rna_precomputed__fk FOREIGN KEY (urs_taxid) REFERENCES rnacen.rnc_rna_precomputed(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: rnc_taxonomy rnc_taxonomy_replaced_by_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.rnc_taxonomy
    ADD CONSTRAINT rnc_taxonomy_replaced_by_fkey FOREIGN KEY (replaced_by) REFERENCES rnacen.rnc_taxonomy(id);


--
-- Name: validate_layout_counts validate_layout_counts_name_fkey; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.validate_layout_counts
    ADD CONSTRAINT validate_layout_counts_name_fkey FOREIGN KEY (name) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p10_deleted xref_p10_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p10_deleted
    ADD CONSTRAINT xref_p10_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id) DEFERRABLE;


--
-- Name: xref_p10_deleted xref_p10_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p10_deleted
    ADD CONSTRAINT xref_p10_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id) DEFERRABLE;


--
-- Name: xref_p10_deleted xref_p10_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p10_deleted
    ADD CONSTRAINT xref_p10_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id) DEFERRABLE;


--
-- Name: xref_p10_deleted xref_p10_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p10_deleted
    ADD CONSTRAINT xref_p10_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi) DEFERRABLE;


--
-- Name: xref_p10_not_deleted xref_p10_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p10_not_deleted
    ADD CONSTRAINT xref_p10_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id) DEFERRABLE;


--
-- Name: xref_p10_not_deleted xref_p10_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p10_not_deleted
    ADD CONSTRAINT xref_p10_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id) DEFERRABLE;


--
-- Name: xref_p10_not_deleted xref_p10_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p10_not_deleted
    ADD CONSTRAINT xref_p10_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id) DEFERRABLE;


--
-- Name: xref_p10_not_deleted xref_p10_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p10_not_deleted
    ADD CONSTRAINT xref_p10_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi) DEFERRABLE;


--
-- Name: xref_p11_deleted xref_p11_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p11_deleted
    ADD CONSTRAINT xref_p11_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p11_deleted_old xref_p11_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p11_deleted_old
    ADD CONSTRAINT xref_p11_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p11_deleted xref_p11_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p11_deleted
    ADD CONSTRAINT xref_p11_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p11_deleted_old xref_p11_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p11_deleted_old
    ADD CONSTRAINT xref_p11_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p11_deleted xref_p11_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p11_deleted
    ADD CONSTRAINT xref_p11_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p11_deleted_old xref_p11_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p11_deleted_old
    ADD CONSTRAINT xref_p11_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p11_deleted xref_p11_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p11_deleted
    ADD CONSTRAINT xref_p11_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p11_deleted_old xref_p11_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p11_deleted_old
    ADD CONSTRAINT xref_p11_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p11_not_deleted xref_p11_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p11_not_deleted
    ADD CONSTRAINT xref_p11_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p11_not_deleted_old xref_p11_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p11_not_deleted_old
    ADD CONSTRAINT xref_p11_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p11_not_deleted xref_p11_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p11_not_deleted
    ADD CONSTRAINT xref_p11_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p11_not_deleted_old xref_p11_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p11_not_deleted_old
    ADD CONSTRAINT xref_p11_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p11_not_deleted xref_p11_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p11_not_deleted
    ADD CONSTRAINT xref_p11_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p11_not_deleted_old xref_p11_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p11_not_deleted_old
    ADD CONSTRAINT xref_p11_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p11_not_deleted xref_p11_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p11_not_deleted
    ADD CONSTRAINT xref_p11_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p11_not_deleted_old xref_p11_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p11_not_deleted_old
    ADD CONSTRAINT xref_p11_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p12_deleted xref_p12_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p12_deleted
    ADD CONSTRAINT xref_p12_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p12_deleted_old xref_p12_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p12_deleted_old
    ADD CONSTRAINT xref_p12_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p12_deleted xref_p12_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p12_deleted
    ADD CONSTRAINT xref_p12_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p12_deleted_old xref_p12_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p12_deleted_old
    ADD CONSTRAINT xref_p12_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p12_deleted xref_p12_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p12_deleted
    ADD CONSTRAINT xref_p12_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p12_deleted_old xref_p12_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p12_deleted_old
    ADD CONSTRAINT xref_p12_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p12_deleted xref_p12_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p12_deleted
    ADD CONSTRAINT xref_p12_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p12_deleted_old xref_p12_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p12_deleted_old
    ADD CONSTRAINT xref_p12_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p12_not_deleted xref_p12_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p12_not_deleted
    ADD CONSTRAINT xref_p12_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p12_not_deleted_old xref_p12_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p12_not_deleted_old
    ADD CONSTRAINT xref_p12_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p12_not_deleted xref_p12_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p12_not_deleted
    ADD CONSTRAINT xref_p12_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p12_not_deleted_old xref_p12_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p12_not_deleted_old
    ADD CONSTRAINT xref_p12_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p12_not_deleted xref_p12_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p12_not_deleted
    ADD CONSTRAINT xref_p12_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p12_not_deleted_old xref_p12_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p12_not_deleted_old
    ADD CONSTRAINT xref_p12_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p12_not_deleted xref_p12_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p12_not_deleted
    ADD CONSTRAINT xref_p12_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p12_not_deleted_old xref_p12_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p12_not_deleted_old
    ADD CONSTRAINT xref_p12_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p13_deleted xref_p13_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p13_deleted
    ADD CONSTRAINT xref_p13_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id) DEFERRABLE;


--
-- Name: xref_p13_deleted xref_p13_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p13_deleted
    ADD CONSTRAINT xref_p13_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id) DEFERRABLE;


--
-- Name: xref_p13_deleted xref_p13_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p13_deleted
    ADD CONSTRAINT xref_p13_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id) DEFERRABLE;


--
-- Name: xref_p13_deleted xref_p13_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p13_deleted
    ADD CONSTRAINT xref_p13_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi) DEFERRABLE;


--
-- Name: xref_p13_not_deleted xref_p13_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p13_not_deleted
    ADD CONSTRAINT xref_p13_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id) DEFERRABLE;


--
-- Name: xref_p13_not_deleted xref_p13_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p13_not_deleted
    ADD CONSTRAINT xref_p13_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id) DEFERRABLE;


--
-- Name: xref_p13_not_deleted xref_p13_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p13_not_deleted
    ADD CONSTRAINT xref_p13_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id) DEFERRABLE;


--
-- Name: xref_p13_not_deleted xref_p13_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p13_not_deleted
    ADD CONSTRAINT xref_p13_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi) DEFERRABLE;


--
-- Name: xref_p14_deleted xref_p14_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p14_deleted
    ADD CONSTRAINT xref_p14_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p14_deleted_old xref_p14_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p14_deleted_old
    ADD CONSTRAINT xref_p14_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p14_deleted xref_p14_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p14_deleted
    ADD CONSTRAINT xref_p14_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p14_deleted_old xref_p14_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p14_deleted_old
    ADD CONSTRAINT xref_p14_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p14_deleted xref_p14_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p14_deleted
    ADD CONSTRAINT xref_p14_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p14_deleted_old xref_p14_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p14_deleted_old
    ADD CONSTRAINT xref_p14_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p14_deleted xref_p14_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p14_deleted
    ADD CONSTRAINT xref_p14_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p14_deleted_old xref_p14_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p14_deleted_old
    ADD CONSTRAINT xref_p14_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p14_not_deleted xref_p14_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p14_not_deleted
    ADD CONSTRAINT xref_p14_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p14_not_deleted_old xref_p14_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p14_not_deleted_old
    ADD CONSTRAINT xref_p14_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p14_not_deleted xref_p14_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p14_not_deleted
    ADD CONSTRAINT xref_p14_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p14_not_deleted_old xref_p14_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p14_not_deleted_old
    ADD CONSTRAINT xref_p14_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p14_not_deleted xref_p14_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p14_not_deleted
    ADD CONSTRAINT xref_p14_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p14_not_deleted_old xref_p14_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p14_not_deleted_old
    ADD CONSTRAINT xref_p14_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p14_not_deleted xref_p14_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p14_not_deleted
    ADD CONSTRAINT xref_p14_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p14_not_deleted_old xref_p14_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p14_not_deleted_old
    ADD CONSTRAINT xref_p14_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p15_deleted xref_p15_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p15_deleted
    ADD CONSTRAINT xref_p15_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p15_deleted_old xref_p15_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p15_deleted_old
    ADD CONSTRAINT xref_p15_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p15_deleted xref_p15_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p15_deleted
    ADD CONSTRAINT xref_p15_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p15_deleted_old xref_p15_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p15_deleted_old
    ADD CONSTRAINT xref_p15_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p15_deleted xref_p15_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p15_deleted
    ADD CONSTRAINT xref_p15_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p15_deleted_old xref_p15_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p15_deleted_old
    ADD CONSTRAINT xref_p15_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p15_deleted xref_p15_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p15_deleted
    ADD CONSTRAINT xref_p15_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p15_deleted_old xref_p15_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p15_deleted_old
    ADD CONSTRAINT xref_p15_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p15_not_deleted xref_p15_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p15_not_deleted
    ADD CONSTRAINT xref_p15_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p15_not_deleted_old xref_p15_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p15_not_deleted_old
    ADD CONSTRAINT xref_p15_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p15_not_deleted xref_p15_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p15_not_deleted
    ADD CONSTRAINT xref_p15_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p15_not_deleted_old xref_p15_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p15_not_deleted_old
    ADD CONSTRAINT xref_p15_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p15_not_deleted xref_p15_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p15_not_deleted
    ADD CONSTRAINT xref_p15_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p15_not_deleted_old xref_p15_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p15_not_deleted_old
    ADD CONSTRAINT xref_p15_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p15_not_deleted xref_p15_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p15_not_deleted
    ADD CONSTRAINT xref_p15_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p15_not_deleted_old xref_p15_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p15_not_deleted_old
    ADD CONSTRAINT xref_p15_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p16_deleted xref_p16_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p16_deleted
    ADD CONSTRAINT xref_p16_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p16_deleted_old xref_p16_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p16_deleted_old
    ADD CONSTRAINT xref_p16_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p16_deleted xref_p16_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p16_deleted
    ADD CONSTRAINT xref_p16_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p16_deleted_old xref_p16_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p16_deleted_old
    ADD CONSTRAINT xref_p16_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p16_deleted xref_p16_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p16_deleted
    ADD CONSTRAINT xref_p16_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p16_deleted_old xref_p16_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p16_deleted_old
    ADD CONSTRAINT xref_p16_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p16_deleted xref_p16_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p16_deleted
    ADD CONSTRAINT xref_p16_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p16_deleted_old xref_p16_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p16_deleted_old
    ADD CONSTRAINT xref_p16_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p16_not_deleted xref_p16_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p16_not_deleted
    ADD CONSTRAINT xref_p16_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p16_not_deleted_old xref_p16_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p16_not_deleted_old
    ADD CONSTRAINT xref_p16_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p16_not_deleted xref_p16_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p16_not_deleted
    ADD CONSTRAINT xref_p16_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p16_not_deleted_old xref_p16_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p16_not_deleted_old
    ADD CONSTRAINT xref_p16_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p16_not_deleted xref_p16_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p16_not_deleted
    ADD CONSTRAINT xref_p16_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p16_not_deleted_old xref_p16_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p16_not_deleted_old
    ADD CONSTRAINT xref_p16_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p16_not_deleted xref_p16_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p16_not_deleted
    ADD CONSTRAINT xref_p16_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p16_not_deleted_old xref_p16_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p16_not_deleted_old
    ADD CONSTRAINT xref_p16_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p17_deleted xref_p17_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p17_deleted
    ADD CONSTRAINT xref_p17_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p17_deleted_old xref_p17_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p17_deleted_old
    ADD CONSTRAINT xref_p17_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p17_deleted xref_p17_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p17_deleted
    ADD CONSTRAINT xref_p17_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p17_deleted_old xref_p17_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p17_deleted_old
    ADD CONSTRAINT xref_p17_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p17_deleted xref_p17_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p17_deleted
    ADD CONSTRAINT xref_p17_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p17_deleted_old xref_p17_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p17_deleted_old
    ADD CONSTRAINT xref_p17_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p17_deleted xref_p17_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p17_deleted
    ADD CONSTRAINT xref_p17_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p17_deleted_old xref_p17_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p17_deleted_old
    ADD CONSTRAINT xref_p17_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p17_not_deleted xref_p17_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p17_not_deleted
    ADD CONSTRAINT xref_p17_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p17_not_deleted_old xref_p17_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p17_not_deleted_old
    ADD CONSTRAINT xref_p17_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p17_not_deleted xref_p17_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p17_not_deleted
    ADD CONSTRAINT xref_p17_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p17_not_deleted_old xref_p17_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p17_not_deleted_old
    ADD CONSTRAINT xref_p17_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p17_not_deleted xref_p17_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p17_not_deleted
    ADD CONSTRAINT xref_p17_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p17_not_deleted_old xref_p17_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p17_not_deleted_old
    ADD CONSTRAINT xref_p17_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p17_not_deleted xref_p17_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p17_not_deleted
    ADD CONSTRAINT xref_p17_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p17_not_deleted_old xref_p17_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p17_not_deleted_old
    ADD CONSTRAINT xref_p17_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p18_deleted xref_p18_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p18_deleted
    ADD CONSTRAINT xref_p18_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p18_deleted_old xref_p18_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p18_deleted_old
    ADD CONSTRAINT xref_p18_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p18_deleted xref_p18_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p18_deleted
    ADD CONSTRAINT xref_p18_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p18_deleted_old xref_p18_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p18_deleted_old
    ADD CONSTRAINT xref_p18_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p18_deleted xref_p18_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p18_deleted
    ADD CONSTRAINT xref_p18_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p18_deleted_old xref_p18_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p18_deleted_old
    ADD CONSTRAINT xref_p18_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p18_deleted xref_p18_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p18_deleted
    ADD CONSTRAINT xref_p18_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p18_deleted_old xref_p18_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p18_deleted_old
    ADD CONSTRAINT xref_p18_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p18_not_deleted xref_p18_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p18_not_deleted
    ADD CONSTRAINT xref_p18_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p18_not_deleted_old xref_p18_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p18_not_deleted_old
    ADD CONSTRAINT xref_p18_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p18_not_deleted xref_p18_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p18_not_deleted
    ADD CONSTRAINT xref_p18_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p18_not_deleted_old xref_p18_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p18_not_deleted_old
    ADD CONSTRAINT xref_p18_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p18_not_deleted xref_p18_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p18_not_deleted
    ADD CONSTRAINT xref_p18_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p18_not_deleted_old xref_p18_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p18_not_deleted_old
    ADD CONSTRAINT xref_p18_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p18_not_deleted xref_p18_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p18_not_deleted
    ADD CONSTRAINT xref_p18_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p18_not_deleted_old xref_p18_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p18_not_deleted_old
    ADD CONSTRAINT xref_p18_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p19_deleted xref_p19_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p19_deleted
    ADD CONSTRAINT xref_p19_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id) DEFERRABLE;


--
-- Name: xref_p19_deleted xref_p19_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p19_deleted
    ADD CONSTRAINT xref_p19_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id) DEFERRABLE;


--
-- Name: xref_p19_deleted xref_p19_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p19_deleted
    ADD CONSTRAINT xref_p19_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id) DEFERRABLE;


--
-- Name: xref_p19_deleted xref_p19_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p19_deleted
    ADD CONSTRAINT xref_p19_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi) DEFERRABLE;


--
-- Name: xref_p19_not_deleted xref_p19_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p19_not_deleted
    ADD CONSTRAINT xref_p19_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id) DEFERRABLE;


--
-- Name: xref_p19_not_deleted xref_p19_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p19_not_deleted
    ADD CONSTRAINT xref_p19_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id) DEFERRABLE;


--
-- Name: xref_p19_not_deleted xref_p19_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p19_not_deleted
    ADD CONSTRAINT xref_p19_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id) DEFERRABLE;


--
-- Name: xref_p19_not_deleted xref_p19_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p19_not_deleted
    ADD CONSTRAINT xref_p19_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi) DEFERRABLE;


--
-- Name: xref_p1_deleted xref_p1_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p1_deleted
    ADD CONSTRAINT xref_p1_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p1_deleted_old xref_p1_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p1_deleted_old
    ADD CONSTRAINT xref_p1_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p1_deleted xref_p1_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p1_deleted
    ADD CONSTRAINT xref_p1_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p1_deleted_old xref_p1_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p1_deleted_old
    ADD CONSTRAINT xref_p1_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p1_deleted xref_p1_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p1_deleted
    ADD CONSTRAINT xref_p1_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p1_deleted_old xref_p1_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p1_deleted_old
    ADD CONSTRAINT xref_p1_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p1_deleted xref_p1_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p1_deleted
    ADD CONSTRAINT xref_p1_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p1_deleted_old xref_p1_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p1_deleted_old
    ADD CONSTRAINT xref_p1_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p1_not_deleted xref_p1_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p1_not_deleted
    ADD CONSTRAINT xref_p1_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p1_not_deleted_old xref_p1_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p1_not_deleted_old
    ADD CONSTRAINT xref_p1_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p1_not_deleted xref_p1_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p1_not_deleted
    ADD CONSTRAINT xref_p1_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p1_not_deleted_old xref_p1_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p1_not_deleted_old
    ADD CONSTRAINT xref_p1_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p1_not_deleted xref_p1_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p1_not_deleted
    ADD CONSTRAINT xref_p1_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p1_not_deleted_old xref_p1_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p1_not_deleted_old
    ADD CONSTRAINT xref_p1_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p1_not_deleted xref_p1_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p1_not_deleted
    ADD CONSTRAINT xref_p1_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p1_not_deleted_old xref_p1_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p1_not_deleted_old
    ADD CONSTRAINT xref_p1_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p20_deleted xref_p20_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p20_deleted
    ADD CONSTRAINT xref_p20_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p20_deleted_old xref_p20_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p20_deleted_old
    ADD CONSTRAINT xref_p20_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p20_deleted xref_p20_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p20_deleted
    ADD CONSTRAINT xref_p20_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p20_deleted_old xref_p20_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p20_deleted_old
    ADD CONSTRAINT xref_p20_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p20_deleted xref_p20_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p20_deleted
    ADD CONSTRAINT xref_p20_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p20_deleted_old xref_p20_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p20_deleted_old
    ADD CONSTRAINT xref_p20_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p20_deleted xref_p20_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p20_deleted
    ADD CONSTRAINT xref_p20_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p20_deleted_old xref_p20_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p20_deleted_old
    ADD CONSTRAINT xref_p20_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p20_not_deleted xref_p20_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p20_not_deleted
    ADD CONSTRAINT xref_p20_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p20_not_deleted_old xref_p20_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p20_not_deleted_old
    ADD CONSTRAINT xref_p20_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p20_not_deleted xref_p20_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p20_not_deleted
    ADD CONSTRAINT xref_p20_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p20_not_deleted_old xref_p20_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p20_not_deleted_old
    ADD CONSTRAINT xref_p20_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p20_not_deleted xref_p20_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p20_not_deleted
    ADD CONSTRAINT xref_p20_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p20_not_deleted_old xref_p20_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p20_not_deleted_old
    ADD CONSTRAINT xref_p20_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p20_not_deleted xref_p20_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p20_not_deleted
    ADD CONSTRAINT xref_p20_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p20_not_deleted_old xref_p20_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p20_not_deleted_old
    ADD CONSTRAINT xref_p20_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p21_deleted xref_p21_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p21_deleted
    ADD CONSTRAINT xref_p21_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id) DEFERRABLE;


--
-- Name: xref_p21_deleted xref_p21_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p21_deleted
    ADD CONSTRAINT xref_p21_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id) DEFERRABLE;


--
-- Name: xref_p21_deleted xref_p21_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p21_deleted
    ADD CONSTRAINT xref_p21_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id) DEFERRABLE;


--
-- Name: xref_p21_deleted xref_p21_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p21_deleted
    ADD CONSTRAINT xref_p21_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi) DEFERRABLE;


--
-- Name: xref_p21_not_deleted xref_p21_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p21_not_deleted
    ADD CONSTRAINT xref_p21_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id) DEFERRABLE;


--
-- Name: xref_p21_not_deleted xref_p21_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p21_not_deleted
    ADD CONSTRAINT xref_p21_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id) DEFERRABLE;


--
-- Name: xref_p21_not_deleted xref_p21_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p21_not_deleted
    ADD CONSTRAINT xref_p21_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id) DEFERRABLE;


--
-- Name: xref_p21_not_deleted xref_p21_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p21_not_deleted
    ADD CONSTRAINT xref_p21_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi) DEFERRABLE;


--
-- Name: xref_p22_deleted xref_p22_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p22_deleted
    ADD CONSTRAINT xref_p22_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id) DEFERRABLE;


--
-- Name: xref_p22_deleted xref_p22_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p22_deleted
    ADD CONSTRAINT xref_p22_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id) DEFERRABLE;


--
-- Name: xref_p22_deleted xref_p22_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p22_deleted
    ADD CONSTRAINT xref_p22_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id) DEFERRABLE;


--
-- Name: xref_p22_deleted xref_p22_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p22_deleted
    ADD CONSTRAINT xref_p22_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi) DEFERRABLE;


--
-- Name: xref_p22_not_deleted xref_p22_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p22_not_deleted
    ADD CONSTRAINT xref_p22_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id) DEFERRABLE;


--
-- Name: xref_p22_not_deleted xref_p22_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p22_not_deleted
    ADD CONSTRAINT xref_p22_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id) DEFERRABLE;


--
-- Name: xref_p22_not_deleted xref_p22_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p22_not_deleted
    ADD CONSTRAINT xref_p22_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id) DEFERRABLE;


--
-- Name: xref_p22_not_deleted xref_p22_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p22_not_deleted
    ADD CONSTRAINT xref_p22_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi) DEFERRABLE;


--
-- Name: xref_p23_deleted xref_p23_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p23_deleted
    ADD CONSTRAINT xref_p23_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p23_deleted_old xref_p23_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p23_deleted_old
    ADD CONSTRAINT xref_p23_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p23_deleted xref_p23_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p23_deleted
    ADD CONSTRAINT xref_p23_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p23_deleted_old xref_p23_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p23_deleted_old
    ADD CONSTRAINT xref_p23_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p23_deleted xref_p23_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p23_deleted
    ADD CONSTRAINT xref_p23_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p23_deleted_old xref_p23_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p23_deleted_old
    ADD CONSTRAINT xref_p23_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p23_deleted xref_p23_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p23_deleted
    ADD CONSTRAINT xref_p23_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p23_deleted_old xref_p23_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p23_deleted_old
    ADD CONSTRAINT xref_p23_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p23_not_deleted xref_p23_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p23_not_deleted
    ADD CONSTRAINT xref_p23_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p23_not_deleted_old xref_p23_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p23_not_deleted_old
    ADD CONSTRAINT xref_p23_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p23_not_deleted xref_p23_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p23_not_deleted
    ADD CONSTRAINT xref_p23_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p23_not_deleted_old xref_p23_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p23_not_deleted_old
    ADD CONSTRAINT xref_p23_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p23_not_deleted xref_p23_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p23_not_deleted
    ADD CONSTRAINT xref_p23_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p23_not_deleted_old xref_p23_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p23_not_deleted_old
    ADD CONSTRAINT xref_p23_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p23_not_deleted xref_p23_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p23_not_deleted
    ADD CONSTRAINT xref_p23_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p23_not_deleted_old xref_p23_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p23_not_deleted_old
    ADD CONSTRAINT xref_p23_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p24_deleted xref_p24_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p24_deleted
    ADD CONSTRAINT xref_p24_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p24_deleted_old xref_p24_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p24_deleted_old
    ADD CONSTRAINT xref_p24_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p24_deleted xref_p24_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p24_deleted
    ADD CONSTRAINT xref_p24_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p24_deleted_old xref_p24_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p24_deleted_old
    ADD CONSTRAINT xref_p24_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p24_deleted xref_p24_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p24_deleted
    ADD CONSTRAINT xref_p24_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p24_deleted_old xref_p24_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p24_deleted_old
    ADD CONSTRAINT xref_p24_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p24_deleted xref_p24_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p24_deleted
    ADD CONSTRAINT xref_p24_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p24_deleted_old xref_p24_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p24_deleted_old
    ADD CONSTRAINT xref_p24_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p24_not_deleted xref_p24_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p24_not_deleted
    ADD CONSTRAINT xref_p24_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p24_not_deleted_old xref_p24_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p24_not_deleted_old
    ADD CONSTRAINT xref_p24_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p24_not_deleted xref_p24_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p24_not_deleted
    ADD CONSTRAINT xref_p24_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p24_not_deleted_old xref_p24_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p24_not_deleted_old
    ADD CONSTRAINT xref_p24_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p24_not_deleted xref_p24_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p24_not_deleted
    ADD CONSTRAINT xref_p24_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p24_not_deleted_old xref_p24_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p24_not_deleted_old
    ADD CONSTRAINT xref_p24_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p24_not_deleted xref_p24_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p24_not_deleted
    ADD CONSTRAINT xref_p24_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p24_not_deleted_old xref_p24_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p24_not_deleted_old
    ADD CONSTRAINT xref_p24_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p25_deleted xref_p25_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p25_deleted
    ADD CONSTRAINT xref_p25_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p25_deleted_old xref_p25_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p25_deleted_old
    ADD CONSTRAINT xref_p25_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p25_deleted xref_p25_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p25_deleted
    ADD CONSTRAINT xref_p25_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p25_deleted_old xref_p25_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p25_deleted_old
    ADD CONSTRAINT xref_p25_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p25_deleted xref_p25_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p25_deleted
    ADD CONSTRAINT xref_p25_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p25_deleted_old xref_p25_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p25_deleted_old
    ADD CONSTRAINT xref_p25_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p25_deleted xref_p25_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p25_deleted
    ADD CONSTRAINT xref_p25_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p25_deleted_old xref_p25_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p25_deleted_old
    ADD CONSTRAINT xref_p25_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p25_not_deleted xref_p25_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p25_not_deleted
    ADD CONSTRAINT xref_p25_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p25_not_deleted_old xref_p25_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p25_not_deleted_old
    ADD CONSTRAINT xref_p25_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p25_not_deleted xref_p25_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p25_not_deleted
    ADD CONSTRAINT xref_p25_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p25_not_deleted_old xref_p25_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p25_not_deleted_old
    ADD CONSTRAINT xref_p25_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p25_not_deleted xref_p25_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p25_not_deleted
    ADD CONSTRAINT xref_p25_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p25_not_deleted_old xref_p25_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p25_not_deleted_old
    ADD CONSTRAINT xref_p25_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p25_not_deleted xref_p25_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p25_not_deleted
    ADD CONSTRAINT xref_p25_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p25_not_deleted_old xref_p25_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p25_not_deleted_old
    ADD CONSTRAINT xref_p25_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p26_deleted xref_p26_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p26_deleted
    ADD CONSTRAINT xref_p26_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p26_deleted_old xref_p26_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p26_deleted_old
    ADD CONSTRAINT xref_p26_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p26_deleted xref_p26_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p26_deleted
    ADD CONSTRAINT xref_p26_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p26_deleted_old xref_p26_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p26_deleted_old
    ADD CONSTRAINT xref_p26_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p26_deleted xref_p26_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p26_deleted
    ADD CONSTRAINT xref_p26_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p26_deleted_old xref_p26_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p26_deleted_old
    ADD CONSTRAINT xref_p26_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p26_deleted xref_p26_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p26_deleted
    ADD CONSTRAINT xref_p26_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p26_deleted_old xref_p26_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p26_deleted_old
    ADD CONSTRAINT xref_p26_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p26_not_deleted xref_p26_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p26_not_deleted
    ADD CONSTRAINT xref_p26_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p26_not_deleted_old xref_p26_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p26_not_deleted_old
    ADD CONSTRAINT xref_p26_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p26_not_deleted xref_p26_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p26_not_deleted
    ADD CONSTRAINT xref_p26_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p26_not_deleted_old xref_p26_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p26_not_deleted_old
    ADD CONSTRAINT xref_p26_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p26_not_deleted xref_p26_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p26_not_deleted
    ADD CONSTRAINT xref_p26_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p26_not_deleted_old xref_p26_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p26_not_deleted_old
    ADD CONSTRAINT xref_p26_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p26_not_deleted xref_p26_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p26_not_deleted
    ADD CONSTRAINT xref_p26_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p26_not_deleted_old xref_p26_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p26_not_deleted_old
    ADD CONSTRAINT xref_p26_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p27_deleted xref_p27_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p27_deleted
    ADD CONSTRAINT xref_p27_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p27_deleted xref_p27_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p27_deleted
    ADD CONSTRAINT xref_p27_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p27_deleted xref_p27_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p27_deleted
    ADD CONSTRAINT xref_p27_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p27_deleted xref_p27_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p27_deleted
    ADD CONSTRAINT xref_p27_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p27_not_deleted xref_p27_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p27_not_deleted
    ADD CONSTRAINT xref_p27_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p27_not_deleted xref_p27_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p27_not_deleted
    ADD CONSTRAINT xref_p27_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p27_not_deleted xref_p27_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p27_not_deleted
    ADD CONSTRAINT xref_p27_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p27_not_deleted xref_p27_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p27_not_deleted
    ADD CONSTRAINT xref_p27_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p28_deleted xref_p28_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p28_deleted
    ADD CONSTRAINT xref_p28_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p28_deleted xref_p28_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p28_deleted
    ADD CONSTRAINT xref_p28_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p28_deleted xref_p28_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p28_deleted
    ADD CONSTRAINT xref_p28_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p28_deleted xref_p28_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p28_deleted
    ADD CONSTRAINT xref_p28_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p28_not_deleted xref_p28_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p28_not_deleted
    ADD CONSTRAINT xref_p28_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p28_not_deleted xref_p28_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p28_not_deleted
    ADD CONSTRAINT xref_p28_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p28_not_deleted xref_p28_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p28_not_deleted
    ADD CONSTRAINT xref_p28_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p28_not_deleted xref_p28_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p28_not_deleted
    ADD CONSTRAINT xref_p28_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p29_deleted xref_p29_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p29_deleted
    ADD CONSTRAINT xref_p29_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p29_deleted xref_p29_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p29_deleted
    ADD CONSTRAINT xref_p29_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p29_deleted xref_p29_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p29_deleted
    ADD CONSTRAINT xref_p29_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p29_deleted xref_p29_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p29_deleted
    ADD CONSTRAINT xref_p29_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p29_not_deleted xref_p29_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p29_not_deleted
    ADD CONSTRAINT xref_p29_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p29_not_deleted xref_p29_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p29_not_deleted
    ADD CONSTRAINT xref_p29_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p29_not_deleted xref_p29_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p29_not_deleted
    ADD CONSTRAINT xref_p29_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p29_not_deleted xref_p29_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p29_not_deleted
    ADD CONSTRAINT xref_p29_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p2_deleted xref_p2_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p2_deleted
    ADD CONSTRAINT xref_p2_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p2_deleted_old xref_p2_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p2_deleted_old
    ADD CONSTRAINT xref_p2_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p2_deleted xref_p2_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p2_deleted
    ADD CONSTRAINT xref_p2_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p2_deleted_old xref_p2_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p2_deleted_old
    ADD CONSTRAINT xref_p2_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p2_deleted xref_p2_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p2_deleted
    ADD CONSTRAINT xref_p2_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p2_deleted_old xref_p2_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p2_deleted_old
    ADD CONSTRAINT xref_p2_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p2_deleted xref_p2_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p2_deleted
    ADD CONSTRAINT xref_p2_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p2_deleted_old xref_p2_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p2_deleted_old
    ADD CONSTRAINT xref_p2_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p2_not_deleted xref_p2_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p2_not_deleted
    ADD CONSTRAINT xref_p2_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p2_not_deleted_old xref_p2_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p2_not_deleted_old
    ADD CONSTRAINT xref_p2_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p2_not_deleted xref_p2_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p2_not_deleted
    ADD CONSTRAINT xref_p2_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p2_not_deleted_old xref_p2_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p2_not_deleted_old
    ADD CONSTRAINT xref_p2_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p2_not_deleted xref_p2_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p2_not_deleted
    ADD CONSTRAINT xref_p2_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p2_not_deleted_old xref_p2_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p2_not_deleted_old
    ADD CONSTRAINT xref_p2_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p2_not_deleted xref_p2_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p2_not_deleted
    ADD CONSTRAINT xref_p2_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p2_not_deleted_old xref_p2_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p2_not_deleted_old
    ADD CONSTRAINT xref_p2_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p30_deleted xref_p30_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p30_deleted
    ADD CONSTRAINT xref_p30_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p30_deleted_old xref_p30_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p30_deleted_old
    ADD CONSTRAINT xref_p30_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p30_deleted xref_p30_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p30_deleted
    ADD CONSTRAINT xref_p30_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p30_deleted_old xref_p30_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p30_deleted_old
    ADD CONSTRAINT xref_p30_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p30_deleted xref_p30_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p30_deleted
    ADD CONSTRAINT xref_p30_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p30_deleted_old xref_p30_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p30_deleted_old
    ADD CONSTRAINT xref_p30_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p30_deleted xref_p30_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p30_deleted
    ADD CONSTRAINT xref_p30_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p30_deleted_old xref_p30_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p30_deleted_old
    ADD CONSTRAINT xref_p30_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p30_not_deleted xref_p30_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p30_not_deleted
    ADD CONSTRAINT xref_p30_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p30_not_deleted_old xref_p30_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p30_not_deleted_old
    ADD CONSTRAINT xref_p30_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p30_not_deleted xref_p30_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p30_not_deleted
    ADD CONSTRAINT xref_p30_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p30_not_deleted_old xref_p30_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p30_not_deleted_old
    ADD CONSTRAINT xref_p30_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p30_not_deleted xref_p30_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p30_not_deleted
    ADD CONSTRAINT xref_p30_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p30_not_deleted_old xref_p30_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p30_not_deleted_old
    ADD CONSTRAINT xref_p30_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p30_not_deleted xref_p30_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p30_not_deleted
    ADD CONSTRAINT xref_p30_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p30_not_deleted_old xref_p30_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p30_not_deleted_old
    ADD CONSTRAINT xref_p30_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p31_deleted xref_p31_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p31_deleted
    ADD CONSTRAINT xref_p31_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p31_deleted_old xref_p31_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p31_deleted_old
    ADD CONSTRAINT xref_p31_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p31_deleted xref_p31_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p31_deleted
    ADD CONSTRAINT xref_p31_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p31_deleted_old xref_p31_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p31_deleted_old
    ADD CONSTRAINT xref_p31_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p31_deleted xref_p31_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p31_deleted
    ADD CONSTRAINT xref_p31_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p31_deleted_old xref_p31_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p31_deleted_old
    ADD CONSTRAINT xref_p31_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p31_deleted xref_p31_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p31_deleted
    ADD CONSTRAINT xref_p31_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p31_deleted_old xref_p31_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p31_deleted_old
    ADD CONSTRAINT xref_p31_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p31_not_deleted xref_p31_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p31_not_deleted
    ADD CONSTRAINT xref_p31_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p31_not_deleted_old xref_p31_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p31_not_deleted_old
    ADD CONSTRAINT xref_p31_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p31_not_deleted xref_p31_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p31_not_deleted
    ADD CONSTRAINT xref_p31_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p31_not_deleted_old xref_p31_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p31_not_deleted_old
    ADD CONSTRAINT xref_p31_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p31_not_deleted xref_p31_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p31_not_deleted
    ADD CONSTRAINT xref_p31_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p31_not_deleted_old xref_p31_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p31_not_deleted_old
    ADD CONSTRAINT xref_p31_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p31_not_deleted xref_p31_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p31_not_deleted
    ADD CONSTRAINT xref_p31_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p31_not_deleted_old xref_p31_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p31_not_deleted_old
    ADD CONSTRAINT xref_p31_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p32_deleted xref_p32_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p32_deleted
    ADD CONSTRAINT xref_p32_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p32_deleted xref_p32_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p32_deleted
    ADD CONSTRAINT xref_p32_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p32_deleted xref_p32_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p32_deleted
    ADD CONSTRAINT xref_p32_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p32_deleted xref_p32_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p32_deleted
    ADD CONSTRAINT xref_p32_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p32_not_deleted xref_p32_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p32_not_deleted
    ADD CONSTRAINT xref_p32_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p32_not_deleted xref_p32_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p32_not_deleted
    ADD CONSTRAINT xref_p32_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p32_not_deleted xref_p32_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p32_not_deleted
    ADD CONSTRAINT xref_p32_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p32_not_deleted xref_p32_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p32_not_deleted
    ADD CONSTRAINT xref_p32_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p33_deleted xref_p33_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p33_deleted
    ADD CONSTRAINT xref_p33_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p33_deleted_old xref_p33_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p33_deleted_old
    ADD CONSTRAINT xref_p33_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p33_deleted xref_p33_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p33_deleted
    ADD CONSTRAINT xref_p33_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p33_deleted_old xref_p33_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p33_deleted_old
    ADD CONSTRAINT xref_p33_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p33_deleted xref_p33_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p33_deleted
    ADD CONSTRAINT xref_p33_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p33_deleted_old xref_p33_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p33_deleted_old
    ADD CONSTRAINT xref_p33_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p33_deleted xref_p33_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p33_deleted
    ADD CONSTRAINT xref_p33_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p33_deleted_old xref_p33_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p33_deleted_old
    ADD CONSTRAINT xref_p33_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p33_not_deleted xref_p33_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p33_not_deleted
    ADD CONSTRAINT xref_p33_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p33_not_deleted_old xref_p33_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p33_not_deleted_old
    ADD CONSTRAINT xref_p33_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p33_not_deleted xref_p33_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p33_not_deleted
    ADD CONSTRAINT xref_p33_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p33_not_deleted_old xref_p33_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p33_not_deleted_old
    ADD CONSTRAINT xref_p33_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p33_not_deleted xref_p33_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p33_not_deleted
    ADD CONSTRAINT xref_p33_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p33_not_deleted_old xref_p33_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p33_not_deleted_old
    ADD CONSTRAINT xref_p33_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p33_not_deleted xref_p33_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p33_not_deleted
    ADD CONSTRAINT xref_p33_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p33_not_deleted_old xref_p33_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p33_not_deleted_old
    ADD CONSTRAINT xref_p33_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p34_deleted xref_p34_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p34_deleted
    ADD CONSTRAINT xref_p34_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p34_deleted_old xref_p34_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p34_deleted_old
    ADD CONSTRAINT xref_p34_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p34_deleted xref_p34_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p34_deleted
    ADD CONSTRAINT xref_p34_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p34_deleted_old xref_p34_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p34_deleted_old
    ADD CONSTRAINT xref_p34_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p34_deleted xref_p34_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p34_deleted
    ADD CONSTRAINT xref_p34_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p34_deleted_old xref_p34_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p34_deleted_old
    ADD CONSTRAINT xref_p34_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p34_deleted xref_p34_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p34_deleted
    ADD CONSTRAINT xref_p34_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p34_deleted_old xref_p34_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p34_deleted_old
    ADD CONSTRAINT xref_p34_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p34_not_deleted xref_p34_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p34_not_deleted
    ADD CONSTRAINT xref_p34_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p34_not_deleted_old xref_p34_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p34_not_deleted_old
    ADD CONSTRAINT xref_p34_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p34_not_deleted xref_p34_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p34_not_deleted
    ADD CONSTRAINT xref_p34_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p34_not_deleted_old xref_p34_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p34_not_deleted_old
    ADD CONSTRAINT xref_p34_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p34_not_deleted xref_p34_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p34_not_deleted
    ADD CONSTRAINT xref_p34_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p34_not_deleted_old xref_p34_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p34_not_deleted_old
    ADD CONSTRAINT xref_p34_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p34_not_deleted xref_p34_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p34_not_deleted
    ADD CONSTRAINT xref_p34_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p34_not_deleted_old xref_p34_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p34_not_deleted_old
    ADD CONSTRAINT xref_p34_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p35_deleted xref_p35_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p35_deleted
    ADD CONSTRAINT xref_p35_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p35_deleted_old xref_p35_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p35_deleted_old
    ADD CONSTRAINT xref_p35_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p35_deleted xref_p35_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p35_deleted
    ADD CONSTRAINT xref_p35_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p35_deleted_old xref_p35_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p35_deleted_old
    ADD CONSTRAINT xref_p35_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p35_deleted xref_p35_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p35_deleted
    ADD CONSTRAINT xref_p35_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p35_deleted_old xref_p35_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p35_deleted_old
    ADD CONSTRAINT xref_p35_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p35_deleted xref_p35_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p35_deleted
    ADD CONSTRAINT xref_p35_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p35_deleted_old xref_p35_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p35_deleted_old
    ADD CONSTRAINT xref_p35_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p35_not_deleted xref_p35_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p35_not_deleted
    ADD CONSTRAINT xref_p35_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p35_not_deleted_old xref_p35_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p35_not_deleted_old
    ADD CONSTRAINT xref_p35_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p35_not_deleted xref_p35_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p35_not_deleted
    ADD CONSTRAINT xref_p35_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p35_not_deleted_old xref_p35_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p35_not_deleted_old
    ADD CONSTRAINT xref_p35_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p35_not_deleted xref_p35_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p35_not_deleted
    ADD CONSTRAINT xref_p35_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p35_not_deleted_old xref_p35_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p35_not_deleted_old
    ADD CONSTRAINT xref_p35_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p35_not_deleted xref_p35_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p35_not_deleted
    ADD CONSTRAINT xref_p35_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p35_not_deleted_old xref_p35_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p35_not_deleted_old
    ADD CONSTRAINT xref_p35_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p36_deleted xref_p36_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p36_deleted
    ADD CONSTRAINT xref_p36_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p36_deleted_old xref_p36_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p36_deleted_old
    ADD CONSTRAINT xref_p36_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p36_deleted xref_p36_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p36_deleted
    ADD CONSTRAINT xref_p36_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p36_deleted_old xref_p36_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p36_deleted_old
    ADD CONSTRAINT xref_p36_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p36_deleted xref_p36_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p36_deleted
    ADD CONSTRAINT xref_p36_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p36_deleted_old xref_p36_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p36_deleted_old
    ADD CONSTRAINT xref_p36_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p36_deleted xref_p36_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p36_deleted
    ADD CONSTRAINT xref_p36_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p36_deleted_old xref_p36_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p36_deleted_old
    ADD CONSTRAINT xref_p36_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p36_not_deleted xref_p36_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p36_not_deleted
    ADD CONSTRAINT xref_p36_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p36_not_deleted_old xref_p36_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p36_not_deleted_old
    ADD CONSTRAINT xref_p36_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p36_not_deleted xref_p36_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p36_not_deleted
    ADD CONSTRAINT xref_p36_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p36_not_deleted_old xref_p36_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p36_not_deleted_old
    ADD CONSTRAINT xref_p36_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p36_not_deleted xref_p36_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p36_not_deleted
    ADD CONSTRAINT xref_p36_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p36_not_deleted_old xref_p36_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p36_not_deleted_old
    ADD CONSTRAINT xref_p36_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p36_not_deleted xref_p36_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p36_not_deleted
    ADD CONSTRAINT xref_p36_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p36_not_deleted_old xref_p36_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p36_not_deleted_old
    ADD CONSTRAINT xref_p36_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p37_deleted xref_p37_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p37_deleted
    ADD CONSTRAINT xref_p37_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p37_deleted_old xref_p37_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p37_deleted_old
    ADD CONSTRAINT xref_p37_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p37_deleted xref_p37_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p37_deleted
    ADD CONSTRAINT xref_p37_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p37_deleted_old xref_p37_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p37_deleted_old
    ADD CONSTRAINT xref_p37_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p37_deleted xref_p37_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p37_deleted
    ADD CONSTRAINT xref_p37_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p37_deleted_old xref_p37_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p37_deleted_old
    ADD CONSTRAINT xref_p37_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p37_deleted xref_p37_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p37_deleted
    ADD CONSTRAINT xref_p37_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p37_deleted_old xref_p37_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p37_deleted_old
    ADD CONSTRAINT xref_p37_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p37_not_deleted xref_p37_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p37_not_deleted
    ADD CONSTRAINT xref_p37_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p37_not_deleted_old xref_p37_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p37_not_deleted_old
    ADD CONSTRAINT xref_p37_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p37_not_deleted xref_p37_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p37_not_deleted
    ADD CONSTRAINT xref_p37_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p37_not_deleted_old xref_p37_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p37_not_deleted_old
    ADD CONSTRAINT xref_p37_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p37_not_deleted xref_p37_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p37_not_deleted
    ADD CONSTRAINT xref_p37_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p37_not_deleted_old xref_p37_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p37_not_deleted_old
    ADD CONSTRAINT xref_p37_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p37_not_deleted xref_p37_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p37_not_deleted
    ADD CONSTRAINT xref_p37_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p37_not_deleted_old xref_p37_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p37_not_deleted_old
    ADD CONSTRAINT xref_p37_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p38_deleted xref_p38_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p38_deleted
    ADD CONSTRAINT xref_p38_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p38_deleted_old xref_p38_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p38_deleted_old
    ADD CONSTRAINT xref_p38_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p38_deleted xref_p38_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p38_deleted
    ADD CONSTRAINT xref_p38_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p38_deleted_old xref_p38_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p38_deleted_old
    ADD CONSTRAINT xref_p38_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p38_deleted xref_p38_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p38_deleted
    ADD CONSTRAINT xref_p38_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p38_deleted_old xref_p38_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p38_deleted_old
    ADD CONSTRAINT xref_p38_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p38_deleted xref_p38_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p38_deleted
    ADD CONSTRAINT xref_p38_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p38_deleted_old xref_p38_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p38_deleted_old
    ADD CONSTRAINT xref_p38_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p38_not_deleted xref_p38_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p38_not_deleted
    ADD CONSTRAINT xref_p38_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p38_not_deleted_old xref_p38_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p38_not_deleted_old
    ADD CONSTRAINT xref_p38_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p38_not_deleted xref_p38_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p38_not_deleted
    ADD CONSTRAINT xref_p38_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p38_not_deleted_old xref_p38_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p38_not_deleted_old
    ADD CONSTRAINT xref_p38_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p38_not_deleted xref_p38_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p38_not_deleted
    ADD CONSTRAINT xref_p38_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p38_not_deleted_old xref_p38_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p38_not_deleted_old
    ADD CONSTRAINT xref_p38_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p38_not_deleted xref_p38_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p38_not_deleted
    ADD CONSTRAINT xref_p38_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p38_not_deleted_old xref_p38_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p38_not_deleted_old
    ADD CONSTRAINT xref_p38_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p39_deleted xref_p39_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p39_deleted
    ADD CONSTRAINT xref_p39_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p39_deleted_old xref_p39_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p39_deleted_old
    ADD CONSTRAINT xref_p39_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p39_deleted xref_p39_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p39_deleted
    ADD CONSTRAINT xref_p39_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p39_deleted_old xref_p39_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p39_deleted_old
    ADD CONSTRAINT xref_p39_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p39_deleted xref_p39_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p39_deleted
    ADD CONSTRAINT xref_p39_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p39_deleted_old xref_p39_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p39_deleted_old
    ADD CONSTRAINT xref_p39_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p39_deleted xref_p39_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p39_deleted
    ADD CONSTRAINT xref_p39_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p39_deleted_old xref_p39_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p39_deleted_old
    ADD CONSTRAINT xref_p39_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p39_not_deleted xref_p39_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p39_not_deleted
    ADD CONSTRAINT xref_p39_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p39_not_deleted_old xref_p39_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p39_not_deleted_old
    ADD CONSTRAINT xref_p39_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p39_not_deleted xref_p39_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p39_not_deleted
    ADD CONSTRAINT xref_p39_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p39_not_deleted_old xref_p39_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p39_not_deleted_old
    ADD CONSTRAINT xref_p39_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p39_not_deleted xref_p39_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p39_not_deleted
    ADD CONSTRAINT xref_p39_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p39_not_deleted_old xref_p39_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p39_not_deleted_old
    ADD CONSTRAINT xref_p39_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p39_not_deleted xref_p39_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p39_not_deleted
    ADD CONSTRAINT xref_p39_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p39_not_deleted_old xref_p39_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p39_not_deleted_old
    ADD CONSTRAINT xref_p39_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p3_deleted xref_p3_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p3_deleted
    ADD CONSTRAINT xref_p3_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p3_deleted_old xref_p3_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p3_deleted_old
    ADD CONSTRAINT xref_p3_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p3_deleted xref_p3_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p3_deleted
    ADD CONSTRAINT xref_p3_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p3_deleted_old xref_p3_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p3_deleted_old
    ADD CONSTRAINT xref_p3_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p3_deleted xref_p3_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p3_deleted
    ADD CONSTRAINT xref_p3_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p3_deleted_old xref_p3_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p3_deleted_old
    ADD CONSTRAINT xref_p3_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p3_deleted xref_p3_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p3_deleted
    ADD CONSTRAINT xref_p3_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p3_deleted_old xref_p3_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p3_deleted_old
    ADD CONSTRAINT xref_p3_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p3_not_deleted xref_p3_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p3_not_deleted
    ADD CONSTRAINT xref_p3_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p3_not_deleted_old xref_p3_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p3_not_deleted_old
    ADD CONSTRAINT xref_p3_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p3_not_deleted xref_p3_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p3_not_deleted
    ADD CONSTRAINT xref_p3_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p3_not_deleted_old xref_p3_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p3_not_deleted_old
    ADD CONSTRAINT xref_p3_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p3_not_deleted xref_p3_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p3_not_deleted
    ADD CONSTRAINT xref_p3_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p3_not_deleted_old xref_p3_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p3_not_deleted_old
    ADD CONSTRAINT xref_p3_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p3_not_deleted xref_p3_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p3_not_deleted
    ADD CONSTRAINT xref_p3_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p3_not_deleted_old xref_p3_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p3_not_deleted_old
    ADD CONSTRAINT xref_p3_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p40_deleted xref_p40_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p40_deleted
    ADD CONSTRAINT xref_p40_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p40_deleted_old xref_p40_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p40_deleted_old
    ADD CONSTRAINT xref_p40_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p40_deleted xref_p40_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p40_deleted
    ADD CONSTRAINT xref_p40_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p40_deleted_old xref_p40_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p40_deleted_old
    ADD CONSTRAINT xref_p40_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p40_deleted xref_p40_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p40_deleted
    ADD CONSTRAINT xref_p40_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p40_deleted_old xref_p40_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p40_deleted_old
    ADD CONSTRAINT xref_p40_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p40_deleted xref_p40_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p40_deleted
    ADD CONSTRAINT xref_p40_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p40_deleted_old xref_p40_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p40_deleted_old
    ADD CONSTRAINT xref_p40_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p40_not_deleted xref_p40_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p40_not_deleted
    ADD CONSTRAINT xref_p40_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p40_not_deleted_old xref_p40_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p40_not_deleted_old
    ADD CONSTRAINT xref_p40_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p40_not_deleted xref_p40_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p40_not_deleted
    ADD CONSTRAINT xref_p40_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p40_not_deleted_old xref_p40_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p40_not_deleted_old
    ADD CONSTRAINT xref_p40_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p40_not_deleted xref_p40_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p40_not_deleted
    ADD CONSTRAINT xref_p40_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p40_not_deleted_old xref_p40_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p40_not_deleted_old
    ADD CONSTRAINT xref_p40_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p40_not_deleted xref_p40_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p40_not_deleted
    ADD CONSTRAINT xref_p40_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p40_not_deleted_old xref_p40_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p40_not_deleted_old
    ADD CONSTRAINT xref_p40_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p41_deleted xref_p41_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p41_deleted
    ADD CONSTRAINT xref_p41_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p41_deleted_old xref_p41_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p41_deleted_old
    ADD CONSTRAINT xref_p41_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p41_deleted xref_p41_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p41_deleted
    ADD CONSTRAINT xref_p41_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p41_deleted_old xref_p41_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p41_deleted_old
    ADD CONSTRAINT xref_p41_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p41_deleted xref_p41_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p41_deleted
    ADD CONSTRAINT xref_p41_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p41_deleted_old xref_p41_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p41_deleted_old
    ADD CONSTRAINT xref_p41_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p41_deleted xref_p41_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p41_deleted
    ADD CONSTRAINT xref_p41_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p41_deleted_old xref_p41_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p41_deleted_old
    ADD CONSTRAINT xref_p41_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p41_not_deleted xref_p41_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p41_not_deleted
    ADD CONSTRAINT xref_p41_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p41_not_deleted_old xref_p41_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p41_not_deleted_old
    ADD CONSTRAINT xref_p41_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p41_not_deleted xref_p41_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p41_not_deleted
    ADD CONSTRAINT xref_p41_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p41_not_deleted_old xref_p41_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p41_not_deleted_old
    ADD CONSTRAINT xref_p41_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p41_not_deleted xref_p41_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p41_not_deleted
    ADD CONSTRAINT xref_p41_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p41_not_deleted_old xref_p41_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p41_not_deleted_old
    ADD CONSTRAINT xref_p41_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p41_not_deleted xref_p41_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p41_not_deleted
    ADD CONSTRAINT xref_p41_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p41_not_deleted_old xref_p41_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p41_not_deleted_old
    ADD CONSTRAINT xref_p41_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p42_deleted xref_p42_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p42_deleted
    ADD CONSTRAINT xref_p42_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p42_deleted_old xref_p42_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p42_deleted_old
    ADD CONSTRAINT xref_p42_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p42_deleted xref_p42_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p42_deleted
    ADD CONSTRAINT xref_p42_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p42_deleted_old xref_p42_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p42_deleted_old
    ADD CONSTRAINT xref_p42_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p42_deleted xref_p42_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p42_deleted
    ADD CONSTRAINT xref_p42_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p42_deleted_old xref_p42_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p42_deleted_old
    ADD CONSTRAINT xref_p42_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p42_deleted xref_p42_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p42_deleted
    ADD CONSTRAINT xref_p42_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p42_deleted_old xref_p42_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p42_deleted_old
    ADD CONSTRAINT xref_p42_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p42_not_deleted xref_p42_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p42_not_deleted
    ADD CONSTRAINT xref_p42_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p42_not_deleted_old xref_p42_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p42_not_deleted_old
    ADD CONSTRAINT xref_p42_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p42_not_deleted xref_p42_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p42_not_deleted
    ADD CONSTRAINT xref_p42_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p42_not_deleted_old xref_p42_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p42_not_deleted_old
    ADD CONSTRAINT xref_p42_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p42_not_deleted xref_p42_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p42_not_deleted
    ADD CONSTRAINT xref_p42_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p42_not_deleted_old xref_p42_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p42_not_deleted_old
    ADD CONSTRAINT xref_p42_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p42_not_deleted xref_p42_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p42_not_deleted
    ADD CONSTRAINT xref_p42_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p42_not_deleted_old xref_p42_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p42_not_deleted_old
    ADD CONSTRAINT xref_p42_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p43_deleted xref_p43_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p43_deleted
    ADD CONSTRAINT xref_p43_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p43_deleted_old xref_p43_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p43_deleted_old
    ADD CONSTRAINT xref_p43_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p43_deleted xref_p43_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p43_deleted
    ADD CONSTRAINT xref_p43_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p43_deleted_old xref_p43_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p43_deleted_old
    ADD CONSTRAINT xref_p43_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p43_deleted xref_p43_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p43_deleted
    ADD CONSTRAINT xref_p43_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p43_deleted_old xref_p43_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p43_deleted_old
    ADD CONSTRAINT xref_p43_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p43_deleted xref_p43_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p43_deleted
    ADD CONSTRAINT xref_p43_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p43_deleted_old xref_p43_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p43_deleted_old
    ADD CONSTRAINT xref_p43_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p43_not_deleted xref_p43_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p43_not_deleted
    ADD CONSTRAINT xref_p43_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p43_not_deleted_old xref_p43_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p43_not_deleted_old
    ADD CONSTRAINT xref_p43_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p43_not_deleted xref_p43_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p43_not_deleted
    ADD CONSTRAINT xref_p43_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p43_not_deleted_old xref_p43_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p43_not_deleted_old
    ADD CONSTRAINT xref_p43_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p43_not_deleted xref_p43_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p43_not_deleted
    ADD CONSTRAINT xref_p43_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p43_not_deleted_old xref_p43_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p43_not_deleted_old
    ADD CONSTRAINT xref_p43_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p43_not_deleted xref_p43_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p43_not_deleted
    ADD CONSTRAINT xref_p43_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p43_not_deleted_old xref_p43_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p43_not_deleted_old
    ADD CONSTRAINT xref_p43_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p44_deleted xref_p44_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p44_deleted
    ADD CONSTRAINT xref_p44_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p44_deleted_old xref_p44_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p44_deleted_old
    ADD CONSTRAINT xref_p44_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p44_deleted xref_p44_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p44_deleted
    ADD CONSTRAINT xref_p44_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p44_deleted_old xref_p44_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p44_deleted_old
    ADD CONSTRAINT xref_p44_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p44_deleted xref_p44_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p44_deleted
    ADD CONSTRAINT xref_p44_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p44_deleted_old xref_p44_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p44_deleted_old
    ADD CONSTRAINT xref_p44_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p44_deleted xref_p44_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p44_deleted
    ADD CONSTRAINT xref_p44_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p44_deleted_old xref_p44_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p44_deleted_old
    ADD CONSTRAINT xref_p44_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p44_not_deleted xref_p44_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p44_not_deleted
    ADD CONSTRAINT xref_p44_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p44_not_deleted_old xref_p44_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p44_not_deleted_old
    ADD CONSTRAINT xref_p44_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p44_not_deleted xref_p44_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p44_not_deleted
    ADD CONSTRAINT xref_p44_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p44_not_deleted_old xref_p44_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p44_not_deleted_old
    ADD CONSTRAINT xref_p44_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p44_not_deleted xref_p44_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p44_not_deleted
    ADD CONSTRAINT xref_p44_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p44_not_deleted_old xref_p44_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p44_not_deleted_old
    ADD CONSTRAINT xref_p44_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p44_not_deleted xref_p44_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p44_not_deleted
    ADD CONSTRAINT xref_p44_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p44_not_deleted_old xref_p44_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p44_not_deleted_old
    ADD CONSTRAINT xref_p44_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p45_deleted xref_p45_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p45_deleted
    ADD CONSTRAINT xref_p45_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p45_deleted_old xref_p45_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p45_deleted_old
    ADD CONSTRAINT xref_p45_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p45_deleted xref_p45_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p45_deleted
    ADD CONSTRAINT xref_p45_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p45_deleted_old xref_p45_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p45_deleted_old
    ADD CONSTRAINT xref_p45_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p45_deleted xref_p45_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p45_deleted
    ADD CONSTRAINT xref_p45_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p45_deleted_old xref_p45_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p45_deleted_old
    ADD CONSTRAINT xref_p45_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p45_deleted xref_p45_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p45_deleted
    ADD CONSTRAINT xref_p45_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p45_deleted_old xref_p45_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p45_deleted_old
    ADD CONSTRAINT xref_p45_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p45_not_deleted xref_p45_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p45_not_deleted
    ADD CONSTRAINT xref_p45_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p45_not_deleted_old xref_p45_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p45_not_deleted_old
    ADD CONSTRAINT xref_p45_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p45_not_deleted xref_p45_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p45_not_deleted
    ADD CONSTRAINT xref_p45_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p45_not_deleted_old xref_p45_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p45_not_deleted_old
    ADD CONSTRAINT xref_p45_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p45_not_deleted xref_p45_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p45_not_deleted
    ADD CONSTRAINT xref_p45_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p45_not_deleted_old xref_p45_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p45_not_deleted_old
    ADD CONSTRAINT xref_p45_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p45_not_deleted xref_p45_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p45_not_deleted
    ADD CONSTRAINT xref_p45_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p45_not_deleted_old xref_p45_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p45_not_deleted_old
    ADD CONSTRAINT xref_p45_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p46_deleted xref_p46_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p46_deleted
    ADD CONSTRAINT xref_p46_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p46_deleted_old xref_p46_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p46_deleted_old
    ADD CONSTRAINT xref_p46_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p46_deleted xref_p46_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p46_deleted
    ADD CONSTRAINT xref_p46_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p46_deleted_old xref_p46_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p46_deleted_old
    ADD CONSTRAINT xref_p46_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p46_deleted xref_p46_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p46_deleted
    ADD CONSTRAINT xref_p46_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p46_deleted_old xref_p46_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p46_deleted_old
    ADD CONSTRAINT xref_p46_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p46_deleted xref_p46_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p46_deleted
    ADD CONSTRAINT xref_p46_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p46_deleted_old xref_p46_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p46_deleted_old
    ADD CONSTRAINT xref_p46_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p46_not_deleted xref_p46_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p46_not_deleted
    ADD CONSTRAINT xref_p46_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p46_not_deleted_old xref_p46_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p46_not_deleted_old
    ADD CONSTRAINT xref_p46_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p46_not_deleted xref_p46_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p46_not_deleted
    ADD CONSTRAINT xref_p46_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p46_not_deleted_old xref_p46_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p46_not_deleted_old
    ADD CONSTRAINT xref_p46_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p46_not_deleted xref_p46_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p46_not_deleted
    ADD CONSTRAINT xref_p46_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p46_not_deleted_old xref_p46_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p46_not_deleted_old
    ADD CONSTRAINT xref_p46_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p46_not_deleted xref_p46_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p46_not_deleted
    ADD CONSTRAINT xref_p46_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p46_not_deleted_old xref_p46_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p46_not_deleted_old
    ADD CONSTRAINT xref_p46_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p47_deleted xref_p47_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p47_deleted
    ADD CONSTRAINT xref_p47_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p47_deleted_old xref_p47_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p47_deleted_old
    ADD CONSTRAINT xref_p47_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p47_deleted xref_p47_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p47_deleted
    ADD CONSTRAINT xref_p47_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p47_deleted_old xref_p47_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p47_deleted_old
    ADD CONSTRAINT xref_p47_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p47_deleted xref_p47_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p47_deleted
    ADD CONSTRAINT xref_p47_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p47_deleted_old xref_p47_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p47_deleted_old
    ADD CONSTRAINT xref_p47_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p47_deleted xref_p47_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p47_deleted
    ADD CONSTRAINT xref_p47_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p47_deleted_old xref_p47_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p47_deleted_old
    ADD CONSTRAINT xref_p47_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p47_not_deleted xref_p47_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p47_not_deleted
    ADD CONSTRAINT xref_p47_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p47_not_deleted_old xref_p47_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p47_not_deleted_old
    ADD CONSTRAINT xref_p47_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p47_not_deleted xref_p47_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p47_not_deleted
    ADD CONSTRAINT xref_p47_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p47_not_deleted_old xref_p47_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p47_not_deleted_old
    ADD CONSTRAINT xref_p47_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p47_not_deleted xref_p47_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p47_not_deleted
    ADD CONSTRAINT xref_p47_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p47_not_deleted_old xref_p47_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p47_not_deleted_old
    ADD CONSTRAINT xref_p47_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p47_not_deleted xref_p47_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p47_not_deleted
    ADD CONSTRAINT xref_p47_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p47_not_deleted_old xref_p47_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p47_not_deleted_old
    ADD CONSTRAINT xref_p47_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p48_deleted xref_p48_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p48_deleted
    ADD CONSTRAINT xref_p48_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p48_deleted_old xref_p48_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p48_deleted_old
    ADD CONSTRAINT xref_p48_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p48_deleted xref_p48_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p48_deleted
    ADD CONSTRAINT xref_p48_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p48_deleted_old xref_p48_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p48_deleted_old
    ADD CONSTRAINT xref_p48_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p48_deleted xref_p48_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p48_deleted
    ADD CONSTRAINT xref_p48_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p48_deleted_old xref_p48_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p48_deleted_old
    ADD CONSTRAINT xref_p48_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p48_deleted xref_p48_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p48_deleted
    ADD CONSTRAINT xref_p48_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p48_deleted_old xref_p48_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p48_deleted_old
    ADD CONSTRAINT xref_p48_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p48_not_deleted xref_p48_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p48_not_deleted
    ADD CONSTRAINT xref_p48_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p48_not_deleted_old xref_p48_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p48_not_deleted_old
    ADD CONSTRAINT xref_p48_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p48_not_deleted xref_p48_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p48_not_deleted
    ADD CONSTRAINT xref_p48_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p48_not_deleted_old xref_p48_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p48_not_deleted_old
    ADD CONSTRAINT xref_p48_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p48_not_deleted xref_p48_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p48_not_deleted
    ADD CONSTRAINT xref_p48_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p48_not_deleted_old xref_p48_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p48_not_deleted_old
    ADD CONSTRAINT xref_p48_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p48_not_deleted xref_p48_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p48_not_deleted
    ADD CONSTRAINT xref_p48_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p48_not_deleted_old xref_p48_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p48_not_deleted_old
    ADD CONSTRAINT xref_p48_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p49_deleted xref_p49_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p49_deleted
    ADD CONSTRAINT xref_p49_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p49_deleted_old xref_p49_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p49_deleted_old
    ADD CONSTRAINT xref_p49_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p49_deleted xref_p49_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p49_deleted
    ADD CONSTRAINT xref_p49_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p49_deleted_old xref_p49_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p49_deleted_old
    ADD CONSTRAINT xref_p49_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p49_deleted xref_p49_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p49_deleted
    ADD CONSTRAINT xref_p49_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p49_deleted_old xref_p49_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p49_deleted_old
    ADD CONSTRAINT xref_p49_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p49_deleted xref_p49_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p49_deleted
    ADD CONSTRAINT xref_p49_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p49_deleted_old xref_p49_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p49_deleted_old
    ADD CONSTRAINT xref_p49_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p49_not_deleted xref_p49_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p49_not_deleted
    ADD CONSTRAINT xref_p49_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p49_not_deleted_old xref_p49_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p49_not_deleted_old
    ADD CONSTRAINT xref_p49_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p49_not_deleted xref_p49_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p49_not_deleted
    ADD CONSTRAINT xref_p49_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p49_not_deleted_old xref_p49_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p49_not_deleted_old
    ADD CONSTRAINT xref_p49_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p49_not_deleted xref_p49_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p49_not_deleted
    ADD CONSTRAINT xref_p49_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p49_not_deleted_old xref_p49_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p49_not_deleted_old
    ADD CONSTRAINT xref_p49_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p49_not_deleted xref_p49_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p49_not_deleted
    ADD CONSTRAINT xref_p49_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p49_not_deleted_old xref_p49_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p49_not_deleted_old
    ADD CONSTRAINT xref_p49_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p4_deleted xref_p4_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p4_deleted
    ADD CONSTRAINT xref_p4_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p4_deleted_old xref_p4_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p4_deleted_old
    ADD CONSTRAINT xref_p4_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p4_deleted xref_p4_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p4_deleted
    ADD CONSTRAINT xref_p4_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p4_deleted_old xref_p4_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p4_deleted_old
    ADD CONSTRAINT xref_p4_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p4_deleted xref_p4_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p4_deleted
    ADD CONSTRAINT xref_p4_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p4_deleted_old xref_p4_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p4_deleted_old
    ADD CONSTRAINT xref_p4_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p4_deleted xref_p4_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p4_deleted
    ADD CONSTRAINT xref_p4_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p4_deleted_old xref_p4_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p4_deleted_old
    ADD CONSTRAINT xref_p4_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p4_not_deleted xref_p4_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p4_not_deleted
    ADD CONSTRAINT xref_p4_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p4_not_deleted_old xref_p4_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p4_not_deleted_old
    ADD CONSTRAINT xref_p4_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p4_not_deleted xref_p4_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p4_not_deleted
    ADD CONSTRAINT xref_p4_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p4_not_deleted_old xref_p4_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p4_not_deleted_old
    ADD CONSTRAINT xref_p4_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p4_not_deleted xref_p4_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p4_not_deleted
    ADD CONSTRAINT xref_p4_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p4_not_deleted_old xref_p4_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p4_not_deleted_old
    ADD CONSTRAINT xref_p4_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p4_not_deleted xref_p4_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p4_not_deleted
    ADD CONSTRAINT xref_p4_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p4_not_deleted_old xref_p4_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p4_not_deleted_old
    ADD CONSTRAINT xref_p4_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p50_deleted xref_p50_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p50_deleted
    ADD CONSTRAINT xref_p50_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p50_deleted_old xref_p50_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p50_deleted_old
    ADD CONSTRAINT xref_p50_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p50_deleted xref_p50_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p50_deleted
    ADD CONSTRAINT xref_p50_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p50_deleted_old xref_p50_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p50_deleted_old
    ADD CONSTRAINT xref_p50_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p50_deleted xref_p50_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p50_deleted
    ADD CONSTRAINT xref_p50_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p50_deleted_old xref_p50_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p50_deleted_old
    ADD CONSTRAINT xref_p50_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p50_deleted xref_p50_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p50_deleted
    ADD CONSTRAINT xref_p50_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p50_deleted_old xref_p50_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p50_deleted_old
    ADD CONSTRAINT xref_p50_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p50_not_deleted xref_p50_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p50_not_deleted
    ADD CONSTRAINT xref_p50_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p50_not_deleted_old xref_p50_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p50_not_deleted_old
    ADD CONSTRAINT xref_p50_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p50_not_deleted xref_p50_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p50_not_deleted
    ADD CONSTRAINT xref_p50_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p50_not_deleted_old xref_p50_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p50_not_deleted_old
    ADD CONSTRAINT xref_p50_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p50_not_deleted xref_p50_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p50_not_deleted
    ADD CONSTRAINT xref_p50_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p50_not_deleted_old xref_p50_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p50_not_deleted_old
    ADD CONSTRAINT xref_p50_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p50_not_deleted xref_p50_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p50_not_deleted
    ADD CONSTRAINT xref_p50_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p50_not_deleted_old xref_p50_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p50_not_deleted_old
    ADD CONSTRAINT xref_p50_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p51_deleted xref_p51_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p51_deleted
    ADD CONSTRAINT xref_p51_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p51_deleted_old xref_p51_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p51_deleted_old
    ADD CONSTRAINT xref_p51_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p51_deleted xref_p51_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p51_deleted
    ADD CONSTRAINT xref_p51_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p51_deleted_old xref_p51_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p51_deleted_old
    ADD CONSTRAINT xref_p51_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p51_deleted xref_p51_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p51_deleted
    ADD CONSTRAINT xref_p51_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p51_deleted_old xref_p51_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p51_deleted_old
    ADD CONSTRAINT xref_p51_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p51_deleted xref_p51_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p51_deleted
    ADD CONSTRAINT xref_p51_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p51_deleted_old xref_p51_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p51_deleted_old
    ADD CONSTRAINT xref_p51_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p51_not_deleted xref_p51_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p51_not_deleted
    ADD CONSTRAINT xref_p51_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p51_not_deleted_old xref_p51_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p51_not_deleted_old
    ADD CONSTRAINT xref_p51_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p51_not_deleted xref_p51_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p51_not_deleted
    ADD CONSTRAINT xref_p51_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p51_not_deleted_old xref_p51_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p51_not_deleted_old
    ADD CONSTRAINT xref_p51_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p51_not_deleted xref_p51_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p51_not_deleted
    ADD CONSTRAINT xref_p51_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p51_not_deleted_old xref_p51_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p51_not_deleted_old
    ADD CONSTRAINT xref_p51_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p51_not_deleted xref_p51_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p51_not_deleted
    ADD CONSTRAINT xref_p51_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p51_not_deleted_old xref_p51_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p51_not_deleted_old
    ADD CONSTRAINT xref_p51_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p52_deleted xref_p52_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p52_deleted
    ADD CONSTRAINT xref_p52_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p52_deleted_old xref_p52_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p52_deleted_old
    ADD CONSTRAINT xref_p52_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p52_deleted xref_p52_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p52_deleted
    ADD CONSTRAINT xref_p52_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p52_deleted_old xref_p52_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p52_deleted_old
    ADD CONSTRAINT xref_p52_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p52_deleted xref_p52_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p52_deleted
    ADD CONSTRAINT xref_p52_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p52_deleted_old xref_p52_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p52_deleted_old
    ADD CONSTRAINT xref_p52_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p52_deleted xref_p52_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p52_deleted
    ADD CONSTRAINT xref_p52_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p52_deleted_old xref_p52_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p52_deleted_old
    ADD CONSTRAINT xref_p52_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p52_not_deleted xref_p52_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p52_not_deleted
    ADD CONSTRAINT xref_p52_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p52_not_deleted_old xref_p52_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p52_not_deleted_old
    ADD CONSTRAINT xref_p52_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p52_not_deleted xref_p52_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p52_not_deleted
    ADD CONSTRAINT xref_p52_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p52_not_deleted_old xref_p52_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p52_not_deleted_old
    ADD CONSTRAINT xref_p52_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p52_not_deleted xref_p52_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p52_not_deleted
    ADD CONSTRAINT xref_p52_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p52_not_deleted_old xref_p52_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p52_not_deleted_old
    ADD CONSTRAINT xref_p52_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p52_not_deleted xref_p52_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p52_not_deleted
    ADD CONSTRAINT xref_p52_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p52_not_deleted_old xref_p52_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p52_not_deleted_old
    ADD CONSTRAINT xref_p52_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p53_deleted xref_p53_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p53_deleted
    ADD CONSTRAINT xref_p53_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p53_deleted_old xref_p53_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p53_deleted_old
    ADD CONSTRAINT xref_p53_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p53_deleted xref_p53_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p53_deleted
    ADD CONSTRAINT xref_p53_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p53_deleted_old xref_p53_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p53_deleted_old
    ADD CONSTRAINT xref_p53_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p53_deleted xref_p53_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p53_deleted
    ADD CONSTRAINT xref_p53_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p53_deleted_old xref_p53_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p53_deleted_old
    ADD CONSTRAINT xref_p53_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p53_deleted xref_p53_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p53_deleted
    ADD CONSTRAINT xref_p53_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p53_deleted_old xref_p53_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p53_deleted_old
    ADD CONSTRAINT xref_p53_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p53_not_deleted xref_p53_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p53_not_deleted
    ADD CONSTRAINT xref_p53_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p53_not_deleted_old xref_p53_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p53_not_deleted_old
    ADD CONSTRAINT xref_p53_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p53_not_deleted xref_p53_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p53_not_deleted
    ADD CONSTRAINT xref_p53_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p53_not_deleted_old xref_p53_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p53_not_deleted_old
    ADD CONSTRAINT xref_p53_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p53_not_deleted xref_p53_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p53_not_deleted
    ADD CONSTRAINT xref_p53_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p53_not_deleted_old xref_p53_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p53_not_deleted_old
    ADD CONSTRAINT xref_p53_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p53_not_deleted xref_p53_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p53_not_deleted
    ADD CONSTRAINT xref_p53_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p53_not_deleted_old xref_p53_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p53_not_deleted_old
    ADD CONSTRAINT xref_p53_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p54_deleted xref_p54_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p54_deleted
    ADD CONSTRAINT xref_p54_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p54_deleted xref_p54_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p54_deleted
    ADD CONSTRAINT xref_p54_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p54_deleted xref_p54_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p54_deleted
    ADD CONSTRAINT xref_p54_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p54_deleted xref_p54_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p54_deleted
    ADD CONSTRAINT xref_p54_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p54_not_deleted xref_p54_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p54_not_deleted
    ADD CONSTRAINT xref_p54_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p54_not_deleted xref_p54_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p54_not_deleted
    ADD CONSTRAINT xref_p54_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p54_not_deleted xref_p54_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p54_not_deleted
    ADD CONSTRAINT xref_p54_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p54_not_deleted xref_p54_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p54_not_deleted
    ADD CONSTRAINT xref_p54_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p55_deleted xref_p55_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p55_deleted
    ADD CONSTRAINT xref_p55_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p55_deleted_old xref_p55_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p55_deleted_old
    ADD CONSTRAINT xref_p55_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p55_deleted xref_p55_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p55_deleted
    ADD CONSTRAINT xref_p55_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p55_deleted_old xref_p55_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p55_deleted_old
    ADD CONSTRAINT xref_p55_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p55_deleted xref_p55_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p55_deleted
    ADD CONSTRAINT xref_p55_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p55_deleted_old xref_p55_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p55_deleted_old
    ADD CONSTRAINT xref_p55_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p55_deleted xref_p55_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p55_deleted
    ADD CONSTRAINT xref_p55_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p55_deleted_old xref_p55_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p55_deleted_old
    ADD CONSTRAINT xref_p55_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p55_not_deleted xref_p55_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p55_not_deleted
    ADD CONSTRAINT xref_p55_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p55_not_deleted_old xref_p55_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p55_not_deleted_old
    ADD CONSTRAINT xref_p55_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p55_not_deleted xref_p55_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p55_not_deleted
    ADD CONSTRAINT xref_p55_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p55_not_deleted_old xref_p55_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p55_not_deleted_old
    ADD CONSTRAINT xref_p55_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p55_not_deleted xref_p55_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p55_not_deleted
    ADD CONSTRAINT xref_p55_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p55_not_deleted_old xref_p55_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p55_not_deleted_old
    ADD CONSTRAINT xref_p55_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p55_not_deleted xref_p55_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p55_not_deleted
    ADD CONSTRAINT xref_p55_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p55_not_deleted_old xref_p55_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p55_not_deleted_old
    ADD CONSTRAINT xref_p55_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p5_deleted xref_p5_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p5_deleted
    ADD CONSTRAINT xref_p5_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id) DEFERRABLE;


--
-- Name: xref_p5_deleted xref_p5_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p5_deleted
    ADD CONSTRAINT xref_p5_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id) DEFERRABLE;


--
-- Name: xref_p5_deleted xref_p5_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p5_deleted
    ADD CONSTRAINT xref_p5_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id) DEFERRABLE;


--
-- Name: xref_p5_deleted xref_p5_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p5_deleted
    ADD CONSTRAINT xref_p5_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi) DEFERRABLE;


--
-- Name: xref_p5_not_deleted xref_p5_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p5_not_deleted
    ADD CONSTRAINT xref_p5_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id) DEFERRABLE;


--
-- Name: xref_p5_not_deleted xref_p5_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p5_not_deleted
    ADD CONSTRAINT xref_p5_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id) DEFERRABLE;


--
-- Name: xref_p5_not_deleted xref_p5_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p5_not_deleted
    ADD CONSTRAINT xref_p5_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id) DEFERRABLE;


--
-- Name: xref_p5_not_deleted xref_p5_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p5_not_deleted
    ADD CONSTRAINT xref_p5_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi) DEFERRABLE;


--
-- Name: xref_p6_deleted xref_p6_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p6_deleted
    ADD CONSTRAINT xref_p6_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p6_deleted_old xref_p6_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p6_deleted_old
    ADD CONSTRAINT xref_p6_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p6_deleted xref_p6_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p6_deleted
    ADD CONSTRAINT xref_p6_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p6_deleted_old xref_p6_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p6_deleted_old
    ADD CONSTRAINT xref_p6_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p6_deleted xref_p6_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p6_deleted
    ADD CONSTRAINT xref_p6_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p6_deleted_old xref_p6_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p6_deleted_old
    ADD CONSTRAINT xref_p6_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p6_deleted xref_p6_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p6_deleted
    ADD CONSTRAINT xref_p6_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p6_deleted_old xref_p6_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p6_deleted_old
    ADD CONSTRAINT xref_p6_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p6_not_deleted xref_p6_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p6_not_deleted
    ADD CONSTRAINT xref_p6_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p6_not_deleted_old xref_p6_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p6_not_deleted_old
    ADD CONSTRAINT xref_p6_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p6_not_deleted xref_p6_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p6_not_deleted
    ADD CONSTRAINT xref_p6_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p6_not_deleted_old xref_p6_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p6_not_deleted_old
    ADD CONSTRAINT xref_p6_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p6_not_deleted xref_p6_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p6_not_deleted
    ADD CONSTRAINT xref_p6_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p6_not_deleted_old xref_p6_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p6_not_deleted_old
    ADD CONSTRAINT xref_p6_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p6_not_deleted xref_p6_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p6_not_deleted
    ADD CONSTRAINT xref_p6_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p6_not_deleted_old xref_p6_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p6_not_deleted_old
    ADD CONSTRAINT xref_p6_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p7_deleted xref_p7_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p7_deleted
    ADD CONSTRAINT xref_p7_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p7_deleted_old xref_p7_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p7_deleted_old
    ADD CONSTRAINT xref_p7_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p7_deleted xref_p7_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p7_deleted
    ADD CONSTRAINT xref_p7_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p7_deleted_old xref_p7_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p7_deleted_old
    ADD CONSTRAINT xref_p7_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p7_deleted xref_p7_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p7_deleted
    ADD CONSTRAINT xref_p7_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p7_deleted_old xref_p7_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p7_deleted_old
    ADD CONSTRAINT xref_p7_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p7_deleted xref_p7_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p7_deleted
    ADD CONSTRAINT xref_p7_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p7_deleted_old xref_p7_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p7_deleted_old
    ADD CONSTRAINT xref_p7_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p7_not_deleted xref_p7_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p7_not_deleted
    ADD CONSTRAINT xref_p7_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p7_not_deleted_old xref_p7_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p7_not_deleted_old
    ADD CONSTRAINT xref_p7_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p7_not_deleted xref_p7_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p7_not_deleted
    ADD CONSTRAINT xref_p7_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p7_not_deleted_old xref_p7_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p7_not_deleted_old
    ADD CONSTRAINT xref_p7_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p7_not_deleted xref_p7_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p7_not_deleted
    ADD CONSTRAINT xref_p7_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p7_not_deleted_old xref_p7_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p7_not_deleted_old
    ADD CONSTRAINT xref_p7_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p7_not_deleted xref_p7_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p7_not_deleted
    ADD CONSTRAINT xref_p7_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p7_not_deleted_old xref_p7_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p7_not_deleted_old
    ADD CONSTRAINT xref_p7_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p8_deleted xref_p8_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p8_deleted
    ADD CONSTRAINT xref_p8_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p8_deleted_old xref_p8_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p8_deleted_old
    ADD CONSTRAINT xref_p8_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p8_deleted xref_p8_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p8_deleted
    ADD CONSTRAINT xref_p8_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p8_deleted_old xref_p8_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p8_deleted_old
    ADD CONSTRAINT xref_p8_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p8_deleted xref_p8_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p8_deleted
    ADD CONSTRAINT xref_p8_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p8_deleted_old xref_p8_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p8_deleted_old
    ADD CONSTRAINT xref_p8_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p8_deleted xref_p8_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p8_deleted
    ADD CONSTRAINT xref_p8_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p8_deleted_old xref_p8_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p8_deleted_old
    ADD CONSTRAINT xref_p8_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p8_not_deleted xref_p8_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p8_not_deleted
    ADD CONSTRAINT xref_p8_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p8_not_deleted_old xref_p8_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p8_not_deleted_old
    ADD CONSTRAINT xref_p8_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p8_not_deleted xref_p8_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p8_not_deleted
    ADD CONSTRAINT xref_p8_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p8_not_deleted_old xref_p8_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p8_not_deleted_old
    ADD CONSTRAINT xref_p8_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p8_not_deleted xref_p8_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p8_not_deleted
    ADD CONSTRAINT xref_p8_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p8_not_deleted_old xref_p8_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p8_not_deleted_old
    ADD CONSTRAINT xref_p8_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p8_not_deleted xref_p8_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p8_not_deleted
    ADD CONSTRAINT xref_p8_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p8_not_deleted_old xref_p8_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p8_not_deleted_old
    ADD CONSTRAINT xref_p8_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p9_deleted xref_p9_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p9_deleted
    ADD CONSTRAINT xref_p9_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p9_deleted_old xref_p9_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p9_deleted_old
    ADD CONSTRAINT xref_p9_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p9_deleted xref_p9_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p9_deleted
    ADD CONSTRAINT xref_p9_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p9_deleted_old xref_p9_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p9_deleted_old
    ADD CONSTRAINT xref_p9_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p9_deleted xref_p9_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p9_deleted
    ADD CONSTRAINT xref_p9_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p9_deleted_old xref_p9_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p9_deleted_old
    ADD CONSTRAINT xref_p9_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p9_deleted xref_p9_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p9_deleted
    ADD CONSTRAINT xref_p9_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p9_deleted_old xref_p9_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p9_deleted_old
    ADD CONSTRAINT xref_p9_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p9_not_deleted xref_p9_not_deleted_fk1; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p9_not_deleted
    ADD CONSTRAINT xref_p9_not_deleted_fk1 FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p9_not_deleted_old xref_p9_not_deleted_fk1_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p9_not_deleted_old
    ADD CONSTRAINT xref_p9_not_deleted_fk1_old FOREIGN KEY (created) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p9_not_deleted xref_p9_not_deleted_fk2; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p9_not_deleted
    ADD CONSTRAINT xref_p9_not_deleted_fk2 FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p9_not_deleted_old xref_p9_not_deleted_fk2_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p9_not_deleted_old
    ADD CONSTRAINT xref_p9_not_deleted_fk2_old FOREIGN KEY (dbid) REFERENCES rnacen.rnc_database(id);


--
-- Name: xref_p9_not_deleted xref_p9_not_deleted_fk3; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p9_not_deleted
    ADD CONSTRAINT xref_p9_not_deleted_fk3 FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p9_not_deleted_old xref_p9_not_deleted_fk3_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p9_not_deleted_old
    ADD CONSTRAINT xref_p9_not_deleted_fk3_old FOREIGN KEY (last) REFERENCES rnacen.rnc_release(id);


--
-- Name: xref_p9_not_deleted xref_p9_not_deleted_fk4; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p9_not_deleted
    ADD CONSTRAINT xref_p9_not_deleted_fk4 FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: xref_p9_not_deleted_old xref_p9_not_deleted_fk4_old; Type: FK CONSTRAINT; Schema: rnacen; Owner: rnacen
--

ALTER TABLE ONLY rnacen.xref_p9_not_deleted_old
    ADD CONSTRAINT xref_p9_not_deleted_fk4_old FOREIGN KEY (upi) REFERENCES rnacen.rna(upi);


--
-- Name: SCHEMA rnacen; Type: ACL; Schema: -; Owner: rnacen
--

GRANT USAGE ON SCHEMA rnacen TO reader;


--
-- Name: TABLE auth_group; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.auth_group TO reader;


--
-- Name: TABLE auth_group_permissions; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.auth_group_permissions TO reader;


--
-- Name: TABLE auth_permission; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.auth_permission TO reader;


--
-- Name: TABLE auth_user; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.auth_user TO reader;


--
-- Name: TABLE auth_user_groups; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.auth_user_groups TO reader;


--
-- Name: TABLE auth_user_user_permissions; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.auth_user_user_permissions TO reader;


--
-- Name: TABLE bad_precompute; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.bad_precompute TO reader;


--
-- Name: TABLE blog; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.blog TO reader;


--
-- Name: TABLE corsheaders_corsmodel; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.corsheaders_corsmodel TO reader;


--
-- Name: TABLE cpat_results; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.cpat_results TO reader;


--
-- Name: TABLE django_admin_log; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.django_admin_log TO reader;


--
-- Name: TABLE django_content_type; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.django_content_type TO reader;


--
-- Name: TABLE django_migrations; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.django_migrations TO reader;


--
-- Name: TABLE django_session; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.django_session TO reader;


--
-- Name: TABLE django_site; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.django_site TO reader;


--
-- Name: TABLE ensembl_assembly; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.ensembl_assembly TO reader;


--
-- Name: TABLE ensembl_compara; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.ensembl_compara TO reader;


--
-- Name: TABLE ensembl_coordinate_systems; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.ensembl_coordinate_systems TO reader;


--
-- Name: TABLE ensembl_import_tracking; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.ensembl_import_tracking TO reader;


--
-- Name: TABLE ensembl_karyotype; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.ensembl_karyotype TO reader;


--
-- Name: TABLE ensembl_pseudogene_exons; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.ensembl_pseudogene_exons TO reader;


--
-- Name: TABLE ensembl_pseudogene_regions; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.ensembl_pseudogene_regions TO reader;


--
-- Name: TABLE go_term_annotations; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.go_term_annotations TO reader;


--
-- Name: TABLE go_term_publication_map; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.go_term_publication_map TO reader;


--
-- Name: TABLE insdc_so_term_mapping; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.insdc_so_term_mapping TO reader;


--
-- Name: TABLE litscan_sentence_id_counts; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.litscan_sentence_id_counts TO reader;


--
-- Name: TABLE litscan_statistics; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.litscan_statistics TO reader;


--
-- Name: TABLE litsumm_summaries; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.litsumm_summaries TO reader;


--
-- Name: TABLE load_compara; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.load_compara TO reader;


--
-- Name: TABLE load_ensembl_pseudogenes; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.load_ensembl_pseudogenes TO reader;


--
-- Name: TABLE load_genome_mapping_attempted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.load_genome_mapping_attempted TO reader;


--
-- Name: TABLE load_karyotypes; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.load_karyotypes TO reader;


--
-- Name: TABLE load_model_assignments; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.load_model_assignments TO reader;


--
-- Name: TABLE load_qa_rfam_attempted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.load_qa_rfam_attempted TO reader;


--
-- Name: TABLE load_ref_pubmed; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.load_ref_pubmed TO reader;


--
-- Name: TABLE load_rfam_go_terms; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.load_rfam_go_terms TO reader;


--
-- Name: TABLE load_rnc_coordinates; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.load_rnc_coordinates TO reader;


--
-- Name: TABLE load_rnc_secondary_structure; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.load_rnc_secondary_structure TO reader;


--
-- Name: TABLE load_rnc_text_mining; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.load_rnc_text_mining TO reader;


--
-- Name: TABLE load_secondary_layout; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.load_secondary_layout TO reader;


--
-- Name: TABLE r2dt_results; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.r2dt_results TO reader;


--
-- Name: TABLE load_secondary_layout_models; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.load_secondary_layout_models TO reader;


--
-- Name: TABLE load_traveler_attempted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.load_traveler_attempted TO reader;


--
-- Name: TABLE old_summaries; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.old_summaries TO reader;


--
-- Name: TABLE ontology_terms; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.ontology_terms TO reader;


--
-- Name: TABLE pipeline_tracking_genome_mapping; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.pipeline_tracking_genome_mapping TO reader;


--
-- Name: TABLE pipeline_tracking_qa_scan; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.pipeline_tracking_qa_scan TO reader;


--
-- Name: TABLE pipeline_tracking_traveler; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.pipeline_tracking_traveler TO reader;


--
-- Name: TABLE protein_info; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.protein_info TO reader;


--
-- Name: TABLE publications; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.publications TO reader;


--
-- Name: TABLE qa_status; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.qa_status TO reader;


--
-- Name: TABLE r2dt_models; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.r2dt_models TO reader;


--
-- Name: TABLE release_stats; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.release_stats TO reader;


--
-- Name: TABLE rfam_analyzed_sequences; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rfam_analyzed_sequences TO reader;


--
-- Name: TABLE rfam_clans; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rfam_clans TO reader;


--
-- Name: TABLE rfam_go_terms; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rfam_go_terms TO reader;


--
-- Name: TABLE rfam_model_hits; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rfam_model_hits TO reader;


--
-- Name: TABLE rfam_models; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rfam_models TO reader;


--
-- Name: TABLE rna; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rna TO reader;


--
-- Name: TABLE rnc_accession_sequence_feature; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rnc_accession_sequence_feature TO reader;


--
-- Name: TABLE rnc_accession_sequence_region; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rnc_accession_sequence_region TO reader;


--
-- Name: TABLE rnc_accessions; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rnc_accessions TO reader;


--
-- Name: TABLE rnc_chemical_components; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rnc_chemical_components TO reader;


--
-- Name: TABLE rnc_database; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rnc_database TO reader;


--
-- Name: TABLE rnc_database_json_stats; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rnc_database_json_stats TO reader;


--
-- Name: TABLE rnc_database_references; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rnc_database_references TO reader;


--
-- Name: TABLE rnc_feedback_overlap; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rnc_feedback_overlap TO reader;


--
-- Name: TABLE rnc_feedback_target_assemblies; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rnc_feedback_target_assemblies TO reader;


--
-- Name: TABLE rnc_gene_status; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rnc_gene_status TO reader;


--
-- Name: TABLE rnc_import_tracker; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rnc_import_tracker TO reader;


--
-- Name: TABLE rnc_interactions; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rnc_interactions TO reader;


--
-- Name: TABLE rnc_locus; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rnc_locus TO reader;


--
-- Name: TABLE rnc_locus_members; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rnc_locus_members TO reader;


--
-- Name: TABLE rnc_modifications; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rnc_modifications TO reader;


--
-- Name: TABLE rnc_reference_map; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rnc_reference_map TO reader;


--
-- Name: TABLE rnc_references; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rnc_references TO reader;


--
-- Name: TABLE rnc_related_sequences; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rnc_related_sequences TO reader;


--
-- Name: TABLE rnc_relationship_types; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rnc_relationship_types TO reader;


--
-- Name: TABLE rnc_release; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rnc_release TO reader;


--
-- Name: TABLE rnc_rna_precomputed; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rnc_rna_precomputed TO reader;


--
-- Name: TABLE rnc_secondary_structure; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rnc_secondary_structure TO reader;


--
-- Name: TABLE rnc_sequence_exons; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rnc_sequence_exons TO reader;


--
-- Name: TABLE rnc_sequence_feature_providers; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rnc_sequence_feature_providers TO reader;


--
-- Name: TABLE rnc_sequence_feature_types; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rnc_sequence_feature_types TO reader;


--
-- Name: TABLE rnc_sequence_features; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rnc_sequence_features TO reader;


--
-- Name: TABLE rnc_sequence_regions; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rnc_sequence_regions TO reader;


--
-- Name: TABLE xref; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref TO reader;


--
-- Name: TABLE rnc_sequence_regions_active_provided; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rnc_sequence_regions_active_provided TO reader;


--
-- Name: TABLE rnc_sequence_regions_active_mapped; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rnc_sequence_regions_active_mapped TO reader;


--
-- Name: TABLE rnc_sequence_regions_active; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rnc_sequence_regions_active TO reader;


--
-- Name: TABLE rnc_taxonomy; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.rnc_taxonomy TO reader;


--
-- Name: TABLE temp_bad_is_active; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.temp_bad_is_active TO reader;


--
-- Name: TABLE unindexed_foreign_keys; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.unindexed_foreign_keys TO reader;


--
-- Name: TABLE validate_layout_counts; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.validate_layout_counts TO reader;


--
-- Name: TABLE validate_layout_hits; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.validate_layout_hits TO reader;


--
-- Name: TABLE xref_count; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_count TO reader;


--
-- Name: TABLE xref_not_unique; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_not_unique TO reader;


--
-- Name: TABLE xref_p10_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p10_deleted TO reader;


--
-- Name: TABLE xref_p10_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p10_not_deleted TO reader;


--
-- Name: TABLE xref_p11_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p11_deleted TO reader;


--
-- Name: TABLE xref_p11_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p11_deleted_old TO reader;


--
-- Name: TABLE xref_p11_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p11_not_deleted TO reader;


--
-- Name: TABLE xref_p11_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p11_not_deleted_old TO reader;


--
-- Name: TABLE xref_p12_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p12_deleted TO reader;


--
-- Name: TABLE xref_p12_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p12_deleted_old TO reader;


--
-- Name: TABLE xref_p12_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p12_not_deleted TO reader;


--
-- Name: TABLE xref_p12_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p12_not_deleted_old TO reader;


--
-- Name: TABLE xref_p13_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p13_deleted TO reader;


--
-- Name: TABLE xref_p13_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p13_not_deleted TO reader;


--
-- Name: TABLE xref_p14_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p14_deleted TO reader;


--
-- Name: TABLE xref_p14_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p14_deleted_old TO reader;


--
-- Name: TABLE xref_p14_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p14_not_deleted TO reader;


--
-- Name: TABLE xref_p14_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p14_not_deleted_old TO reader;


--
-- Name: TABLE xref_p15_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p15_deleted TO reader;


--
-- Name: TABLE xref_p15_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p15_deleted_old TO reader;


--
-- Name: TABLE xref_p15_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p15_not_deleted TO reader;


--
-- Name: TABLE xref_p15_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p15_not_deleted_old TO reader;


--
-- Name: TABLE xref_p16_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p16_deleted TO reader;


--
-- Name: TABLE xref_p16_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p16_deleted_old TO reader;


--
-- Name: TABLE xref_p16_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p16_not_deleted TO reader;


--
-- Name: TABLE xref_p16_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p16_not_deleted_old TO reader;


--
-- Name: TABLE xref_p17_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p17_deleted TO reader;


--
-- Name: TABLE xref_p17_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p17_deleted_old TO reader;


--
-- Name: TABLE xref_p17_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p17_not_deleted TO reader;


--
-- Name: TABLE xref_p17_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p17_not_deleted_old TO reader;


--
-- Name: TABLE xref_p18_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p18_deleted TO reader;


--
-- Name: TABLE xref_p18_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p18_deleted_old TO reader;


--
-- Name: TABLE xref_p18_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p18_not_deleted TO reader;


--
-- Name: TABLE xref_p18_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p18_not_deleted_old TO reader;


--
-- Name: TABLE xref_p19_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p19_deleted TO reader;


--
-- Name: TABLE xref_p19_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p19_not_deleted TO reader;


--
-- Name: TABLE xref_p1_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p1_deleted TO reader;


--
-- Name: TABLE xref_p1_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p1_deleted_old TO reader;


--
-- Name: TABLE xref_p1_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p1_not_deleted TO reader;


--
-- Name: TABLE xref_p1_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p1_not_deleted_old TO reader;


--
-- Name: TABLE xref_p20_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p20_deleted TO reader;


--
-- Name: TABLE xref_p20_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p20_deleted_old TO reader;


--
-- Name: TABLE xref_p20_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p20_not_deleted TO reader;


--
-- Name: TABLE xref_p20_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p20_not_deleted_old TO reader;


--
-- Name: TABLE xref_p21_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p21_deleted TO reader;


--
-- Name: TABLE xref_p21_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p21_not_deleted TO reader;


--
-- Name: TABLE xref_p22_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p22_deleted TO reader;


--
-- Name: TABLE xref_p22_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p22_not_deleted TO reader;


--
-- Name: TABLE xref_p23_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p23_deleted TO reader;


--
-- Name: TABLE xref_p23_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p23_deleted_old TO reader;


--
-- Name: TABLE xref_p23_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p23_not_deleted TO reader;


--
-- Name: TABLE xref_p23_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p23_not_deleted_old TO reader;


--
-- Name: TABLE xref_p24_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p24_deleted TO reader;


--
-- Name: TABLE xref_p24_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p24_deleted_old TO reader;


--
-- Name: TABLE xref_p24_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p24_not_deleted TO reader;


--
-- Name: TABLE xref_p24_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p24_not_deleted_old TO reader;


--
-- Name: TABLE xref_p25_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p25_deleted TO reader;


--
-- Name: TABLE xref_p25_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p25_deleted_old TO reader;


--
-- Name: TABLE xref_p25_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p25_not_deleted TO reader;


--
-- Name: TABLE xref_p25_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p25_not_deleted_old TO reader;


--
-- Name: TABLE xref_p26_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p26_deleted TO reader;


--
-- Name: TABLE xref_p26_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p26_deleted_old TO reader;


--
-- Name: TABLE xref_p26_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p26_not_deleted TO reader;


--
-- Name: TABLE xref_p26_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p26_not_deleted_old TO reader;


--
-- Name: TABLE xref_p27_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p27_deleted TO reader;


--
-- Name: TABLE xref_p27_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p27_not_deleted TO reader;


--
-- Name: TABLE xref_p28_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p28_deleted TO reader;


--
-- Name: TABLE xref_p28_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p28_not_deleted TO reader;


--
-- Name: TABLE xref_p29_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p29_deleted TO reader;


--
-- Name: TABLE xref_p29_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p29_not_deleted TO reader;


--
-- Name: TABLE xref_p2_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p2_deleted TO reader;


--
-- Name: TABLE xref_p2_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p2_deleted_old TO reader;


--
-- Name: TABLE xref_p2_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p2_not_deleted TO reader;


--
-- Name: TABLE xref_p2_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p2_not_deleted_old TO reader;


--
-- Name: TABLE xref_p30_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p30_deleted TO reader;


--
-- Name: TABLE xref_p30_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p30_deleted_old TO reader;


--
-- Name: TABLE xref_p30_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p30_not_deleted TO reader;


--
-- Name: TABLE xref_p30_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p30_not_deleted_old TO reader;


--
-- Name: TABLE xref_p31_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p31_deleted TO reader;


--
-- Name: TABLE xref_p31_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p31_deleted_old TO reader;


--
-- Name: TABLE xref_p31_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p31_not_deleted TO reader;


--
-- Name: TABLE xref_p31_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p31_not_deleted_old TO reader;


--
-- Name: TABLE xref_p32_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p32_deleted TO reader;


--
-- Name: TABLE xref_p32_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p32_not_deleted TO reader;


--
-- Name: TABLE xref_p33_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p33_deleted TO reader;


--
-- Name: TABLE xref_p33_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p33_deleted_old TO reader;


--
-- Name: TABLE xref_p33_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p33_not_deleted TO reader;


--
-- Name: TABLE xref_p33_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p33_not_deleted_old TO reader;


--
-- Name: TABLE xref_p34_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p34_deleted TO reader;


--
-- Name: TABLE xref_p34_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p34_deleted_old TO reader;


--
-- Name: TABLE xref_p34_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p34_not_deleted TO reader;


--
-- Name: TABLE xref_p34_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p34_not_deleted_old TO reader;


--
-- Name: TABLE xref_p35_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p35_deleted TO reader;


--
-- Name: TABLE xref_p35_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p35_deleted_old TO reader;


--
-- Name: TABLE xref_p35_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p35_not_deleted TO reader;


--
-- Name: TABLE xref_p35_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p35_not_deleted_old TO reader;


--
-- Name: TABLE xref_p36_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p36_deleted TO reader;


--
-- Name: TABLE xref_p36_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p36_deleted_old TO reader;


--
-- Name: TABLE xref_p36_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p36_not_deleted TO reader;


--
-- Name: TABLE xref_p36_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p36_not_deleted_old TO reader;


--
-- Name: TABLE xref_p37_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p37_deleted TO reader;


--
-- Name: TABLE xref_p37_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p37_deleted_old TO reader;


--
-- Name: TABLE xref_p37_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p37_not_deleted TO reader;


--
-- Name: TABLE xref_p37_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p37_not_deleted_old TO reader;


--
-- Name: TABLE xref_p38_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p38_deleted TO reader;


--
-- Name: TABLE xref_p38_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p38_deleted_old TO reader;


--
-- Name: TABLE xref_p38_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p38_not_deleted TO reader;


--
-- Name: TABLE xref_p38_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p38_not_deleted_old TO reader;


--
-- Name: TABLE xref_p39_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p39_deleted TO reader;


--
-- Name: TABLE xref_p39_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p39_deleted_old TO reader;


--
-- Name: TABLE xref_p39_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p39_not_deleted TO reader;


--
-- Name: TABLE xref_p39_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p39_not_deleted_old TO reader;


--
-- Name: TABLE xref_p3_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p3_deleted TO reader;


--
-- Name: TABLE xref_p3_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p3_deleted_old TO reader;


--
-- Name: TABLE xref_p3_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p3_not_deleted TO reader;


--
-- Name: TABLE xref_p3_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p3_not_deleted_old TO reader;


--
-- Name: TABLE xref_p40_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p40_deleted TO reader;


--
-- Name: TABLE xref_p40_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p40_deleted_old TO reader;


--
-- Name: TABLE xref_p40_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p40_not_deleted TO reader;


--
-- Name: TABLE xref_p40_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p40_not_deleted_old TO reader;


--
-- Name: TABLE xref_p41_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p41_deleted TO reader;


--
-- Name: TABLE xref_p41_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p41_deleted_old TO reader;


--
-- Name: TABLE xref_p41_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p41_not_deleted TO reader;


--
-- Name: TABLE xref_p41_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p41_not_deleted_old TO reader;


--
-- Name: TABLE xref_p42_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p42_deleted TO reader;


--
-- Name: TABLE xref_p42_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p42_deleted_old TO reader;


--
-- Name: TABLE xref_p42_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p42_not_deleted TO reader;


--
-- Name: TABLE xref_p42_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p42_not_deleted_old TO reader;


--
-- Name: TABLE xref_p43_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p43_deleted TO reader;


--
-- Name: TABLE xref_p43_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p43_deleted_old TO reader;


--
-- Name: TABLE xref_p43_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p43_not_deleted TO reader;


--
-- Name: TABLE xref_p43_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p43_not_deleted_old TO reader;


--
-- Name: TABLE xref_p44_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p44_deleted TO reader;


--
-- Name: TABLE xref_p44_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p44_deleted_old TO reader;


--
-- Name: TABLE xref_p44_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p44_not_deleted TO reader;


--
-- Name: TABLE xref_p44_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p44_not_deleted_old TO reader;


--
-- Name: TABLE xref_p45_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p45_deleted TO reader;


--
-- Name: TABLE xref_p45_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p45_deleted_old TO reader;


--
-- Name: TABLE xref_p45_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p45_not_deleted TO reader;


--
-- Name: TABLE xref_p45_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p45_not_deleted_old TO reader;


--
-- Name: TABLE xref_p46_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p46_deleted TO reader;


--
-- Name: TABLE xref_p46_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p46_deleted_old TO reader;


--
-- Name: TABLE xref_p46_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p46_not_deleted TO reader;


--
-- Name: TABLE xref_p46_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p46_not_deleted_old TO reader;


--
-- Name: TABLE xref_p47_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p47_deleted TO reader;


--
-- Name: TABLE xref_p47_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p47_deleted_old TO reader;


--
-- Name: TABLE xref_p47_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p47_not_deleted TO reader;


--
-- Name: TABLE xref_p47_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p47_not_deleted_old TO reader;


--
-- Name: TABLE xref_p48_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p48_deleted TO reader;


--
-- Name: TABLE xref_p48_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p48_deleted_old TO reader;


--
-- Name: TABLE xref_p48_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p48_not_deleted TO reader;


--
-- Name: TABLE xref_p48_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p48_not_deleted_old TO reader;


--
-- Name: TABLE xref_p49_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p49_deleted TO reader;


--
-- Name: TABLE xref_p49_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p49_deleted_old TO reader;


--
-- Name: TABLE xref_p49_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p49_not_deleted TO reader;


--
-- Name: TABLE xref_p49_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p49_not_deleted_old TO reader;


--
-- Name: TABLE xref_p4_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p4_deleted TO reader;


--
-- Name: TABLE xref_p4_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p4_deleted_old TO reader;


--
-- Name: TABLE xref_p4_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p4_not_deleted TO reader;


--
-- Name: TABLE xref_p4_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p4_not_deleted_old TO reader;


--
-- Name: TABLE xref_p50_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p50_deleted TO reader;


--
-- Name: TABLE xref_p50_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p50_deleted_old TO reader;


--
-- Name: TABLE xref_p50_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p50_not_deleted TO reader;


--
-- Name: TABLE xref_p50_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p50_not_deleted_old TO reader;


--
-- Name: TABLE xref_p51_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p51_deleted TO reader;


--
-- Name: TABLE xref_p51_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p51_deleted_old TO reader;


--
-- Name: TABLE xref_p51_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p51_not_deleted TO reader;


--
-- Name: TABLE xref_p51_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p51_not_deleted_old TO reader;


--
-- Name: TABLE xref_p52_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p52_deleted TO reader;


--
-- Name: TABLE xref_p52_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p52_deleted_old TO reader;


--
-- Name: TABLE xref_p52_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p52_not_deleted TO reader;


--
-- Name: TABLE xref_p52_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p52_not_deleted_old TO reader;


--
-- Name: TABLE xref_p53_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p53_deleted TO reader;


--
-- Name: TABLE xref_p53_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p53_deleted_old TO reader;


--
-- Name: TABLE xref_p53_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p53_not_deleted TO reader;


--
-- Name: TABLE xref_p53_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p53_not_deleted_old TO reader;


--
-- Name: TABLE xref_p54_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p54_deleted TO reader;


--
-- Name: TABLE xref_p54_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p54_not_deleted TO reader;


--
-- Name: TABLE xref_p55_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p55_deleted TO reader;


--
-- Name: TABLE xref_p55_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p55_deleted_old TO reader;


--
-- Name: TABLE xref_p55_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p55_not_deleted TO reader;


--
-- Name: TABLE xref_p55_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p55_not_deleted_old TO reader;


--
-- Name: TABLE xref_p5_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p5_deleted TO reader;


--
-- Name: TABLE xref_p5_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p5_not_deleted TO reader;


--
-- Name: TABLE xref_p6_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p6_deleted TO reader;


--
-- Name: TABLE xref_p6_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p6_deleted_old TO reader;


--
-- Name: TABLE xref_p6_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p6_not_deleted TO reader;


--
-- Name: TABLE xref_p6_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p6_not_deleted_old TO reader;


--
-- Name: TABLE xref_p7_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p7_deleted TO reader;


--
-- Name: TABLE xref_p7_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p7_deleted_old TO reader;


--
-- Name: TABLE xref_p7_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p7_not_deleted TO reader;


--
-- Name: TABLE xref_p7_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p7_not_deleted_old TO reader;


--
-- Name: TABLE xref_p8_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p8_deleted TO reader;


--
-- Name: TABLE xref_p8_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p8_deleted_old TO reader;


--
-- Name: TABLE xref_p8_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p8_not_deleted TO reader;


--
-- Name: TABLE xref_p8_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p8_not_deleted_old TO reader;


--
-- Name: TABLE xref_p9_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p9_deleted TO reader;


--
-- Name: TABLE xref_p9_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p9_deleted_old TO reader;


--
-- Name: TABLE xref_p9_not_deleted; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p9_not_deleted TO reader;


--
-- Name: TABLE xref_p9_not_deleted_old; Type: ACL; Schema: rnacen; Owner: rnacen
--

GRANT SELECT ON TABLE rnacen.xref_p9_not_deleted_old TO reader;


--
-- PostgreSQL database dump complete
--

