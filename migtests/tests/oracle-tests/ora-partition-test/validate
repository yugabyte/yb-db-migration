#!/usr/bin/env python3

import yb

def main():
	yb.run_checks(migration_completed_checks)

EXPECTED_ROW_COUNT = {
	'accounts_list_partitioned': 0,
	'accounts_list_partitioned_p_northcentral': 153926,
	'accounts_list_partitioned_p_northeast': 230330,
	'accounts_list_partitioned_p_northwest': 115509,
	'accounts_list_partitioned_p_southcentral': 115687,
	'accounts_list_partitioned_p_southeast': 153907,
	'accounts_list_partitioned_p_southwest': 230641,
	'orders_interval_partition': 0,
	'orders_interval_partition_interval_partition_less_than_2015': 1,
	'orders_interval_partition_interval_partition_less_than_2016': 13,
    'orders_interval_partition_interval_partition_less_than_2015': 79,
	'orders_interval_partition_interval_partition_less_than_2016': 12,
    'order_items_range_partitioned': 0,
	'order_items_range_partitioned_p1': 49,
	'order_items_range_partitioned_p2': 20,
    'order_items_range_partitioned_p3': 10,
	'SALES_HASH': 0,
    'sales_hash_p1': 315607,
    'sales_hash_p2': 526679,
    'sales_hash_p3': 473453,
    'sales_hash_p4': 684261
}

def migration_completed_checks(tgt, tag):
	table_list = tgt.get_table_names("public")
	print("table_list:", table_list)
	assert len(table_list) == 21
    
	returned_row_count = tgt.row_count_of_all_tables("public")
	for table_name, row_count in EXPECTED_ROW_COUNT.items():
		print(f"table_name: {table_name}, row_count: {returned_row_count[table_name]}")
		assert row_count == returned_row_count[table_name]

if __name__ == "__main__":
	main()
