#!/usr/bin/env python3

import yb
import collections

def main():
	yb.run_checks(migration_completed_checks)

EXPECTED_ROW_COUNT = {
	'numeric_types_number': 4,
	'numeric_types_float': 5,
	'numeric_types_binary_float': 5,
	'numeric_types_binary_double': 5,
	'numeric_types': 8,
	'date_time_types': 10,
	'interval_types': 4,
	'char_types': 6,
	'long_type': 3,
	'raw_type': 6,
	'number_ps': 1
}

EXPECTED_DATA_TYPES = {
	'numeric_types_number': ['numeric'],
	'numeric_types_float': ['double precision'],
	'numeric_types_binary_float': ['double precision'],
	'numeric_types_binary_double': ['double precision'],
	'numeric_types': ['numeric','double precision','double precision','double precision'],
	'date_time_types': ['timestamp without time zone','timestamp without time zone','timestamp with time zone','timestamp with time zone'],
	'interval_types': ['interval','interval'],
	'char_types': ['character varying','character varying','character','character'],
	'long_type': ['text'],
	'raw_type': ['bytea','bytea'],
	'number_ps': ['numeric','smallint','real','numeric','real']
}

def migration_completed_checks(tgt):
	# Validation to check for matching row counts
	got_row_count = tgt.row_count_of_all_tables("public")
	for table_name, row_count in EXPECTED_ROW_COUNT.items():
		print(f"table_name: {table_name}, row_count: {got_row_count[table_name]}")
		assert row_count == got_row_count[table_name]
#=============================================================================
	fetched_datatypes_schema = tgt.fetch_datatypes_of_all_tables_in_schema("public")
	for table_name, data_types in fetched_datatypes_schema.items():
		print(f"Table Name: {table_name}, data_types: {fetched_datatypes_schema[table_name]}")
		# assert set(EXPECTED_DATA_TYPES[table_name]) == set(fetched_datatypes_schema[table_name])

if __name__ == "__main__":
	main()