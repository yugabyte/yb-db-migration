#!/usr/bin/env python3

import yb

def main():
	yb.run_checks(migration_completed_checks)

EXPECTED_ROW_COUNT = {
	'order_items_range_partitioned': 79,
	'order_items_range_partitioned_p1': 49,
	'order_items_range_partitioned_p2': 20,
 	'order_items_range_partitioned_p3': 10,
	'accounts_list_partitioned': 42,
	'accounts_list_partitioned_p_northcentral': 5,
	'accounts_list_partitioned_p_northeast': 11,
	'accounts_list_partitioned_p_northwest': 6,
	'accounts_list_partitioned_p_southcentral': 6,
	'accounts_list_partitioned_p_southeast': 7,
	'accounts_list_partitioned_p_southwest': 7,
	'orders_interval_partition': 105,
	'orders_interval_partition_interval_partition_less_than_2015': 1,
	'orders_interval_partition_interval_partition_less_than_2016': 13,
	'orders_interval_partition_interval_partition_less_than_2017': 79,
	'orders_interval_partition_interval_partition_less_than_2018': 12,
	'sales_hash': 100,
	'sales_hash_p1': 43,
	'sales_hash_p2': 26,
	'sales_hash_p3': 10,
	'sales_hash_p4': 21
}

#=============================================================================

def migration_completed_checks(tgt):
	got_row_count = tgt.row_count_of_all_tables("public")
	for table_name, row_count in EXPECTED_ROW_COUNT.items():
		print(f"table_name: {table_name}, row_count: {got_row_count[table_name]}")
		assert row_count == got_row_count[table_name]
	
if __name__ == "__main__":
	main()